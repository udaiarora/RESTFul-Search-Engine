<HTML>
<!-- This page produced Tue Jul  6 11:09:12 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Using SAS Files : Working with SAS Files on Disk </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0425681.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z1106548.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0380567.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS Companion for the CMS Environment                                                                                     </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="zaccdisk">Working with SAS Files on Disk</A></FONT></H1>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="zskwrite">Writing to SAS Files on Disk</A></FONT></B></TD></TR></TABLE>

<P><A name="z0592649">&#13; To write a disk-format SAS file, you
usually need only to specify
the two-level filename in the appropriate SAS statement.  That is, in most
cases you do not need to assign a libref to the file because SAS automatically
assigns librefs for permanent SAS files on disk. (However, see </A><A href="#ziskwhen">When to Assign a Libref for a SAS File on Disk</A> 



for exceptions and for performance considerations.) For example, suppose you
specify the SAS filename MYLIB.TASTEST in a SAS statement.  In CMS terms,
this is equivalent to filename TASTEST and filetype MYLIB:  
<P>
<TABLE cellpadding="6" cellspacing="0" border="0">


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">SAS name</TD>
  
<TD ><BR></TD>
  
<TD  align="LEFT" valign="TOP">CMS name</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP"><CODE><B>MYLIB.TASTEST</B></CODE></TD>
  
<TD  align="LEFT" valign="TOP"><BR></TD>
  
<TD  align="LEFT" valign="TOP"><CODE><B>TASTEST
MYLIB</B></CODE></TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">libref.filename</TD>
  
<TD ><BR></TD>
  
<TD  align="LEFT" valign="TOP">filename filetype</TD>
</TR>

</TABLE>

<BR>
<P>Because the SAS filename
includes no filemode or directory
identifier, SAS uses the following procedure to determine where to write the
file: 
<OL START="1" type="1">
<LI>First SAS checks to see whether the libref MYLIB
was previously assigned by a SAS LIBNAME statement or function and is still
in effect.  If so, SAS writes the new file to the minidisk or SFS directory
that was indicated by the LIBNAME statement or function.<P>

<LI>If MYLIB is not a current libref, then SAS checks
to see whether MYLIB was previously assigned as a DDname by a CMS FILEDEF
command and is still in effect.  If so, SAS writes the new file to the minidisk
or SFS directory that was indicated by the FILEDEF command.<P>

<LI>If MYLIB is neither a current libref nor a current
DDname, then SAS searches all accessed minidisks or SFS directories (in the
standard search order) to see if there are any SAS files that have the filetype
MYLIB.  To do this, SAS must read each file to determine whether it is a SAS
file.  In some cases this can cause significant overhead, which can be avoided
by using the LIBNAME statement or function.  If SAS finds a SAS file with
the filetype MYLIB, then it writes the new file to the same minidisk or SFS
directory (unless the minidisk is accessed as READ-only, and then an error
message is issued).<P>

<LI>If no matching filetype is found, then SAS writes
the file to the first R/W disk, using the libref MYLIB as the filetype.<P>
</OL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="ziskread">Reading SAS Files on Disk</A></FONT></B></TD></TR></TABLE>

<P><A name="z0592655">&#13; To read an existing SAS file that is in
disk format, you usually
need only to specify the two-level filename in the appropriate SAS statement.
That is, in most cases, you do not need to assign a libref to the file.  (However,
see </A><A href="#ziskwhen">When to Assign a Libref for a SAS File on Disk</A> 



for exceptions and performance considerations.) For example, suppose you specify
the SAS file MYLIB.TASTEST in a SAS statement.  In CMS terms, this is equivalent
to filename TASTEST and filetype MYLIB:  
<P>
<TABLE cellpadding="6" cellspacing="0" border="0">


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">SAS name</TD>
  
<TD ><BR></TD>
  
<TD  align="LEFT" valign="TOP">CMS name</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP"><CODE><B>MYLIB.TASTEST</B></CODE></TD>
  
<TD  align="LEFT" valign="TOP"><BR></TD>
  
<TD  align="LEFT" valign="TOP"><CODE><B>TASTEST
MYLIB</B></CODE></TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">libref.filename</TD>
  
<TD ><BR></TD>
  
<TD  align="LEFT" valign="TOP">filename filetype</TD>
</TR>

</TABLE>

<BR>
<P>Because the SAS filename
includes no filemode or directory
identifier, SAS uses the following procedure to locate the file: 
<OL START="1" type="1">
<LI>First SAS checks to see whether the libref MYLIB
was previously assigned by a SAS LIBNAME statement or function and is still
in effect.  If so, SAS refers to the minidisk or SFS directory that was indicated
by the LIBNAME statement or function.<P>

<LI>If MYLIB is not a current libref, then SAS checks
to see whether MYLIB was previously assigned as a DDname by a CMS FILEDEF
command and is still in effect.  If so, SAS refers to the minidisk or SFS
directory that was indicated by the FILEDEF command.<P>

<LI>If MYLIB is neither a current libref nor a current
DDname, then SAS searches all accessed minidisks or SFS directories (in the
standard search order) to locate the file TASTEST MYLIB. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If the file exists on more than one minidisk or directory, SAS stops searching
as soon as it finds the first TASTEST MYLIB file. If you have multiple files
with the same name and filetype on different minidisks or directories, and
you want to read a file that would not be located first according to the standard
search order, then you must  assign and use a libref.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P>
</OL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="ziskwhen">When to Assign a Libref for a SAS File on Disk</A></FONT></B></TD></TR></TABLE>

<P><A name="z0592661">&#13;
 
Under CMS, when you are reading from and writing to <B>disk</B>, you
do not always have to assign a libref. (See </A><A href="#ziskread">Reading SAS Files on Disk</A>and <A href="#zskwrite">Writing to SAS Files on Disk</A> 



for explanations of why librefs generally are not required for disk-format
files.) You may want to do so, though, for portability and clarity.
<P>In the following examples, <B>filemode</B> can
be specified in either of two ways:
<P>
<UL>

<LI>a filemode letter that represents an accessed
minidisk or an SFS directory. <P>

<LI>an SFS directory name, which can be fully qualified
(for example, FILEPOOL:USERID.DIR) or relative to the current user (for example,
.DIR).<P>
</UL>

<P>You should assign a libref under the following circumstances: 
<P>
<UL>

<LI>You want to read from or write
to a SAS file that
is not on your default disk.  A libref is not strictly necessary in this case,
but using one speeds processing, because SAS does not have to search multiple
disks in order to locate the file.  Use the following syntax:
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
LIBNAME <I>libref 'physical-name'</I>;
</TD></TR></TABLE>
<P>A
physical name can be specified as either a filemode
or an SFS directory.
<P>For example:
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
LIBNAME MYLIB '.MYLIB';
</TD></TR></TABLE><P>

<LI>You want to use a
libref as an alias for the CMS
filetype (valid only with the BASE engine).  Use the following syntax:
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
LIBNAME <I>libref 'filetype
filemode'</I>;
</TD></TR></TABLE>
<P>For example:  

<PRE>LIBNAME MYLIB 'REPORTS A';</PRE> <P>

<LI>You want to speed processing by telling SAS which
library engine to use. Use the following syntax:
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
LIBNAME <I>libref  engine</I>
'<I>physical-filename</I>';
</TD></TR></TABLE>
<P>For example:  

<PRE>LIBNAME MYLIB V6 'REPORTS A';</PRE> 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If you omit the <B>engine</B> argument,
BASE is assumed by default. &nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P>
</UL>
   

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0425681.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z1106548.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0380567.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#zaccdisk">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>