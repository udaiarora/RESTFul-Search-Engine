<HTML>
<HEAD>
<TITLE>PROC NETFLOW Statement</TITLE>
<LINK REL="STYLESHEET" TYPE="text/css" HREF="../sas.css">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<A NAME="netflownetflow">&#13;</A>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A NAME="topofpage" HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect14.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect16.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
</TR>
</TABLE>
<TABLE BGCOLOR="#CCCC99" WIDTH="100%" CELLPADDING=4>
<TR>
  <TD VALIGN=MIDDLE CLASS="chaphead"><I><FONT SIZE="2">The NETFLOW Procedure</FONT></I></TD>
</TR>
</TABLE><BR>
<P><!--End of Navigation Panel-->
<H2>PROC NETFLOW Statement</H2>
<A NAME="idxnet0496">&#13;</A><A NAME="idxnet0497">&#13;</A><A NAME="idxnet0498">&#13;</A><DL><DD><B CLASS="ssbeleven">PROC NETFLOW</B> <I CLASS="ssieleven"> options <SPAN CLASS="ssbeleven"><B>;</B></SPAN></I></DL><BR>This statement invokes the procedure.
The following options and the options listed with the <A HREF="sect30.htm#netflowreset">RESET</A> statement
can appear in the PROC NETFLOW statement.
<BR><BR><H3><I>Overview of PROC NETFLOW Options</I></H3>
The options available with the PROC NETFLOW statement are summarized
by purpose in <A HREF="sect15.htm#nettnet">Table 4.18</A>.
<BR><BR><A NAME="idxnet0499">&#13;</A><A NAME="idxnet0500">&#13;</A><A NAME="idxnet0501">&#13;</A><A NAME="idxnet0502">&#13;</A><A NAME="idxnet0503">&#13;</A><A NAME="idxnet0504">&#13;</A><A NAME="idxnet0505">&#13;</A><A NAME="idxnet0506">&#13;</A><BR><BR></P><A NAME="nettnet"><SPAN CLASS="ssften"><B>Table 4.18:</B> Functional Summary, 
<A HREF="sect15.htm#netflownetflow">PROC NETFLOW</A> statement</SPAN></A>
<BR><BR><TABLE COLS=3 FRAME=ABOVE RULES=GROUPS CELLPADDING=5 CELLSPACING=0 BGCOLOR="#F0F0F0" BORDER=1><COL ALIGN=JUSTIFY><COL><COL>
<TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#BBBBBB" ><B>
                      <FONT COLOR="#003399" FACE="Verdana, Helvetica, Helv"><SPAN CLASS="ssbthirteen"><B>Description</B></SPAN></FONT></B>
                      </TD>
                     <TD BGCOLOR="#BBBBBB"  ALIGN=LEFT NOWRAP><B>
                      <FONT COLOR="#003399" FACE="Verdana, Helvetica, Helv"><SPAN CLASS="ssbthirteen"><B>Statement</B></SPAN></FONT></B>
                      </TD>
                     <TD BGCOLOR="#BBBBBB"  ALIGN=LEFT NOWRAP><B>
                      <FONT COLOR="#003399" FACE="Verdana, Helvetica, Helv"><SPAN CLASS="ssbthirteen"><B>Option</B></SPAN></FONT></B>
                      </TD>
                     </TR><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP COLSPAN=2><B>Input Data Set Options</B></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">arcs input data set</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowarcdata">ARCDATA</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">nodes input data set</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownodedata">NODEDATA</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">constraint input data set</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowcondata">CONDATA</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP COLSPAN=2><B>Output Data Set Options</B></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">unconstrained primal solution data set</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowarcout">ARCOUT</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">unconstrained dual solution data set</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownodeout">NODEOUT</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">constrained primal solution data set</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowconout">CONOUT</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">constrained dual solution data set</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowdualout">DUALOUT</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP COLSPAN=2><B>Options for Networks</B></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">default arc cost</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowdefcost">DEFCOST</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">default arc capacity</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowdefcapacity">DEFCAPACITY</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">default arc lower flow bound</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowdefminflow">DEFMINFLOW</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">network's only supply node</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowsource">SOURCE</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD"><A HREF="sect15.htm#netflowsource">SOURCE</A>'s supply capability</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowsupplyopt">SUPPLY</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">network's only demand node</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowsink">SINK</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD"><A HREF="sect15.htm#netflowsink">SINK</A>'s demand</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowdemandopt">DEMAND</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">excess supply or demand is conveyed 
through network</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowthrunet">THRUNET</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">find maximal flow between <A HREF="sect15.htm#netflowsource">SOURCE</A> and <A HREF="sect15.htm#netflowsink">SINK</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">cost of bypass arc when solving 
<A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> problem</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowbypassdiv">BYPASSDIV</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">find shortest path from <A HREF="sect15.htm#netflowsource">SOURCE</A> to <A HREF="sect15.htm#netflowsink">SINK</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowshortpath">SHORTPATH</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP COLSPAN=2><B>Miscellaneous Options</B></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">infinity value</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowinfinity">INFINITY</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">do constraint row and/or nonarc variable 
column coefficient scaling, or neither</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowscale">SCALE</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">maximization instead of minimization</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowmaximize">MAXIMIZE</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">use warm start solution</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowwarm">WARM</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">all-artificial starting solution</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowallart">ALLART</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP COLSPAN=2><B>Data Set Read Options</B></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD"><A HREF="sect15.htm#netflowcondata">CONDATA</A> has <A HREF="sect42.htm#netflowsparseformat">sparse</A> data format</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowscdata">SPARSECONDATA</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">default constraint type</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowdefcontype">DEFCONTYPE</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">special <A HREF="sect18.htm#netflowcolumn">COLUMN</A> variable value</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowtypeobs">TYPEOBS</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">special <A HREF="sect18.htm#netflowcolumn">COLUMN</A> variable value</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowrhsobs">RHSOBS</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">is used to interpret arc and nonarc 
variable names in the <A HREF="sect15.htm#netflowcondata">CONDATA</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownamectrl">NAMECTRL</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">no new nonarc variables</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowsnd">SAME_NONARC_DATA</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">no nonarc data in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowarcsonlyarcdata">ARCS_ONLY_ARCDATA</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">data for an arc found in only one obs of <A HREF="sect15.htm#netflowarcdata">ARCDATA</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowasingleobs">ARC_SINGLE_OBS</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">data for an constraint found in only one obs of <A HREF="sect15.htm#netflowcondata">CONDATA</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowasingleobs">CON_SINGLE_OBS</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">data for a coefficient found once in <A HREF="sect15.htm#netflowcondata">CONDATA</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownonreplic">NON_REPLIC</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">data is grouped, exploited during data read</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowgrouped">GROUPED</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP COLSPAN=2><B>Problem Size (approx.) Options</B></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">number of nodes</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownnodes">NNODES</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">number of arcs</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownarcs">NARCS</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">number of nonarc variables</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownnas">NNAS</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">number of coefficients</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowncoefs">NCOEFS</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">number of constraints</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowncons">NCONS</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP COLSPAN=2><B>Memory Control Options</B></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">issue memory usage messages to SASLOG</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowmemrep">MEMREP</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">number of bytes to use for main memory</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowbytes">BYTES</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">proportion of memory used by frequently 
accessed arrays</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowcorefactor">COREFACTOR</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">memory allocated for LU factors</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowdwia">DWIA</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">linked list for updated column</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowsparsep2">SPARSEP2</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">use 2-dimensional array instead of LU 
factor for basis matrix</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowinvd2d">INVD_2D</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">maximum bytes for a single array</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflowmaxarraybytes">MAXARRAYBYTES</A>=</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP COLSPAN=2><B>Interior Point algorithm Options</B></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">use Interior Point algorithm</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect15.htm#netflownetflow">NETFLOW</A></TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><A HREF="sect30.htm#netflowintpoint">INTPOINT</A></TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>&#160;</TD></TR></TBODY>
</TABLE>

<BR><BR>The following options can be specified only in the PROC NETFLOW
statement and are relevant to the start of the procedure.
Once specified, they cannot be changed.
<BR><BR><H3><I>Data Set Options</I></H3>
<A NAME="idxnet0507">&#13;</A><A NAME="idxnet0508">&#13;</A><A NAME="idxnet0509">&#13;</A><A NAME="idxnet0510">&#13;</A><A NAME="idxnet0511">&#13;</A><A NAME="idxnet0512">&#13;</A>This section briefly describes all the input and output
data sets used by PROC NETFLOW.
The <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set, <A HREF="sect15.htm#netflownodedata">NODEDATA</A>= data set, and <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set
can contain SAS variables
that have special names, for instance <SPAN CLASS="ssfeleven">_CAPAC_</SPAN>, <SPAN CLASS="ssfeleven">_COST_</SPAN>, and <SPAN CLASS="ssfeleven">_HEAD_</SPAN>.
PROC NETFLOW looks for such variables if
you do not give explicit variable list specifications. If
a SAS variable with a special name is found and that SAS variable
is not in another variable list specification, PROC NETFLOW
determines that
values of the SAS variable are to be interpreted in a special way.
By using SAS variables that have special names, you may not need
to have any variable list specifications.
<BR><BR><DL>
<DT CLASS="ssbten"><A NAME="netflowarcdata"><B CLASS="ssbten">ARCDATA=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0142">&#13;</A><A NAME="idxnet0143">&#13;</A><A NAME="idxnet0144">&#13;</A>names the data set that
contains arc and, optionally, nonarc variable information
and nodal supply/demand data.
The ARCDATA= data set must be specified in all PROC NETFLOW
statements.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">ARCOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowarcout"><B CLASS="ssbten">AOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0145">&#13;</A><A NAME="idxnet0146">&#13;</A><A NAME="idxnet0147">&#13;</A><A NAME="idxnet0148">&#13;</A><A NAME="idxnet0149">&#13;</A><A NAME="idxnet0150">&#13;</A>names the output data set that receives all arc and nonarc variable data, 
including flows or values, and other information
concerning the unconstrained optimal solution.  The supply and demand
information can also be found in the ARCOUT= data set.
Once optimization
that considers side constraints starts, you are not able
to obtain an ARCOUT= data set.  Instead, use the <A HREF="sect15.htm#netflowconout">CONOUT</A>= data set 
to get the current solution.
See the <A HREF="sect43.htm#netflowarcconout">&#34;ARCOUT= and CONOUT= Data Sets&#34;</A> section for more information.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowcondata"><B CLASS="ssbten">CONDATA=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0151">&#13;</A><A NAME="idxnet0152">&#13;</A><A NAME="idxnet0153">&#13;</A>names the data set that contains the side constraint data.
The data set can also
contain other data such as arc costs, capacities,
lower flow bounds, nonarc variable upper and lower bounds, and
objective function coefficients.  
PROC NETFLOW needs a CONDATA= data set to solve a constrained problem
or a Linear Programming problem. See the <A HREF="sect42.htm#netflowcccondata">&#34;CONDATA= Data Set&#34;</A> section
for more information.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">CONOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowconout"><B CLASS="ssbten">COUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0154">&#13;</A><A NAME="idxnet0155">&#13;</A><A NAME="idxnet0156">&#13;</A><A NAME="idxnet0157">&#13;</A><A NAME="idxnet0158">&#13;</A><A NAME="idxnet0159">&#13;</A>names the output data set that receives an optimal primal solution to
the problem obtained by performing optimization that considers
the side constraints.  
See the <A HREF="sect43.htm#netflowarcconout">&#34;ARCOUT= and CONOUT= Data Sets&#34;</A> section for more information.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">DUALOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowdualout"><B CLASS="ssbten">DOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0160">&#13;</A><A NAME="idxnet0161">&#13;</A><A NAME="idxnet0162">&#13;</A><A NAME="idxnet0163">&#13;</A><A NAME="idxnet0164">&#13;</A><A NAME="idxnet0165">&#13;</A>names the output data set that receives an optimal dual solution
to the problem obtained by performing optimization that
considers the side constraints.  
See the <A HREF="sect43.htm#netflownodedualout">&#34;NODEOUT= and DUALOUT= Data Sets&#34;</A> section for more information.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">NODEDATA=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflownodedata"><B CLASS="ssbten">DUALIN=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0166">&#13;</A><A NAME="idxnet0167">&#13;</A><A NAME="idxnet0168">&#13;</A><A NAME="idxnet0169">&#13;</A><A NAME="idxnet0170">&#13;</A><A NAME="idxnet0171">&#13;</A>names the data set that
contains the node supply and demand specifications.
You do not need observations in the NODEDATA= data set
for transshipment nodes. (Transshipment nodes neither
supply nor demand flow.) All nodes are assumed to be
transshipment nodes until supply or demand data indicate
otherwise.  It is acceptable for some arcs to be directed toward
supply nodes or away from demand nodes.
<BR><BR>The use of the NODEDATA= data set
is optional in the PROC NETFLOW statement provided that,
if the NODEDATA= data set is not used,
supply and demand details are specified by other means.
Other means include using the <A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> or <A HREF="sect15.htm#netflowshortpath">SHORTPATH</A> option, <A HREF="sect37.htm#netflowsupply">SUPPLY</A>
or <A HREF="sect21.htm#netflowdemand">DEMAND</A> list variables (or both) in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set, and the
<A HREF="sect15.htm#netflowsource">SOURCE</A>=, <A HREF="sect15.htm#netflowsupplyopt">SUPPLY</A>=, <A HREF="sect15.htm#netflowsink">SINK</A>=, or 
<A HREF="sect15.htm#netflowdemandopt">DEMAND</A>= option in the PROC
NETFLOW statement.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflownodeout"><B CLASS="ssbten">NODEOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0172">&#13;</A><A NAME="idxnet0173">&#13;</A><A NAME="idxnet0174">&#13;</A>names the output data set that receives
all information about nodes (supply and demand and nodal
dual variable values) and other information concerning the
optimal
solution found by the optimizer when neglecting side
constraints.  Once optimization that considers side constraints
starts, you are not able to obtain a NODEOUT= data set.
Instead, use the <A HREF="sect15.htm#netflowdualout">DUALOUT</A>= data set to get the current solution
dual information.
See the <A HREF="sect43.htm#netflownodedualout">&#34;NODEOUT= and DUALOUT= Data Sets&#34;</A> section for a more complete description.
<BR><BR></DD>
</DL>
<H3><I>General Options</I></H3>
The following is a list of options you can use with
PROC NETFLOW.  The options are listed in alphabetical order.
<BR><BR><DL>
<DT CLASS="ssbten"><A NAME="netflowallart"><B CLASS="ssbten">ALLART</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0179">&#13;</A><A NAME="idxnet0180">&#13;</A><A NAME="idxnet0181">&#13;</A>indicates that PROC NETFLOW uses an all artificial initial solution
(Kennington and Helgason 1980, p. 68) instead of the
default <EM>good path</EM>  method for determining an initial solution
(Kennington and Helgason 1980, p. 245).
<A NAME="idxnet0182">&#13;</A><A NAME="idxnet0183">&#13;</A>The ALLART initial solution is generally not as good; more iterations
are usually required before the optimal solution is obtained.
However, because less time is used when setting
up an ALLART start, it can offset the added
expenditure of CPU time in later computations.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowarcsonlyarcdata"><B CLASS="ssbten">ARCS_ONLY_ARCDATA</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0184">&#13;</A><A NAME="idxnet0185">&#13;</A><A NAME="idxnet0186">&#13;</A>indicates that data for only arcs are in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set.
When PROC NETFLOW reads the data in <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set,
memory would not be wasted to receive data for nonarc variables.
The read might then be performed faster.
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowasingleobs"><B CLASS="ssbten">ARC_SINGLE_OBS</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0187">&#13;</A><A NAME="idxnet0188">&#13;</A><A NAME="idxnet0189">&#13;</A>indicates that for all arcs and nonarc variables,
data for each arc or nonarc variable is found in only one observation of the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set.
When reading the data in <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set,
PROC NETFLOW knows that the data in an observation is for an arc or a nonarc variable that has not
had data previously read that needs to be checked for consistency.
The read might then be performed faster.
<BR><BR>If you specify ARC_SINGLE_OBS, PROC NETFLOW automatically works
as if GROUPEDnetflowgrouped=ARCDATA is also specified.
<A NAME="idxnet0190">&#13;</A><A NAME="idxnet0191">&#13;</A>See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">BYPASSDIVIDE=<SPAN CLASS="ssiten"><I>b</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">BYPASSDIV=<SPAN CLASS="ssiten"><I>b</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowbypassdiv"><B CLASS="ssbten">BPD=<SPAN CLASS="ssiten"><I>b</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0192">&#13;</A><A NAME="idxnet0193">&#13;</A><A NAME="idxnet0194">&#13;</A><A NAME="idxnet0195">&#13;</A><A NAME="idxnet0196">&#13;</A><A NAME="idxnet0197">&#13;</A><A NAME="idxnet0198">&#13;</A><A NAME="idxnet0199">&#13;</A><A NAME="idxnet0200">&#13;</A>should be used only when the <A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> option has been specified; that is,
PROC NETFLOW is solving a maximal flow problem.
<A NAME="idxnet0201">&#13;</A><A NAME="idxnet0202">&#13;</A>PROC NETFLOW prepares to solve maximal flow problems by setting
up a bypass arc. This arc is directed from the <A HREF="sect15.htm#netflowsource">SOURCE</A> to the
<A HREF="sect15.htm#netflowsink">SINK</A> and will eventually convey flow equal to
<A HREF="sect15.htm#netflowinfinity">INFINITY</A> minus the maximal flow through the network.
<A NAME="idxnet0203">&#13;</A><A NAME="idxnet0204">&#13;</A><A NAME="idxnet0205">&#13;</A><A NAME="idxnet0206">&#13;</A><A NAME="idxnet0207">&#13;</A><A NAME="idxnet0208">&#13;</A>The cost of the bypass arc must be expensive enough
to drive flow through the network, rather than through the bypass
arc. However, the cost of the bypass arc must be less than the
cost of artificial variables (otherwise these might have nonzero
optimal value and a false infeasibility error will result). Also,
the cost of the bypass arc must be greater than the eventual total
cost of the maximal flow, which can be nonzero if some network arcs
have nonzero costs. The cost of the bypass is set to the value of the 
<A HREF="sect15.htm#netflowinfinity">INFINITY</A>= option. Valid values for the BYPASSDIV= option
must be greater
than or equal to 1.1.
<BR><BR>If there are no nonzero costs of arcs in the <A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> problem, the
cost of the bypass arc is set to 1.0 (-1.0 if maximizing) if you do
not specify the BYPASSDIV= option. 
The reduced costs in the <A HREF="sect15.htm#netflowarcout">ARCOUT</A>= data set and 
the <A HREF="sect15.htm#netflowconout">CONOUT</A>= data set
will correctly reflect the value that would be added to the
maximal flow if the capacity of the arc is increased by one unit.
If there are nonzero costs, or if you specify the BYPASSDIV= option, the reduced
costs may be contaminated by the cost of the bypass arc and no economic
interpretation can be given to reduced cost values.
The default value for the BYPASSDIV= option (in the presence of nonzero arc costs)
is 100.0.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowbytes"><B CLASS="ssbten">BYTES=<SPAN CLASS="ssiten"><I>b</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0209">&#13;</A><A NAME="idxnet0210">&#13;</A><A NAME="idxnet0211">&#13;</A>indicates the size of the main working memory (in bytes) that
PROC NETFLOW will allocate.
The default value for the BYTES= option is
near to the number of bytes of the largest contiguous memory that
can be allocated for this purpose.
The working memory is used to store all the arrays
and buffers used by PROC NETFLOW. If this memory has a size
smaller than what is required to store all arrays and buffers,
PROC NETFLOW uses various schemes that page information between
memory and disk.
<BR><BR>PROC NETFLOW uses more memory than the main working
memory. The additional memory requirements cannot be
determined at the time when the main working memory is allocated.
For example, every time an output data set is created,
some additional memory is required. Do not
specify a value for the BYTES= option equal to the size of available memory.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowcsingleobs"><B CLASS="ssbten">CON_SINGLE_OBS</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0212">&#13;</A><A NAME="idxnet0213">&#13;</A><A NAME="idxnet0214">&#13;</A>improves how the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set is read.
How it works depends on whether the <A HREF="sect15.htm#netflowcondata">CONDATA</A> has a
<A HREF="sect42.htm#netflowdenseformat">dense</A> or <A HREF="sect42.htm#netflowsparseformat">sparse</A> format.
<A NAME="idxnet0215">&#13;</A><A NAME="idxnet0216">&#13;</A><A NAME="idxnet0217">&#13;</A><A NAME="idxnet0218">&#13;</A>If <A HREF="sect15.htm#netflowcondata">CONDATA</A> has the <A HREF="sect42.htm#netflowdenseformat">dense</A> format, specifying CON_SINGLE_OBS indicates 
that, for each constraint, data for each can be found in only 
one observation of <A HREF="sect15.htm#netflowcondata">CONDATA</A>.
<BR><BR>If <A HREF="sect15.htm#netflowcondata">CONDATA</A> has a <A HREF="sect42.htm#netflowsparseformat">sparse</A> format, and data for each 
arc and nonarc variablecan be found in only one
observation of <A HREF="sect15.htm#netflowcondata">CONDATA</A>, then specify the CON_SINGLE_OBS option.
If there are <SPAN CLASS="mathfont"><I>n</I></SPAN> SAS variables in the <A HREF="sect32.htm#netflowrow">ROW</A> and <A HREF="sect17.htm#netflowcoef">COEF</A> list,   
then each arc or nonarc can have at most <SPAN CLASS="mathfont"><I>n</I></SPAN> constraint coefficients in the model.
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">COREFACTOR=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowcorefactor"><B CLASS="ssbten">CF=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0219">&#13;</A><A NAME="idxnet0220">&#13;</A><A NAME="idxnet0221">&#13;</A><A NAME="idxnet0222">&#13;</A><A NAME="idxnet0223">&#13;</A><A NAME="idxnet0224">&#13;</A>enables you to specify the maximum
proportion of memory to be used by the arrays
frequently accessed by PROC NETFLOW.
PROC NETFLOW strives to maintain all information
required during optimization in core.
If the amount of available memory is not great enough to
store the arrays completely in core, either initially or
as memory requirements grow, PROC NETFLOW can change the
memory management scheme it uses.
Large problems can still be solved.
When necessary, PROC NETFLOW transfers data from random access
memory (RAM)
or core that can be accessed quickly but is of limited size
to slower access large capacity disk memory.
This is called <EM>paging</EM>.
<BR><BR>Some of the arrays and buffers used during constrained
optimization either vary in size, are not required as frequently as
other arrays, or are not required throughout the Simplex iteration.
Let <SPAN CLASS="mathfont"><I>a</I></SPAN> be the amount of memory in bytes required to
store frequently accessed arrays of nonvarying size.
Specify the <A HREF="sect15.htm#netflowmemrep">MEMREP</A> option in the PROC NETFLOW statement to get the
value for <SPAN CLASS="mathfont"><I>a</I></SPAN> and a report of memory usage.
<A NAME="idxnet0225">&#13;</A><A NAME="idxnet0226">&#13;</A>If the size of the main working memory <A HREF="sect15.htm#netflowbytes">BYTES</A>=<SPAN CLASS="mathfont"><I>b</I></SPAN> multiplied by
COREFACTOR=<SPAN CLASS="mathfont"><I>c</I></SPAN> is greater
than <SPAN CLASS="mathfont"><I>a</I></SPAN>, PROC NETFLOW keeps the
frequently accessed arrays of
nonvarying size resident in core throughout
the optimization.
<A NAME="idxnet0227">&#13;</A><A NAME="idxnet0228">&#13;</A>If the other arrays cannot fit into core,
they are paged in and out of the remaining part of the
main working memory.
<BR><BR>If <SPAN CLASS="mathfont"><I>b</I></SPAN> multiplied by <SPAN CLASS="mathfont"><I>c</I></SPAN> is
less than
<SPAN CLASS="mathfont"><I>a</I></SPAN>, PROC NETFLOW uses a
different memory scheme.
The working memory is used
to store only the arrays needed
in the part of the algorithm being executed.
If necessary, these arrays are read from disk into the main
working area. Paging, if required, is done for all these arrays, and
sometimes information is written back to disk at the end of that part
of the algorithm.
This memory scheme is not as fast as the other memory schemes.
However, problems can be solved with memory that is too small to
store every array.
<BR><BR>PROC NETFLOW is capable of solving very large problems in a
modest amount of available memory.
However, as more time is spent doing input/output operations,
the speed of PROC NETFLOW decreases.
It is important to choose the value of the COREFACTOR= option carefully.
If COREFACTOR is too small, the memory scheme that needs to be
used might not be as efficient as another that could have been
used had a larger COREFACTOR been specified.
If COREFACTOR is too large, too much of the main working memory
is occupied by the frequently accessed, nonvarying sized arrays,
leaving too little for the other arrays.
The amount of input/output operations for these other arrays
can be so high that another memory scheme might have been
used more beneficially.
<BR><BR>The valid values of COREFACTOR=<SPAN CLASS="mathfont"><I>c</I></SPAN> are between
0.0 and 0.95, inclusive.
The default value for <SPAN CLASS="mathfont"><I>c</I></SPAN> is 0.75 when there are over 200
side constraints, and 0.9 when there is only one side constraint.
When the problem has between 2 and 200 constraints,
the value of <SPAN CLASS="mathfont"><I>c</I></SPAN> lies between the two points
(1, 0.9) and (201, 0.75).
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">DEFCAPACITY=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowdefcapacity"><B CLASS="ssbten">DC=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0229">&#13;</A><A NAME="idxnet0230">&#13;</A><A NAME="idxnet0231">&#13;</A><A NAME="idxnet0232">&#13;</A><A NAME="idxnet0233">&#13;</A><A NAME="idxnet0234">&#13;</A>requests that the default arc capacity and
the default nonarc variable value upper bound be <SPAN CLASS="mathfont"><I>c</I></SPAN>.
If this option is not specified, then DEFCAPACITY= <A HREF="sect15.htm#netflowinfinity">INFINITY</A>.
<A NAME="idxnet0235">&#13;</A><A NAME="idxnet0236">&#13;</A></DD><DT CLASS="ssbten"><B CLASS="ssbten">DEFCONTYPE=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">DEFTYPE=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowdefcontype"><B CLASS="ssbten">DCT=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0237">&#13;</A><A NAME="idxnet0238">&#13;</A><A NAME="idxnet0239">&#13;</A><A NAME="idxnet0240">&#13;</A><A NAME="idxnet0241">&#13;</A><A NAME="idxnet0242">&#13;</A><A NAME="idxnet0243">&#13;</A><A NAME="idxnet0244">&#13;</A><A NAME="idxnet0245">&#13;</A>specifies the default constraint type.
This default constraint type is either
<I>less than or equal to</I>  or is the
type indicated by DEFCONTYPE=<SPAN CLASS="mathfont"><I>c</I></SPAN>.
Valid values for this option are
<DL>
<DT>LE, le, <SPAN CLASS="mathfont">&#60;=</SPAN>
<DD>for <I>less than or equal to</I>
<DT>EQ, eq, <SPAN CLASS="mathfont">=</SPAN>
<DD>for <I>equal to</I>
<DT>GE, ge, <SPAN CLASS="mathfont">&#62;=</SPAN>
<DD>for <I>greater than or equal to</I>
</DL>
The values do not need to be
enclosed in quotes.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowdefcost"><B CLASS="ssbten">DEFCOST=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0246">&#13;</A><A NAME="idxnet0247">&#13;</A><A NAME="idxnet0248">&#13;</A>requests that the default arc cost
and the default nonarc variable objective function coefficient be
<SPAN CLASS="mathfont"><I>c</I></SPAN>.
If this option is not specified, then DEFCOST=0.0.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">DEFMINFLOW=<SPAN CLASS="ssiten"><I>m</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowdefminflow"><B CLASS="ssbten">DMF=<SPAN CLASS="ssiten"><I>m</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0249">&#13;</A><A NAME="idxnet0250">&#13;</A><A NAME="idxnet0251">&#13;</A><A NAME="idxnet0252">&#13;</A><A NAME="idxnet0253">&#13;</A><A NAME="idxnet0254">&#13;</A>requests that the default lower flow bound
through arcs and the default lower value bound of
nonarc variables be <SPAN CLASS="mathfont"><I>m</I></SPAN>. If a value
is not specified, then DEFMINFLOW=0.0.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowdemandopt"><B CLASS="ssbten">DEMAND=<SPAN CLASS="ssiten"><I>d</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0255">&#13;</A><A NAME="idxnet0256">&#13;</A><A NAME="idxnet0257">&#13;</A>specifies the demand at the <A HREF="sect15.htm#netflowsink">SINK</A> node specified
by the <A HREF="sect15.htm#netflowsink">SINK</A>=  option.
<A NAME="idxnet0258">&#13;</A><A NAME="idxnet0259">&#13;</A>The DEMAND= option should be used only if
the <A HREF="sect15.htm#netflowsink">SINK</A>= option is given in the PROC NETFLOW statement
and neither the <A HREF="sect15.htm#netflowshortpath">SHORTPATH</A> option nor the <A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> option
is specified.
<A NAME="idxnet0260">&#13;</A><A NAME="idxnet0261">&#13;</A><A NAME="idxnet0262">&#13;</A><A NAME="idxnet0263">&#13;</A>If you are solving a minimum cost network
problem and the <A HREF="sect15.htm#netflowsink">SINK</A>= option is used to identify the sink
node, and the DEMAND= option is not specified, then
the demand at the sink node is made equal to the
network's total supply.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowdwia"><B CLASS="ssbten">DWIA=<SPAN CLASS="ssiten"><I>i</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0264">&#13;</A><A NAME="idxnet0265">&#13;</A><A NAME="idxnet0266">&#13;</A>controls the initial amount of memory to be allocated
to store the <B>LU</B>  factors of the working basis matrix.
<A NAME="idxnet0267">&#13;</A><A NAME="idxnet0268">&#13;</A>DWIA stands for <SPAN CLASS="mathfont"><I>D</I><SUP><I>W</I></SUP></SPAN><I>initial allocation</I>  and
<SPAN CLASS="mathfont"><I>i</I></SPAN> is the number of nonzeros and matrix row operations
in the <B>LU</B>  factors
that can be stored in this memory.
Due to fill-in in the <B>U</B>  factor and the growth in the number of
row operations, it is often necessary to move
information about elements of a particular row or column
to another location in the memory allocated for the <B>LU</B>  factors.
This process leaves some memory temporarily unoccupied.
Therefore, DWIA=<SPAN CLASS="mathfont"><I>i</I></SPAN> must be greater than
the memory required to
store only the <B>LU</B>  factors.
<BR><BR>Occasionally, it is necessary to compress the
<B>U</B> factor so that
it again occupies contiguous memory.
Specifying too large a value for DWIA means that more
memory is required by PROC NETFLOW. This
might cause more expensive memory
mechanisms to be used than
if a smaller but adequate value had been specified for DWIA=.
Specifying too
small a value for the DWIA= option can make time-consuming compressions
more numerous.
The default value for the DWIA= option is eight times the number of side
constraints.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowgrouped"><B CLASS="ssbten">GROUPED=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0269">&#13;</A><A NAME="idxnet0270">&#13;</A><A NAME="idxnet0271">&#13;</A>PROC NETFLOW can take a much shorter time to read data if 
the data have been grouped prior to the PROC NETFLOW call.
This enables PROC NETFLOW to conclude that, for instance, a new NAME list 
variable value seen in an <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set grouped by the values of the 
NAME list variable before PROC NETFLOW was called is new. PROC NETFLOW does not
need to check that the NAME has been read in a previous observation.
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR><UL>
<LI> GROUPED=ARCDATA indicates that the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set has been grouped by values 
of the <A HREF="sect25.htm#netflowname">NAME</A> list variable. If <SPAN CLASS="ssfeleven">_NAME_</SPAN> is the name of the <A HREF="sect25.htm#netflowname">NAME</A> list variable,
you could use
PROC SORT DATA=ARCDATA;BY _NAME_;
prior to calling PROC NETFLOW.
Technically, you do not have to sort the data, only ensure that
all similar values of the <A HREF="sect25.htm#netflowname">NAME</A> list variable are grouped together.
If you specify the <A HREF="sect15.htm#netflowarcsonlyarcdata">ARCS_ONLY_ARCDATA</A> option, PROC NETFLOW automatically works
as if GROUPED=ARCDATA is also specified.
<LI> GROUPED=CONDATA indicates that the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set has been grouped.
<BR><BR>If the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set has a <A HREF="sect42.htm#netflowdenseformat">dense</A> format, 
<A NAME="idxnet0175">&#13;</A><A NAME="idxnet0176">&#13;</A>GROUPED=CONDATA indicates that the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set has been grouped by values 
of the <A HREF="sect32.htm#netflowrow">ROW</A> list variable. If <SPAN CLASS="ssfeleven">_ROW_</SPAN> is the name of the <A HREF="sect32.htm#netflowrow">ROW</A> list variable,
you could use PROC SORT DATA=CONDATA;BY _ROW_;
prior to calling PROC NETFLOW.
Technically, you do not have to sort the data, only ensure that
all similar values of the <A HREF="sect32.htm#netflowrow">ROW</A> list variable are grouped together.
If you specify the <A HREF="sect15.htm#netflowcsingleobs">CON_SINGLE_OBS</A> option, or if there is no
<A HREF="sect32.htm#netflowrow">ROW</A> list variable,
PROC NETFLOW automatically works
as if GROUPED=CONDATA has been specified.
<BR><BR>If <A HREF="sect15.htm#netflowcondata">CONDATA</A> has the <A HREF="sect42.htm#netflowsparseformat">sparse</A> format, 
<A NAME="idxnet0177">&#13;</A><A NAME="idxnet0178">&#13;</A>GROUPED=CONDATA indicates that <A HREF="sect15.htm#netflowcondata">CONDATA</A> has been grouped by values 
of the <A HREF="sect18.htm#netflowcolumn">COLUMN</A> list variable. If <SPAN CLASS="ssfeleven">_COL_</SPAN> is the name of the <A HREF="sect18.htm#netflowcolumn">COLUMN</A> list variable,
you could use PROC SORT DATA=CONDATA;BY _COL_; prior to calling PROC NETFLOW.
Technically, you do not have to sort the data, only ensure that
all similar values of the <A HREF="sect18.htm#netflowcolumn">COLUMN</A> list variable are grouped together.
<LI> GROUPED=BOTH indicates that both GROUPED=ARCDATA and GROUPED=CONDATA 
are TRUE.
<LI> GROUPED=NONE indicates that the data sets have not been grouped, that is,
neither GROUPED=ARCDATA nor GROUPED=CONDATA is TRUE.
This is the default, but it is much better if GROUPED=ARCDATA, 
or GROUPED=CONDATA, or GROUPED=BOTH.
</UL>
<BR><BR>A data set like
<PRE>
   ... _XXXXX_ ....
         bbb
         bbb
         aaa
         ccc
         ccc
</PRE>
is a candidate for the GROUPED= option. 
Similar values are grouped together. When PROC NETFLOW is reading the <SPAN CLASS="mathfont"><I>i</I></SPAN>th observation, 
either the value of the <SPAN CLASS="ssfeleven">_XXXXX_</SPAN> variable is the same as the <SPAN CLASS="mathfont">(<I>i</I>-1)</SPAN>th
(that is, the previous observation's) <SPAN CLASS="ssfeleven">_XXXXX_</SPAN> value, or it is a new <SPAN CLASS="ssfeleven">_XXXXX_</SPAN> value 
not seen in any previous observation. This also means that if the 
<SPAN CLASS="mathfont"><I>i</I></SPAN>th <SPAN CLASS="ssfeleven">_XXXXX_</SPAN> value is different from the <SPAN CLASS="mathfont">(<I>i</I>-1)</SPAN>th <SPAN CLASS="ssfeleven">_XXXXX_</SPAN> value, 
the value of the <SPAN CLASS="mathfont">(<I>i</I>-1)</SPAN>th <SPAN CLASS="ssfeleven">_XXXXX_</SPAN> variable will not be seen in any
observations <SPAN CLASS="mathfont"><I>i</I></SPAN>, <SPAN CLASS="mathfont"><I>i</I>+1</SPAN>, <SPAN CLASS="mathfont">...</SPAN> .
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">INFINITY=<SPAN CLASS="ssiten"><I>i</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowinfinity"><B CLASS="ssbten">INF=<SPAN CLASS="ssiten"><I>i</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0272">&#13;</A><A NAME="idxnet0273">&#13;</A><A NAME="idxnet0274">&#13;</A><A NAME="idxnet0275">&#13;</A><A NAME="idxnet0276">&#13;</A><A NAME="idxnet0277">&#13;</A>is the largest number used by PROC NETFLOW in computations.
A number too small can adversely affect the solution process.
You should avoid specifying an enormous value for the INFINITY= option
because numerical roundoff errors can result.
If a value is not specified, then INFINITY=999999. 
The INFINITY= option cannot be assigned a value less than 9999.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowinvd2d"><B CLASS="ssbten">INVD_2D</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0278">&#13;</A><A NAME="idxnet0279">&#13;</A><A NAME="idxnet0280">&#13;</A>controls the way in that the inverse of the working basis
matrix is stored.
<A NAME="idxnet0281">&#13;</A><A NAME="idxnet0282">&#13;</A>How this matrix is stored affects
computations as well as how the working basis or its
inverse
is updated.
The working basis matrix is defined in the <A HREF="sect41.htm#netflowdetails">&#34;Details&#34;</A> section.
If INVD_2D is specified,
the working basis matrix inverse is stored
as a matrix.
Typically, this memory scheme is
best when there are few side constraints or when
the working basis is dense.
<BR><BR>If INVD_2D is not specified, lower (<B>L</B> ) and
upper (<B>U</B> ) factors of
the working basis matrix are used.
<B>U</B>  is an upper triangular matrix and <B>L</B>  is a
lower triangular matrix corresponding to a sequence of elementary
matrix row operations.
The sparsity-exploiting variant of the Bartels-Golub decomposition
<A NAME="idxnet0283">&#13;</A><A NAME="idxnet0284">&#13;</A>is used to update the <B>LU</B>  factors.
This scheme works well when the side constraint coefficient
matrix is sparse or when many side constraints are nonbinding.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowmaxarraybytes"><B CLASS="ssbten">MAXARRAYBYTES=<SPAN CLASS="ssiten"><I>m</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0285">&#13;</A><A NAME="idxnet0286">&#13;</A><A NAME="idxnet0287">&#13;</A>specifies the maximum number of bytes an individual array can
occupy. This option is of most use when solving large problems
and the amount of available memory is insufficient to store all
arrays at once. Specifying the MAXARRAYBYTES= option ensures that arrays that
need lots of memory do not consume too much memory at the expense
of other arrays.
<BR><BR>There is one array that contains information about nodes and the
network basis spanning tree description. This tree description
enables computations involving the network part of the basis to be
performed very quickly and is the reason why PROC NETFLOW is more suited
to solving constrained network problems than PROC LP.
It is beneficial
that this array be stored in core when possible, otherwise this
array must be paged, slowing down the computations. Try not to
specify a MAXARRAYBYTES=<SPAN CLASS="mathfont"><I>m</I></SPAN> value smaller than the amount of memory
needed to store the main node array. You are told what this
memory amount is on the SAS log if you specify the <A HREF="sect15.htm#netflowmemrep">MEMREP</A> option
in the PROC NETFLOW statement.
<A NAME="idxnet0288">&#13;</A><A NAME="idxnet0289">&#13;</A></DD><DT CLASS="ssbten"><B CLASS="ssbten">MAXFLOW</B></DT>
<DT CLASS="ssbten"><A NAME="netflowmaxflow"><B CLASS="ssbten">MF</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0290">&#13;</A><A NAME="idxnet0291">&#13;</A><A NAME="idxnet0292">&#13;</A><A NAME="idxnet0293">&#13;</A><A NAME="idxnet0294">&#13;</A><A NAME="idxnet0295">&#13;</A>specifies that PROC NETFLOW solve a maximum flow problem.
<A NAME="idxnet0296">&#13;</A><A NAME="idxnet0297">&#13;</A>In this case, the PROC NETFLOW procedure finds the maximum flow from the
node specified by the <A HREF="sect15.htm#netflowsource">SOURCE</A>= option
to the node specified by the <A HREF="sect15.htm#netflowsink">SINK</A>= option.
<A NAME="idxnet0298">&#13;</A><A NAME="idxnet0299">&#13;</A><A NAME="idxnet0300">&#13;</A><A NAME="idxnet0301">&#13;</A>PROC NETFLOW automatically assigns an <A HREF="sect15.htm#netflowinfinity">INFINITY</A>= option supply
to the <A HREF="sect15.htm#netflowsource">SOURCE</A>= option  node
and the <A HREF="sect15.htm#netflowsink">SINK</A>= option is assigned the <A HREF="sect15.htm#netflowinfinity">INFINITY</A>= option
demand.
<A NAME="idxnet0302">&#13;</A><A NAME="idxnet0303">&#13;</A>In this way, the MAXFLOW option sets up a maximum
flow problem as an equivalent minimum cost problem.
<BR><BR>You can use the MAXFLOW option when solving any flow problem
(not necessarily a maximum flow problem) when the network has one
supply node (with infinite supply) and one demand node (with
infinite demand).  The MAXFLOW option can be used
in conjunction with all other
options (except <A HREF="sect15.htm#netflowshortpath">SHORTPATH</A>, <A HREF="sect15.htm#netflowsupplyopt">SUPPLY</A>=, and <A HREF="sect15.htm#netflowdemandopt">DEMAND</A>=)
and capabilities of PROC NETFLOW.
<A NAME="idxnet0304">&#13;</A><A NAME="idxnet0305">&#13;</A><A NAME="idxnet0306">&#13;</A><A NAME="idxnet0307">&#13;</A><A NAME="idxnet0308">&#13;</A><A NAME="idxnet0309">&#13;</A></DD><DT CLASS="ssbten"><B CLASS="ssbten">MAXIMIZE</B></DT>
<DT CLASS="ssbten"><A NAME="netflowmaximize"><B CLASS="ssbten">MAX</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0310">&#13;</A><A NAME="idxnet0311">&#13;</A><A NAME="idxnet0312">&#13;</A><A NAME="idxnet0313">&#13;</A><A NAME="idxnet0314">&#13;</A><A NAME="idxnet0315">&#13;</A>specifies that PROC NETFLOW find the maximum cost flow through
the network.
If both the MAXIMIZE and the <A HREF="sect15.htm#netflowshortpath">SHORTPATH</A> options are specified, the solution obtained
is the longest path between the <A HREF="sect15.htm#netflowsource">SOURCE</A>= and <A HREF="sect15.htm#netflowsink">SINK</A>= nodes.
<A NAME="idxnet0316">&#13;</A><A NAME="idxnet0317">&#13;</A><A NAME="idxnet0318">&#13;</A><A NAME="idxnet0319">&#13;</A>Similarly, MAXIMIZE and <A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> together cause
PROC NETFLOW to find the
minimum flow between these two nodes;
this is zero if there are no nonzero lower flow bounds.
<A NAME="idxnet0320">&#13;</A><A NAME="idxnet0321">&#13;</A><A NAME="idxnet0322">&#13;</A><A NAME="idxnet0323">&#13;</A></DD><DT CLASS="ssbten"><A NAME="netflowmemrep"><B CLASS="ssbten">MEMREP</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0324">&#13;</A><A NAME="idxnet0325">&#13;</A><A NAME="idxnet0326">&#13;</A>indicates that information on the memory usage and paging schemes
(if necessary) is reported by PROC NETFLOW on the SAS log. As
optimization proceeds, you are informed of any changes in the
memory requirements and schemes used by PROC NETFLOW.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflownamectrl"><B CLASS="ssbten">NAMECTRL=<SPAN CLASS="ssiten"><I>i</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0327">&#13;</A><A NAME="idxnet0328">&#13;</A><A NAME="idxnet0329">&#13;</A>is used to interpret arc and nonarc variable names in the
<A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set.
<A NAME="idxnet0330">&#13;</A><A NAME="idxnet0331">&#13;</A><A NAME="idxnet0332">&#13;</A><A NAME="idxnet0333">&#13;</A>In the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set, an arc is identified by its tail and
head node.
<A NAME="idxnet0334">&#13;</A><A NAME="idxnet0335">&#13;</A>In the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set, arcs are identified by names.
You can give a name to an arc by having a <A HREF="sect25.htm#netflowname">NAME</A> list specification
that indicates a SAS variable in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set that
has names of arcs as values.
<A NAME="idxnet0336">&#13;</A><A NAME="idxnet0337">&#13;</A>PROC NETFLOW requires arcs that have information about
them in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set to have names,
but arcs that
do not have information about them in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set 
can also have names.
Unlike a nonarc variable whose name uniquely identifies it,
an arc can have several different names.
An arc has a default name in the form <I>tail_head</I>,
that is,
the name of the arc's tail node followed by an underscore and
the name of the arc's head node.
<BR><BR>In the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set,
if the <A HREF="sect42.htm#netflowdenseformat">dense</A> data format is used, 
(described in the <A HREF="sect42.htm#netflowcccondata">&#34;CONDATA= Data Set&#34;</A> section)
a name of an arc or a nonarc variable is the <EM>name</EM> of a SAS variable
listed in the <A HREF="sect40.htm#netflowvar">VAR</A> list specification.
<A NAME="idxnet0338">&#13;</A><A NAME="idxnet0339">&#13;</A>If the <A HREF="sect42.htm#netflowsparseformat">sparse</A> data format of the 
<A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set is used,
a name of an arc or a nonarc variable is
a <EM>value</EM> of the SAS variable listed in the <A HREF="sect18.htm#netflowcolumn">COLUMN</A> list specification.
<A NAME="idxnet0340">&#13;</A><A NAME="idxnet0341">&#13;</A>The NAMECTRL= option is used when a name of an arc or nonarc variable
in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set (either a <A HREF="sect40.htm#netflowvar">VAR</A> list SAS variable name
or value of the <A HREF="sect18.htm#netflowcolumn">COLUMN</A> list SAS variable)
is in the form <I>tail_head</I>   and there exists an arc with
these end nodes.
<A NAME="idxnet0342">&#13;</A><A NAME="idxnet0343">&#13;</A><A NAME="idxnet0344">&#13;</A><A NAME="idxnet0345">&#13;</A>If <I>tail_head</I>  has not already been tagged as belonging to
an arc or nonarc variable in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set,
PROC NETFLOW needs to know whether <I>tail_head</I>   is
the name of the arc or the name of a nonarc variable.
<BR><BR>If you specify NAMECTRL=1,
a name that is not defined in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set is
assumed to be the name of a nonarc variable.
NAMECTRL=2 treats <I>tail_head</I> as the name
of the arc with these
endnodes, provided no other name is used to associate data in the
<A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set with this arc.
If the arc does have other names that appear
in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set,
<I>tail_head</I>  is assumed to be the name of a nonarc variable.
If you specify NAMECTRL=3,
<I>tail_head</I>  is assumed to be a name of the arc with these
end nodes, whether the arc has other names or not. The default value of
NAMECTRL is 3. Note that if you use the <A HREF="sect42.htm#netflowdenseformat">dense</A> side constraint
<A NAME="idxnet0346">&#13;</A><A NAME="idxnet0347">&#13;</A>input format, the default arc name <I>tail_head</I> is not
recognized (regardless of the NAMECTRL value) unless the head node
and tail node names contain no lowercase letters.
<BR><BR>If the <A HREF="sect42.htm#netflowdenseformat">dense</A> format is used for the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set, 
the SAS System converts SAS variable names in a SAS program to uppercase.
The <A HREF="sect40.htm#netflowvar">VAR</A> list variable names are uppercased.
Because of this, PROC NETFLOW automatically uppercases names of 
arcs and nonarc variables (the values of the <A HREF="sect25.htm#netflowname">NAME</A> list variable) 
in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set.
The names of arcs and nonarc variables 
(the values of the <A HREF="sect25.htm#netflowname">NAME</A> list variable) appear uppercased
in the <A HREF="sect15.htm#netflowarcout">ARCOUT</A>= data set and the
<A HREF="sect15.htm#netflowconout">CONOUT</A>= data set, and in the <A HREF="sect28.htm#netflowprint">PRINT</A> statement output.
<BR><BR>Also, if the <A HREF="sect42.htm#netflowdenseformat">dense</A> format is used for the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set,
be careful with default arc names (names in the form <SPAN CLASS="ssfeleven">tailnode_headnode</SPAN>).
Node names (values in the <A HREF="sect38.htm#netflowtailnode">TAILNODE</A> and <A HREF="sect22.htm#netflowheadnode">HEADNODE</A> list variables) in 
the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set
are not uppercased by PROC NETFLOW.
Consider the following code:
<PRE>
data arcdata;
   input _from_ $ _to_ $ _name $ ;
   datalines;
from to1 .
from to2 arc2
TAIL TO3 .
;
data densecon;
   input from_to1 from_to2 arc2 tail_to3;
   datalines;
2 3 5
;
proc netflow
   arcdata=arcdata condata=densecon;
run;
</PRE>

The SAS System does not uppercase character string values. PROC NETFLOW never
uppercases node names, so the arcs in observations 1, 2, and 3 in 
the preceeding <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set have
the default names &#34;from_to1&#34;, &#34;from_to2&#34;, and &#34;TAIL_TO3&#34;,
respectively.
When the <A HREF="sect42.htm#netflowdenseformat">dense</A> format of the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set is used, 
PROC NETFLOW does uppercase values 
of the <A HREF="sect25.htm#netflowname">NAME</A> list variable, so the name of the arc in the 
second observation of the
<A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set is &#34;ARC2&#34;.
Thus, the second arc has two names; it's default &#34;from_to2&#34; 
and the other that was
specified &#34;ARC2&#34;.
<BR><BR>As the SAS System does uppercases program code, you must think of
the input statement
<PRE>
   input from_to1 from_to2 arc2 tail_to3;
</PRE>
as really being
<PRE>
   INPUT FROM_TO1 FROM_TO2 ARC2 TAIL_TO3;
</PRE>
The SAS variables named &#34;FROM_TO1&#34; and &#34;FROM_TO2&#34; are <EM>not</EM>
associated with any of the arcs in the preceeding <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set.
The values &#34;FROM_TO1&#34; and &#34;FROM_TO2&#34; are different from all of the
arc names 
&#34;from_to1&#34;, &#34;from_to2&#34;, &#34;TAIL_TO3&#34;, and &#34;ARC2&#34;.
&#34;FROM_TO1&#34; and &#34;FROM_TO2&#34; could end up being the 
names of two nonarc variables.
It is sometimes useful to specify <A HREF="sect28.htm#netflowprintnonarcs">PRINT NONARCS</A>; before commencing
optimization to ensure that the model is correct 
(has the right set of nonarc variables).
<BR><BR>The SAS variable named &#34;ARC2&#34; is the name of the second arc in 
the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set,
even though the name specified in 
the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set looks like &#34;arc2&#34;.
The SAS variable named &#34;TAIL_TO3&#34; is the default name of 
the third arc in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowrhsobs"><B CLASS="ssbten">RHSOBS=<SPAN CLASS="ssiten"><I>charstr</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0348">&#13;</A><A NAME="idxnet0349">&#13;</A><A NAME="idxnet0350">&#13;</A>specifies the keyword that identifies a right-hand-side
observation
when using the <A HREF="sect42.htm#netflowsparseformat">sparse</A> format
<A NAME="idxnet0351">&#13;</A><A NAME="idxnet0352">&#13;</A>for data in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set.
<A NAME="idxnet0353">&#13;</A><A NAME="idxnet0354">&#13;</A>The keyword is expected as a value of the
SAS variable in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set named in the <A HREF="sect18.htm#netflowcolumn">COLUMN</A>
list specification.
<A NAME="idxnet0355">&#13;</A><A NAME="idxnet0356">&#13;</A>The default value of the RHSOBS= option is _RHS_ or _rhs_.
If <SPAN CLASS="ssiten"><I>charstr</I></SPAN>  is not a valid SAS variable name, enclose it in
single quotes.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflownarcs"><B CLASS="ssbten">NARCS=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0357">&#13;</A><A NAME="idxnet0358">&#13;</A><A NAME="idxnet0359">&#13;</A>specifies the approximate number of arcs.
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowncoefs"><B CLASS="ssbten">NCOEFS=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0360">&#13;</A><A NAME="idxnet0361">&#13;</A><A NAME="idxnet0362">&#13;</A>specifies approximate number of constraint coefficients.
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowncons"><B CLASS="ssbten">NCONS=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0363">&#13;</A><A NAME="idxnet0364">&#13;</A><A NAME="idxnet0365">&#13;</A>specifies approximate number of constraints.
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflownnas"><B CLASS="ssbten">NNAS=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0366">&#13;</A><A NAME="idxnet0367">&#13;</A><A NAME="idxnet0368">&#13;</A>specifies approximate number of nonarc variables.
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflownnodes"><B CLASS="ssbten">NNODES=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0369">&#13;</A><A NAME="idxnet0370">&#13;</A><A NAME="idxnet0371">&#13;</A>specifies approximate number of nodes.
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflownonreplic"><B CLASS="ssbten">NON_REPLIC=<SPAN CLASS="ssiten"><I>c</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0372">&#13;</A><A NAME="idxnet0373">&#13;</A><A NAME="idxnet0374">&#13;</A>prevents PROC NETFLOW from doing unnecessary
checks of data previously read.
<UL>
<LI> NON_REPLIC=COEFS indicates that each constraint coefficient is specified
<EM>once</EM> in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set.
<LI> NON_REPLIC=NONE indicates that constraint coefficients 
can be specified more than once in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set.
NON_REPLIC=NONE is the default.
</UL>
See the <A HREF="sect55.htm#netflowreadeffic">&#34;How to Make the Data Read of PROC NETFLOW More Efficient&#34;</A> section.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">SAME_NONARC_DATA</B></DT>
<DT CLASS="ssbten"><A NAME="netflowsnd"><B CLASS="ssbten">SND</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0375">&#13;</A><A NAME="idxnet0376">&#13;</A><A NAME="idxnet0377">&#13;</A><A NAME="idxnet0378">&#13;</A><A NAME="idxnet0379">&#13;</A><A NAME="idxnet0380">&#13;</A>If all nonarc variable data are given
in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set, or if the problem has no nonarc variables,
the unconstrained warm start
can be read more quickly if the option SAME_NONARC_DATA is
specified.
<A NAME="idxnet0381">&#13;</A><A NAME="idxnet0382">&#13;</A>SAME_NONARC_DATA
indicates that any nonconstraint nonarc variable data in
the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set is to be ignored.
<A NAME="idxnet0383">&#13;</A><A NAME="idxnet0384">&#13;</A>Only side constraint data in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set are read.
<BR><BR>If you use an unconstrained warm start and
SAME_NONARC_DATA is not specified, any nonarc variable
objective function coefficient, upper bound, or lower bound
can be changed.
<A NAME="idxnet0385">&#13;</A><A NAME="idxnet0386">&#13;</A>Any nonarc variable data in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set overrides (without
warning messages) corresponding data in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set.
You can
possibly introduce new nonarc variables to the problem, that is,
nonarc variables that were not in the problem when the warm start
was generated.
<BR><BR>SAME_NONARC_DATA should be specified if nonarc variable data in
the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set are to be deliberately ignored. Consider
<PRE>
   proc netflow options arcdata=arc0 nodedata=node0
             condata=con0
                /* this data set has nonarc variable        */
                /* objective function coefficient data      */
             future1 arcout=arc1 nodeout=node1;
   run;
   data arc2;
     reset arc1;   /* this data set has nonarc variable obs */
     if _cost_&#60;50.0 then _cost_=_cost_*1.25;
                   /* some objective coefficients of nonarc */
                   /* variable might be changed             */
   proc netflow options
             warm arcdata=arc2 nodedata=node1
             condata=con0 same_nonarc_data
                /* This data set has old nonarc variable    */
                /* obj, fn. coefficients. same_nonarc_data  */
                /* indicates that the &#34;new&#34; coefs in the    */
                /* arcdata=arc2 are to be used.             */
   RUN;
</PRE>

<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowscale"><B CLASS="ssbten">SCALE=<SPAN CLASS="ssiten"><I>s</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0387">&#13;</A><A NAME="idxnet0388">&#13;</A><A NAME="idxnet0389">&#13;</A>indicates that the side constraints are to be scaled.
Scaling is useful when some
coefficients of a constraint or nonarc variable
are either much larger or much smaller
than other coefficients.
Scaling might make all coefficients have values that
have a smaller range, and this can make computations more
stable numerically. Try the SCALE= option if PROC NETFLOW is unable to
solve a problem because of numerical instability.
Specify
<UL>
<LI> SCALE=ROW, SCALE=CON, or SCALE=CONSTRAINT if
the largest absolute value of coefficients in each constraint
is about 1.0
<LI> SCALE=COL, SCALE=COLUMN, or SCALE=NONARC if
nonarc variable columns are scaled so that the absolute value
of the largest
constraint coefficient of a nonarc variable is near to 1
<LI> SCALE=BOTH if the largest absolute value of coefficients in 
each constraint, and the absolute value
of the largest
constraint coefficient of a nonarc variable is near to 1.
This is the default
<LI> SCALE=NONE if no scaling should be done
</UL>
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">SHORTPATH</B></DT>
<DT CLASS="ssbten"><A NAME="netflowshortpath"><B CLASS="ssbten">SP</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0390">&#13;</A><A NAME="idxnet0391">&#13;</A><A NAME="idxnet0392">&#13;</A><A NAME="idxnet0393">&#13;</A><A NAME="idxnet0394">&#13;</A><A NAME="idxnet0395">&#13;</A>specifies that PROC NETFLOW solve a shortest path problem.
<A NAME="idxnet0396">&#13;</A><A NAME="idxnet0397">&#13;</A>The NETFLOW procedure finds the shortest path between the
nodes specified in the <A HREF="sect15.htm#netflowsource">SOURCE</A>= option and
the <A HREF="sect15.htm#netflowsink">SINK</A>= option.
<A NAME="idxnet0398">&#13;</A><A NAME="idxnet0399">&#13;</A><A NAME="idxnet0400">&#13;</A><A NAME="idxnet0401">&#13;</A>The costs of arcs are their <EM>lengths</EM> .
PROC NETFLOW automatically assigns a supply of one flow unit to
the <A HREF="sect15.htm#netflowsource">SOURCE</A>= node, and the <A HREF="sect15.htm#netflowsink">SINK</A>= node is assigned to
have a one flow unit demand.  In this way, the SHORTPATH
option sets up a shortest path problem as an equivalent
minimum cost problem.
<BR><BR>If a network has one supply node (with supply of one unit)
and one demand node (with demand of one unit), you could specify
the SHORTPATH option, with the <A HREF="sect15.htm#netflowsource">SOURCE</A>= and <A HREF="sect15.htm#netflowsink">SINK</A>= nodes,
even if the problem is not a shortest path problem.
You then should not provide any supply or demand data in the
<A HREF="sect15.htm#netflownodedata">NODEDATA</A>= data set or the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set.
<A NAME="idxnet0402">&#13;</A><A NAME="idxnet0403">&#13;</A></DD><DT CLASS="ssbten"><B CLASS="ssbten">SINK=<SPAN CLASS="ssiten"><I>sinkname</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowsink"><B CLASS="ssbten">SINKNODE=<SPAN CLASS="ssiten"><I>sinkname</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0404">&#13;</A><A NAME="idxnet0405">&#13;</A><A NAME="idxnet0406">&#13;</A><A NAME="idxnet0407">&#13;</A><A NAME="idxnet0408">&#13;</A><A NAME="idxnet0409">&#13;</A>identifies the demand node.
The SINK= option is useful when you specify the <A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> 
option or the <A HREF="sect15.htm#netflowshortpath">SHORTPATH</A> option
and need to specify toward which node the shortest path
or maximum flow is directed.
<A NAME="idxnet0410">&#13;</A><A NAME="idxnet0411">&#13;</A><A NAME="idxnet0412">&#13;</A><A NAME="idxnet0413">&#13;</A><A NAME="idxnet0414">&#13;</A><A NAME="idxnet0415">&#13;</A><A NAME="idxnet0416">&#13;</A><A NAME="idxnet0417">&#13;</A>The SINK= option also can be used when
a minimum cost problem has only one demand node.  Rather than
having this information in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set or the <A HREF="sect15.htm#netflownodedata">NODEDATA</A>= data set,
use the SINK= option with an accompanying <A HREF="sect15.htm#netflowdemandopt">DEMAND</A>= specification for this node.
<A NAME="idxnet0418">&#13;</A><A NAME="idxnet0419">&#13;</A><A NAME="idxnet0420">&#13;</A><A NAME="idxnet0421">&#13;</A>The SINK= option must be the name of a head node of
at least one arc; thus, it must have a character value.  If
the the value of the SINK= option is not a valid SAS character variable name,
it must be enclosed in single quotes and can contain embedded blanks.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">SOURCE=<SPAN CLASS="ssiten"><I>sourcename</I></SPAN></B></DT>
<DT CLASS="ssbten"><A NAME="netflowsource"><B CLASS="ssbten">SOURCENODE=<SPAN CLASS="ssiten"><I>sourcename</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0422">&#13;</A><A NAME="idxnet0423">&#13;</A><A NAME="idxnet0424">&#13;</A><A NAME="idxnet0425">&#13;</A><A NAME="idxnet0426">&#13;</A><A NAME="idxnet0427">&#13;</A>identifies a supply node.
The SOURCE= option is
useful when you specify  the <A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> or the <A HREF="sect15.htm#netflowshortpath">SHORTPATH</A> option
and need to specify from which node the shortest
path or maximum flow originates.
<A NAME="idxnet0428">&#13;</A><A NAME="idxnet0429">&#13;</A><A NAME="idxnet0430">&#13;</A><A NAME="idxnet0431">&#13;</A><A NAME="idxnet0432">&#13;</A><A NAME="idxnet0433">&#13;</A><A NAME="idxnet0434">&#13;</A><A NAME="idxnet0435">&#13;</A>The SOURCE= option also can be used when
a minimum cost problem has only one supply node.
Rather than having this information in the the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set
or the <A HREF="sect15.htm#netflownodedata">NODEDATA</A>= data set, use the SOURCE= option with
an accompanying <A HREF="sect15.htm#netflowsupplyopt">SUPPLY</A>= amount of supply at this node.
<A NAME="idxnet0436">&#13;</A><A NAME="idxnet0437">&#13;</A><A NAME="idxnet0438">&#13;</A><A NAME="idxnet0439">&#13;</A>The SOURCE= option must be the name of a tail node
of at least one arc; thus, it must have a character value.
If the value of the SOURCE= option is not a valid SAS character variable name,
it must be enclosed in single quotes and can contain embedded
blanks.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten">SPARSECONDATA</B></DT>
<DT CLASS="ssbten"><A NAME="netflowscdata"><B CLASS="ssbten">SCDATA</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0440">&#13;</A><A NAME="idxnet0441">&#13;</A><A NAME="idxnet0442">&#13;</A><A NAME="idxnet0443">&#13;</A><A NAME="idxnet0444">&#13;</A><A NAME="idxnet0445">&#13;</A>indicates that the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set has data in
the <A HREF="sect42.htm#netflowsparseformat">sparse</A> data format.
<A NAME="idxnet0446">&#13;</A><A NAME="idxnet0447">&#13;</A><A NAME="idxnet0448">&#13;</A><A NAME="idxnet0449">&#13;</A>Otherwise, it is assumed that the data are in the <A HREF="sect42.htm#netflowdenseformat">dense</A> format.
<A NAME="idxnet0450">&#13;</A><A NAME="idxnet0451">&#13;</A><B>Note:</B> If the SPARSECONDATA option is not specified, 
and you are running SAS software Version 6
or you have specified options validvarname=v6;,
all <A HREF="sect25.htm#netflowname">NAME</A> list variable
values in the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set are uppercased.
See the <A HREF="sect44.htm#netflowcasesens">&#34;Case Sensitivity&#34;</A> section.
<BR><BR><A NAME="idxnet0452">&#13;</A><A NAME="idxnet0453">&#13;</A><A NAME="idxnet0454">&#13;</A><A NAME="idxnet0455">&#13;</A></DD><DT CLASS="ssbten"><B CLASS="ssbten">SPARSEP2</B></DT>
<DT CLASS="ssbten"><A NAME="netflowsparsep2"><B CLASS="ssbten">SP2</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0456">&#13;</A><A NAME="idxnet0457">&#13;</A><A NAME="idxnet0458">&#13;</A><A NAME="idxnet0459">&#13;</A><A NAME="idxnet0460">&#13;</A><A NAME="idxnet0461">&#13;</A>indicates that the new column of the working basis matrix that
replaces another column be held in a linked list.
<A NAME="idxnet0462">&#13;</A><A NAME="idxnet0463">&#13;</A>If the SPARSEP2 option is not specified, a one-dimensional array is used to store
this column's information, that can contain elements that are 0.0
and use more memory than
the linked list.
The linked list mechanism requires more work if
the column has numerous nonzero elements in many iterations.
Otherwise, it is superior.
Sometimes, specifying SPARSEP2 is beneficial when the side
constrained coefficient matrix is very sparse or when some paging
is necessary.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowsupplyopt"><B CLASS="ssbten">SUPPLY=<SPAN CLASS="ssiten"><I>s</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0464">&#13;</A><A NAME="idxnet0465">&#13;</A><A NAME="idxnet0466">&#13;</A>specifies the supply at the source node specified
by the <A HREF="sect15.htm#netflowsource">SOURCE</A>= option.
<A NAME="idxnet0467">&#13;</A><A NAME="idxnet0468">&#13;</A>The SUPPLY= option should be used only if the <A HREF="sect15.htm#netflowsource">SOURCE</A>= option
is given in the PROC NETFLOW statement and neither the <A HREF="sect15.htm#netflowshortpath">SHORTPATH</A>
option nor the <A HREF="sect15.htm#netflowmaxflow">MAXFLOW</A> option is specified.
<A NAME="idxnet0469">&#13;</A><A NAME="idxnet0470">&#13;</A><A NAME="idxnet0471">&#13;</A><A NAME="idxnet0472">&#13;</A>If you are solving a minimum cost network problem
and the <A HREF="sect15.htm#netflowsource">SOURCE</A>=
option is used to identify the source node and the
SUPPLY= option is not specified, then by default
the supply at the source node is made equal to
the network's total demand.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowthrunet"><B CLASS="ssbten">THRUNET</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0473">&#13;</A><A NAME="idxnet0474">&#13;</A><A NAME="idxnet0475">&#13;</A>tells PROC NETFLOW to force through the network any excess supply
(the amount by which
total supply exceeds total demand) or any excess
demand (the amount by which
total demand exceeds total supply) as is required.
If a network problem has unequal total supply and total demand and
the THRUNET option is not specified, PROC NETFLOW drains away the excess supply
or excess demand in an optimal manner.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowtypeobs"><B CLASS="ssbten">TYPEOBS=<SPAN CLASS="ssiten"><I>charstr</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0476">&#13;</A><A NAME="idxnet0477">&#13;</A><A NAME="idxnet0478">&#13;</A>specifies the keyword that identifies a type observation
when using the <A HREF="sect42.htm#netflowsparseformat">sparse</A> format for
data in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set.
<A NAME="idxnet0479">&#13;</A><A NAME="idxnet0480">&#13;</A><A NAME="idxnet0481">&#13;</A><A NAME="idxnet0482">&#13;</A>The keyword is expected as a value of the
SAS variable in the <A HREF="sect15.htm#netflowcondata">CONDATA</A>= data set named in the <A HREF="sect18.htm#netflowcolumn">COLUMN</A>
list specification.
<A NAME="idxnet0483">&#13;</A><A NAME="idxnet0484">&#13;</A>The default value of the TYPEOBS= option is _TYPE_ or _type_.
If <SPAN CLASS="ssiten"><I>charstr</I></SPAN> is not a valid SAS variable name, enclose it in
single quotes.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="netflowwarm"><B CLASS="ssbten">WARM</B></A></DT>
<DD CLASS="sasop"><A NAME="idxnet0485">&#13;</A><A NAME="idxnet0486">&#13;</A><A NAME="idxnet0487">&#13;</A><A NAME="idxnet0488">&#13;</A><A NAME="idxnet0489">&#13;</A>indicates that the <A HREF="sect15.htm#netflownodedata">NODEDATA</A>= data set or the <A HREF="sect15.htm#netflownodedata">DUALIN</A>= data set and
the the <A HREF="sect15.htm#netflowarcdata">ARCDATA</A>= data set contain extra
information of a warm start to be used by PROC NETFLOW.
<A NAME="idxnet0490">&#13;</A><A NAME="idxnet0491">&#13;</A><A NAME="idxnet0492">&#13;</A><A NAME="idxnet0493">&#13;</A><A NAME="idxnet0494">&#13;</A><A NAME="idxnet0495">&#13;</A>See the <A HREF="sect54.htm#netflowwarmstarts">&#34;Warm Starts&#34;</A> section.
<BR><BR></DD>
</DL><P>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect14.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect16.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="#topofpage">
  <IMG BORDER="0" SRC="../../common/images/top1.gif" ALT="Top" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Top</FONT></A></TD>
</TR>
</TABLE>
<P><!--End of Navigation Panel-->
<P><FONT SIZE="1"><A HREF="../../common/images/copyrite.htm">Copyright &copy; 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>
