<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Statements : ARRAY </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0230210.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0203460.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">ARRAY</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0201956">ARRAY</A></FONT></H1>

<P><HR><BR><B>Defines elements of an array</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Valid:</B></TD>
<TD bgcolor="#CCCCCC" align="left">in a DATA step
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Category:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Information
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Type:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Declarative
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0201956.htm#zid-2260"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0201956.htm#zid-2261"><FONT size="2"><B>Arguments </b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0201956.htm#z0289479"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0201956.htm#z0289480"><FONT size="2"><B>Comparisons</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0201956.htm#z0289481"><FONT size="2"><B>Examples</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0201956.htm#z0289482"><FONT size="2">Example 1: Defining Arrays</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0201956.htm#z0289483"><FONT size="2">Example 2: Assigning Initial Numeric Values</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0201956.htm#z0289484"><FONT size="2">Example 3: Defining Initial Character Values</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0201956.htm#z0289485"><FONT size="2">Example 4: Defining More Advanced Arrays</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0201956.htm#z0289486"><FONT size="2"><B>See Also</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="zid-2260">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>ARRAY </B> <I>array-name</I> { <I>subscript</I> }
&lt;$&gt;&lt;<I>length</I>&gt;
<BR>&lt;<I>array-elements</I>&gt;
&lt;(<I>initial-value-list</I>)&gt;;
</TD></TR></TABLE>
<BR><H3><A name="zid-2261">Arguments </A></H3>

<P><A name="z0851910">&#13;</A>
<DL>
<DT><B><B><I>array-name</I></B></B></DT>
<DD>names the array.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><B><I>Array-name</I></B> must be a SAS name that is not the name of a SAS variable
in the same DATA step.</TD><DL>
<DT><B><FONT color="FF00007">CAUTION:</FONT></B></DT><DD><B>Using the name of a SAS function as an array name can
cause unpredictable results.</B>
If you inadvertently
use a function name as the name of the array, SAS treats parenthetical references
that involve the name as array references, not function references, for the
duration of the DATA step. A warning message is written to the SAS log.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"></DD></DL>
</TABLE>
<P></DD>

<DT><B>{<B><I>subscript</I></B>}</B></DT>
<DD>describes the number and arrangement of
elements in the array by using an asterisk, a number, or a range of numbers. <B><I>Subscript</I></B> has one of these forms:

<P>
<DL>
<DT>{<B><I>dimension-size(s)</I></B>}</DT>
<DD>indicates the number of elements in each
dimension of the array. <B><I>Dimension-size</I></B> is a numeric
representation of either the number of elements in a one-dimensional array
or the number of elements in each dimension of a multidimensional array.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">In this book, the subscript
is enclosed in braces ({}). Brackets ( [ ] ) and parentheses (( )) are also
allowed. </TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Example:</B></TD>
<TD align="left" bgcolor="#F5F5F5">An array with one dimension
can be defined as



<PRE>array simple{3} red green yellow;</PRE>


This ARRAY statement
defines an array that is named SIMPLE that groups together three variables
that are named RED, GREEN, and YELLOW.</TD>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Example:</B></TD>
<TD align="left" bgcolor="#F5F5F5">An array with more than
one dimension is known as a multidimensional array. You can have any number
of dimensions in a multidimensional array. For example, a two-dimensional
array provides row and column arrangement of array elements. This statement
defines a two-dimensional array with five rows and three columns:



<PRE>array x{5,3} score1-score15;</PRE>


SAS places variables into a two-dimensional array by filling all rows
in order, beginning at the upper-left corner of the array (known as row-major
order). </TD>
</TABLE>

<P>
<P>
<DL>
<DT>{&lt;<B><I>lower</I></B>:><B><I>upper</I></B>&lt;, . .
.&lt;<B><I>lower</I></B>:> <B><I>upper</I></B>>}</DT>
<DD>are the bounds of each dimension of an array,
where <B><I>lower</I></B> is the lower bound of that dimension
and <B><I>upper</I></B> is the upper bound.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5">In most explicit arrays,
the subscript in each dimension of the array ranges from 1 to <I>n</I>,
where <I>n</I> is the number of elements in that dimension.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Example:</B></TD>
<TD align="left" bgcolor="#F5F5F5">In the following example,
the value of each dimension is by default the upper bound of that dimension. 



<PRE>array x{5,3} score1-score15;</PRE>As an alternative, the following ARRAY statement is a longhand version
of the previous example:



<PRE>array x{1:5,1:3} score1-score15;</PRE></TD>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">For most arrays, 1 is a
convenient lower bound; thus, you do not need to specify the lower and upper
bounds. However, specifying both bounds is useful when the array dimensions
have a convenient beginning point other than 1.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">To reduce the computational
time that is needed for subscript evaluation, specify a lower bound of
0.</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>

<DT>{<B><I>*</I></B>}</DT>
<DD>indicates that SAS is to determine the subscript
by counting the variables in the array. When you specify the asterisk, also
include <B><I>array-elements</I></B>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You cannot use the
asterisk with _TEMPORARY_ arrays or when you define a multidimensional
array.</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>

<DT><B><B><I>$</I></B></B></DT>
<DD>indicates that the elements in the array
are character element.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The dollar sign is not necessary
if the elements have been previously defined as character elements.</TD>
</TABLE>
<P></DD>

<DT><B><B><I>length</I></B></B></DT>
<DD>specifies the length of elements in the
array that have not been previously assigned a length.<P></DD>

<DT><B><B><I>array-elements</I></B></B></DT>
<DD>names the elements that make up the array. <B><I>Array-elements</I></B> must be either all numeric or all character,
and they can be listed in any order. The elements can be 
<P>
<DL>
<DT><B><I>variables</I></B></DT>
<DD>lists variable names.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The names must be either
variables that you define in the ARRAY statement or variables that SAS creates
by concatenating the array name and a number. For instance, when the subscript
is a number (not the asterisk), you do not need to name each variable in the
array. Instead, SAS creates variable names by concatenating the array name
and the numbers , 2, 3, . . . <I>n</I>.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">These SAS variable lists
enable you to reference variables that have been previously defined in the
same DATA step:
<P>
<DL>
<DT>_NUMERIC_</DT>
<DD>indicates all numeric variables.<P></DD>

<DT>_CHARACTER_ </DT>
<DD>indicates all character variables.<P></DD>

<DT>_ALL_</DT>
<DD>indicates all variables.<P></DD>
</DL>
</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you use _ALL_,
all the previously defined variables must be of the same type.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0289482">Defining Arrays</A></TD>
</TABLE>
<P></DD>

<DT>_TEMPORARY_</DT>
<DD>creates a list of temporary data elements.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Temporary data elements
can be numeric or character.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Temporary data elements
behave like DATA step variables with these exceptions:
<P>
<UL>

<LI>They do not have names. Refer to temporary data
elements by the array name and dimension.<P>

<LI>They do not appear in the output data set.<P>

<LI>You cannot use the special
subscript asterisk
(*) to refer to all the elements.<P>

<LI>Temporary data element values are always automatically
retained, rather than being reset to missing at the beginning of the next
iteration of the DATA step.<P>
</UL>
</TD>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Arrays of temporary elements
are useful when the only purpose for creating an array is to perform a calculation.
To preserve the result of the calculation, assign it to a variable. You can
improve performance time by using temporary data
elements.</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>

<DT><B>(<B><I>initial-value-list</I></B>)</B></DT>
<DD>gives initial values for the corresponding
elements in the array. The values for elements can be numbers or character
strings. You must enclose all character strings in quotation marks. To specify
one or more initial values directly, use the following format:
<P>(<B><I>initial-value(s)</I></B>) 
<P>To specify an iteration factor
and nested sublists for
the initial values, use the following format: 
<P>&lt;<B><I>constant-iter-value</I></B>*>
&lt;(><B><I>constant value</I></B> | <B><I>constant-sublist</I></B>&lt;)>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you specify both
an <B><I>initial-value-list</I></B> and <B><I>array-elements</I></B>, then <B><I>array-elements</I></B> must be
listed before <B><I>initial-value-list</I></B> in the ARRAY
statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can assign initial values
to both variables and temporary data elements. </TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Elements and values are
matched by position. If there are more array elements than initial values,
the remaining array elements receive missing values and SAS issues a warning.
See  
<A href="#z0289483">Assigning Initial Numeric Values</A>,
and  
<A href="#z0289484">Defining Initial Character Values</A>.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can separate the values
in the initial value list with either a comma or a blank space.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you have not previously
specified the attributes of the array elements (such as length or type), the
attributes of any initial values that you specify are automatically assigned
to the corresponding array element. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;Initial values are retained until a new value
is assigned to the array element.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">When any (or all) elements
are assigned initial values, all elements behave as if they had been named
one a RETAIN statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Examples:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The following examples
show how to use the iteration factor and nested sublists. All of these ARRAY
statements contain the same initial value list:
<P>
<UL>

<LI>
<PRE>ARRAY x{10} x1-x10 (10*5); </PRE><P>

<LI>
<PRE>ARRAY x{10} x1-x10 (5*(5 5));</PRE><P>

<LI>
<PRE>ARRAY x{10} x1-x10 (5 5 3*(5 5) 5 5);</PRE><P>

<LI>
<PRE>ARRAY x{10} x1-x10 (2*(5 5) 5 5 2*(5 5));</PRE><P>

<LI>
<PRE>ARRAY x{10} x1-x10 (2*(5 2*(5 5)));</PRE><P>
</UL>
</TD>
</TABLE>
<P></DD>
</DL>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0289479">Details</A></FONT></B></TD></TR></TABLE>
The ARRAY statement
defines a set of elements that you plan to process as a group. You refer to
elements of the array by the array name and subscript. Because you usually
want to process more than one element in an array, arrays are often referenced
within DO groups. 
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0289480">Comparisons</A></FONT></B></TD></TR></TABLE>

<P><A name="z0851974">&#13;</A>
<P>
<UL>

<LI>Arrays in the SAS language are different from
those in many other languages. A SAS array is simply a convenient way of temporarily
identifying a group of variables. It is not a data structure, and <I>array-name</I> is not a variable.<P>

<LI>An ARRAY statement defines an
array. An array
reference uses an array element in a program statement.<P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0289481">Examples</A></FONT></B></TD></TR></TABLE>

<BR><H3> <A name="z0289482">Example 1: Defining Arrays</A> </H3>


<P>
<P>
<UL>

<LI>
<PRE>array rain {5} janr febr marr aprr mayr;</PRE><P>

<LI>
<PRE>array days{7} d1-d7;</PRE><P>

<LI>
<PRE>array month{*} jan feb jul oct nov;</PRE><P>

<LI>
<PRE>array x{*} _NUMERIC_;</PRE><P>

<LI>
<PRE>array qbx{10};</PRE><P>

<LI>
<PRE>array meal{3};</PRE><P>
</UL>

<BR><H3> <A name="z0289483">Example 2: Assigning Initial Numeric Values</A> </H3>


<P>
<UL>

<LI>
<PRE>array test{4} t1 t2 t3 t4 (90 80 70 70);</PRE><P>

<LI>
<PRE>array test{4} t1-t4 (90 80 2*70);</PRE><P>

<LI>
<PRE>array test{4} _TEMPORARY_ (90 80 70 70);</PRE><P>
</UL>

<BR><H3> <A name="z0289484">Example 3: Defining Initial Character Values</A> </H3>


<P>
<UL>

<LI>
<PRE>array test2{*} a1 a2 a3 ('a','b','c');</PRE><P>
</UL>

<BR><H3> <A name="z0289485">Example 4: Defining More Advanced Arrays</A> </H3>


<P>
<UL>

<LI>
<PRE>array new{2:5} green jacobs denato fetzer;</PRE><P>

<LI>
<PRE>array x{5,3} score1-score15;</PRE><P>

<LI>
<PRE>array test{3:4,3:7} test1-test10;</PRE><P>

<LI>
<PRE>array temp{0:999} _TEMPORARY_;</PRE><P>
</UL>

<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><FONT size="5"><A name="z0289486">See Also</A></FONT>
</FONT></B></TD></TR></TABLE>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>Statement:
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD><A href="z0203460.htm">Array Reference</A></TD></TR></TABLE></TD></TR>
<TR valign="top"><TD></TD><TD>Array
Processing in  
<B>SAS Language Reference: Concepts</B></TD></TR></TABLE>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0230210.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0203460.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0201956">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>