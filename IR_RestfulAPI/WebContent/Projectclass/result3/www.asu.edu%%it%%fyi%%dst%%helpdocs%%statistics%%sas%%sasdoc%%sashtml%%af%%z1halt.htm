<HTML>
<!-- This page produced Tue Jul 20 10:24:46 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Program Halt Component : Using the Program Halt Component </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="zalt-doc.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zaltover.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zltattrs.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS/AF Software: Class Dictionary                                                                                         </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z1halt">Using the Program Halt Component</A></FONT></H1>


<P>The Program Halt Component has methods that are called when certain
run-time exceptions occur. To make effective use of a program halt component
in your application, you can override these methods to control how the exceptions
are handled.
<P>For example, you can create a subclass of Program Halt that overrides
the _onZeroDivide method:



<PRE>/* error.class overrides programHalt.class */ 
CLASS sasuser.myclass.error.class extends 
      sashelp.classes.ProgramHalt.class; 
_onZeroDivide:method / (STATE='O'); 
  /*processing goes here */ 
endmethod;</PRE>The _onZeroDivide method overrides the method on the parent
class and is invoked when a program halt occurs and the ZeroDivide event is
sent.
<P>The SCL code that would cause the program halt and send the ZeroDivide
event could look like:



<PRE>import sasuser.myclass.error.class; 
init: 
  dcl num x y; 
  dcl error errorobj = _new_ error(); 
  return; 
main: 
  x=0; 
  y=3/x;
return;</PRE>
<P>A program halt component enables you to determine whether an application
should continue executing or immediately halt execution. This behavior is
determined by the value of the <B>stopExecution</B> attribute. (The
default is "Yes" to stop program execution.)
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;The <B>stopExecution</B> attribute is the only attribute that is editable in a
program halt component. All other attributes are set by the component itself.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>The type of error that cause the program halt is stored to the <B>type</B> attribute. The
Program Halt Component can trap Generic, Generic
Math, Overflow, Underflow, or Zero Divide errors.
<P>The <B>dump</B> attribute stores the list ID of the list that
is otherwise displayed in the SAS Log when a program halt occurs. You can
use this list to identify problems in your application. For example, you could
implement a program halt component and override the error handling methods
to send e-mail of the dump when the program halt occurs.

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="zalt-doc.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zaltover.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zltattrs.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z1halt">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>