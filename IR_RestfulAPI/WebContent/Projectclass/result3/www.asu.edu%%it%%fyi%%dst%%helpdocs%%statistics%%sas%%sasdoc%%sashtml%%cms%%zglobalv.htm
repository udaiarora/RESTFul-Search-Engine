<HTML>
<!-- This page produced Tue Jul  6 11:09:12 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Running the SAS System under CMS : Accessing System Variables </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0606439.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zt-cpcms.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0558811.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS Companion for the CMS Environment                                                                                     </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="zglobalv">Accessing System Variables</A></FONT></H1>


<P><A name="z0595189">&#13;Under
CMS, SAS provides a mechanism for accessing system variables that have been
created with the CMS GLOBALV command.  You can access GLOBALV variables directly
from SAS by using either the %SYSGET macro function or the SYSGET DATA step
function. SAS also provides the SET= system option to create or change system
variables from within a SAS session.</A>
<P>The group name and variable name can be any that are
valid for the CMS GLOBALV command (see the <B>VM/ESA CMS Command Reference</B>). If you omit the group name, the variable is extracted from the group
SAS if it is found there, or else from the default group UNNAMED. If the variable
has not been set by GLOBALV, SYSGET or %SYSGET returns an error.
<P>SYSGET uses the EXECCOMM interface and therefore the
length of the variable name is limited to 250 characters. GLOBALV imposes
a maximum length of 255 characters on the variable's value. The full length
is returned by SYSGET or %SYSGET if the SAS variable is assigned a sufficient
length. Otherwise the value that is returned by SYSGET or %SYSGET is truncated
to the SAS variable's length, which is 200 characters by default.<DL>
<DT><B><FONT color="FF00007">CAUTION:</FONT></B></DT><DD><B>Using SYSGET or %SYSGET can replace the value of an existing
variable in your SAS EXEC.</B>
SYSGET and %SYSGET
use the EXECCOMM interface, which assigns variables in the SAS EXEC. If the
variable that you assign with SYSGET or %SYSGET has the same name as an existing
variable in the currently active EXEC, the existing variable receives the
value that is specified by SYSGET or %SYSGET. This change to a global variable
could adversely affect other aspects of your SAS session.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"></DD></DL>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Using the SYSGET DATA Step Function</FONT></B></TD></TR></TABLE>

<P><A name="z0595193">&#13; When you use the SYSGET DATA
step function to access
system variables, you must enclose the string that specifies the group name
and the variable name in single quotes:</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
SYSGET('<I>group-name variable-name</I>')
</TD></TR></TABLE>
<P>For example, if the group
name is MINE and the variable
name is TIME, your DATA step might look like this:    

<PRE>data test;
   x=sysget('mine time');
   . . . <I>more data lines</I> . . .
run;</PRE>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Using the %SYSGET Macro Function</FONT></B></TD></TR></TABLE>

<P><A name="z0595195">&#13; When you use the %SYSGET macro
function to access system variables,
do not enclose the string that specifies the group name and the variable name
in single quotes:</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
%SYSGET(<I>group-name variable-name</I>)
</TD></TR></TABLE>
<P>For example, if the group name is MINE and the
variable
name is TIME, your code might look like this:    

<PRE>%let x=%sysget(mine time);</PRE>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Using the SET= System Option</FONT></B></TD></TR></TABLE>

<P>The
SET= system option may be used to set a system variable from within your SAS
session, using the following syntax in an OPTIONS statement:
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
OPTIONS SET='&lt;<I>group-name</I>&gt;
<I>variable-name</I>=<I>value</I>'
</TD></TR></TABLE>The following example assigns the value of NOW to the variable TIME
in the group MINE:  

<PRE>options set='mine time=now';
run;</PRE>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0606439.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zt-cpcms.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0558811.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#zglobalv">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>