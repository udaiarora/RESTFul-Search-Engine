<HTML>
<HEAD>
<TITLE>TYPE Statement</TITLE>
<LINK REL="STYLESHEET" TYPE="text/css" HREF="../sas.css">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<A NAME="lp_3q00">&#13;</A>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A NAME="topofpage" HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect22.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect24.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
</TR>
</TABLE>
<TABLE BGCOLOR="#CCCC99" WIDTH="100%" CELLPADDING=4>
<TR>
  <TD VALIGN=MIDDLE CLASS="chaphead"><I><FONT SIZE="2">The LP Procedure</FONT></I></TD>
</TR>
</TABLE><BR>
<P><!--End of Navigation Panel-->
<H2>TYPE Statement</H2>
<A NAME="idxlp70372">&#13;</A><A NAME="idxlp70373">&#13;</A><DL><DD><B CLASS="ssbeleven">TYPE</B> <I CLASS="ssieleven"> variable <SPAN CLASS="ssbeleven"><B>;</B></SPAN></I></DL><BR>The TYPE statement specifies a character variable in the problem
data set that contains the type identifier for each observation.
This variable has keyword values that specify how the LP procedure 
should interpret the observation.  If the TYPE statement is omitted, 
the procedure assumes that the variable named <SPAN CLASS="ssfeleven">_TYPE_</SPAN> 
contains the type keywords.
<BR><BR>For the dense input format, the type variable identifies
the constraint and objective rows and rows that contain
information about the variables.  The type variable should have
nonmissing values in all observations.
<BR><BR>For the sparse input format,
the type variable identifies a model's rows and columns.
In an observation, a nonmissing type 
is associated with either a row or a column.
If there are many columns sharing the same type, you can define
a row of that type.  Then, any nonmissing values
in that row set the types of the corresponding columns.
<BR><BR>The following
are valid values for the TYPE variable in an observation:
<BR><BR><DL>
<DT><SPAN CLASS="ssiten"><I>MIN</I></SPAN>
<DD>contains the price coefficients of an objective row, for example,
<SPAN CLASS="mathfont"><I>c</I></SPAN> in the problem <I>(mip)</I>, to be minimized.
<DT><SPAN CLASS="ssiten"><I>MAX</I></SPAN>
<DD>contains the price coefficients 
of an objective row, for example, <SPAN CLASS="mathfont"><I>c</I></SPAN>,
to be maximized.
<DT><SPAN CLASS="ssiten"><I>EQ (=)</I></SPAN>
<DD>contains coefficients of an equality constrained row.
<DT><SPAN CLASS="ssiten"><I>LE (<IMG WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq14.gif"
 ALT="\leq">)</I></SPAN>
<DD>contains coefficients of an inequality, less than or equal to,
constrained row.
<DT><SPAN CLASS="ssiten"><I>GE (<IMG WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq15.gif"
 ALT="\geq">)</I></SPAN>
<DD>contains coefficients of an inequality, greater than or equal to,
constrained row.
<DT><SPAN CLASS="ssiten"><I>SOSEQ</I></SPAN>
<DD>identifies the row as specifying a special ordered set.
The variables flagged in this row are members of a set
<B>exactly one</B>  of
which must be above its lower bound in the optimal solution.
Note that variables in this type of special ordered set must 
be <B>integer</B>.
<DT><SPAN CLASS="ssiten"><I>SOSLE</I></SPAN>
<DD>identifies the row as specifying a special ordered set.
The variables flagged in this row are members of a set in
which only one can be above its lower bound in the optimal solution.
<DT><SPAN CLASS="ssiten"><I>UNRSTRCT</I></SPAN>
<DD>identifies
those structural variables 
to be considered as unrestricted variables. 
These are variables for which 
<SPAN CLASS="mathfont"><I>l</I><sub><I>i</I></sub></SPAN>=<SPAN CLASS="ssiten"><I>-INFINITY</I></SPAN> and <SPAN CLASS="mathfont"><I>u</I><SUB><I>i</I></SUB></SPAN>=<SPAN CLASS="ssiten"><I>+INFINITY</I></SPAN>. 
Any variable that has a <SPAN CLASS="mathfont">1</SPAN> in this observation is considered an
unrestricted variable.
<DT><SPAN CLASS="ssiten"><I>LOWERBD</I></SPAN>
<DD>identifies lower bounds on the structural
variables. If all structural variables are to be nonnegative,
that is, <SPAN CLASS="mathfont"><I>l</I><sub><I>i</I></sub> = 0</SPAN>, then you do not need to include an observation
with the <SPAN CLASS="ssiten"><I>LOWERBD</I></SPAN> keyword in a variable specified in the TYPE statement.
Missing values for variables in a lower-bound row
indicate that the variable has zero lower bound.<BR><BR><B>Note:</B> A variable with lower or upper bounds cannot be
identified as unrestricted.
<DT><SPAN CLASS="ssiten"><I>UPPERBD</I></SPAN>
<DD>identifies upper bounds <SPAN CLASS="mathfont"><I>u</I><SUB><I>i</I></SUB></SPAN> on the structural variables.
For each structural variable that is to have an upper bound
<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>u</I><SUB><I>i</I></SUB></SPAN>=+INFINITY</I></SPAN>, the observation must contain
a missing value or the current value of <SPAN CLASS="ssiten"><I>INFINITY</I></SPAN>. All other values are
interpreted as upper bounds, including 0.
<DT><SPAN CLASS="ssiten"><I>FIXED</I></SPAN>
<DD>identifies variables that have fixed values.  
A nonmissing value in a row with <SPAN CLASS="ssiten"><I>FIXED</I></SPAN> type keyword
gives the constant value of that variable. 
<DT><SPAN CLASS="ssiten"><I>INTEGER</I></SPAN>
<DD>identifies variables that are integer constrained.
In a feasible solution, these variables must
have integer values. A missing value
in a row with <SPAN CLASS="ssiten"><I>INTEGER</I></SPAN> type
keyword indicates that that variable is not integer constrained.
The value of variables in the <SPAN CLASS="ssiten"><I>INTEGER</I></SPAN> row gives an ordering to
the integer-constrained variables
that is used when the VARSELECT= option equals <SPAN CLASS="ssiten"><I>PRIOR</I></SPAN>.<BR><BR><B>Note:</B> Every integer-constrained variable must have an upper bound
defined in a row with type <SPAN CLASS="ssiten"><I>UPPERBD</I></SPAN>.
See 
the <A HREF="sect34.htm#lp_4id0">Controlling the Branch and Bound Search</A>
for further discussion.
<DT><SPAN CLASS="ssiten"><I>BINARY</I></SPAN>
<DD>identifies variables that are constrained to be either 0 or 1.
This is equivalent to specifying that the variable is an integer
variable and has a lower bound of 0 and an upper bound of 1.
A missing value
in a row with <SPAN CLASS="ssiten"><I>BINARY</I></SPAN> type
keyword indicates that that variable is not constrained to be 0 or 1.
The value of variables in the <SPAN CLASS="ssiten"><I>BINARY</I></SPAN> row gives an ordering to
the integer-constrained variables
that is used when the VARSELECT= option equals <SPAN CLASS="ssiten"><I>PRIOR</I></SPAN>.
See 
the <A HREF="sect34.htm#lp_4id0">Controlling the Branch and Bound Search</A>
for further discussion.
<DT><SPAN CLASS="ssiten"><I>BASIC</I></SPAN>
<DD>identifies variables that form
an initial basic feasible solution.
A missing value in a row with <SPAN CLASS="ssiten"><I>BASIC</I></SPAN> type indicates
that that variable is not basic.
<DT><SPAN CLASS="ssiten"><I>PRICESEN</I></SPAN>
<DD>identifies a vector that is used to evaluate the sensitivity of
the optimal solution to changes in the objective function.
See 
the <A HREF="sect35.htm#lp_4jb0">Price Sensitivity Analysis</A> and
<A HREF="sect37.htm#lp_4lb0">Price Parametric programming</A>
for further discussion.
<DT><SPAN CLASS="ssiten"><I>FREE</I></SPAN>
<DD>identifies a nonbinding
constraint. Any number of <SPAN CLASS="ssiten"><I>FREE</I></SPAN> constraints can appear in a problem
data set.
<DT><SPAN CLASS="ssiten"><I>RHS</I></SPAN>
<DD>identifies a right-hand-side column in the sparse input format.
This will replace the RHS statement.  It is useful when converting
the MPS format into the sparse format of PROC LP.  
See 
the <A HREF="sect28.htm#lp_4c00">Converting MPS Format</A>
for more information.
<DT><SPAN CLASS="ssiten"><I>RHSSEN</I></SPAN>
<DD>identifies a right-hand-side sensitivity analysis vector in the sparse
input format.  This replaces the RHSSEN statement.
It is useful when converting
the MPS format into the sparse format of PROC LP.  
See 
the <A HREF="sect28.htm#lp_4c00">Converting MPS Format</A>
for more information.
<DT><SPAN CLASS="ssiten"><I>RANGE</I></SPAN>
<DD>identifies a range vector in the sparse input format.
This replaces the RANGE statement.
It is useful when converting
the MPS format into the sparse format of PROC LP.  
See 
the <A HREF="sect28.htm#lp_4c00">Converting MPS Format</A>
for more information.
</DL><P>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect22.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect24.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="#topofpage">
  <IMG BORDER="0" SRC="../../common/images/top1.gif" ALT="Top" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Top</FONT></A></TD>
</TR>
</TABLE>
<P><!--End of Navigation Panel-->
<P><FONT SIZE="1"><A HREF="../../common/images/copyrite.htm">Copyright &copy; 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>
