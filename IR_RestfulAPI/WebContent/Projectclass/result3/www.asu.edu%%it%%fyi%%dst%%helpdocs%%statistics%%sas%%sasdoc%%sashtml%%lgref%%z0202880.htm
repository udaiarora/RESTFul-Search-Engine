<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Functions and CALL Routines : PEEKC </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0245852.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0202878.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z1009940.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">PEEKC</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0202880">PEEKC</A></FONT></H1>

<P><HR><BR><B>Stores the contents of a memory address into a character variable</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Category:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Special
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0202880.htm#zid-1387"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0202880.htm#zid-1388"><FONT size="2"><B>Arguments</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0202880.htm#z0226410"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0202880.htm#z0226411"><FONT size="2"><B>Comparisons</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0202880.htm#z0226412"><FONT size="2"><B>Examples</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0202880.htm#z0226413"><FONT size="2">Example 1: Listing ASCB Bytes</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0202880.htm#z0226415"><FONT size="2">Example 2: Creating a DATA Step View</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0202880.htm#z0226417"><FONT size="2"><B>See Also</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="zid-1387">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PEEKC</B>(<I>address</I>&lt;,<I>length</I>&gt;)
</TD></TR></TABLE>
<BR><H3><A name="zid-1388">Arguments</A></H3>

<P><A name="z0845306">&#13;</A>
<DL>
<DT><B><B><I>address</I></B></B></DT>
<DD>specifies the memory address.<P></DD>

<DT><B><B><I>length</I></B></B></DT>
<DD>specifies the data length.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">8, unless the variable
length has already been set (by the LENGTH statement, for example)</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5">1 to 32,767</TD>
</TABLE>
<P></DD>
</DL>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0226410">Details</A></FONT></B></TD></TR></TABLE>

<P>If you do not have
access to the memory storage location that you are requesting, the PEEKC function
returns an "Invalid argument" error.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0226411">Comparisons</A></FONT></B></TD></TR></TABLE>

<P><A name="z0845314">&#13;The PEEKC function stores the
contents of a memory address into a <I>character</I>
variable. The PEEK function stores the contents of a memory address into a<I> numeric </I> variable.</A>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0226412">Examples</A></FONT></B></TD></TR></TABLE>

<BR><H3> <A name="z0226413">Example 1: Listing ASCB Bytes</A> </H3>


<P>The following
example, specific to the OS/390 operating environment, uses both PEEK and
PEEKC, and prints the first four bytes of the Address Space Control Block
(ASCB).  



<PRE>data _null_;
   length y $4;
      /* 220x is the location of the ASCB pointer */
   x=220x; 
   y=peekc(peek(x));
   put 'y= ' y;
run;</PRE>
<BR><H3> <A name="z0226415">Example 2: Creating a DATA Step View</A> </H3>


<P>This example, specific to the OS/390 operating environment, also uses both
the PEEK and PEEKC functions. It creates a DATA step view that accesses the
entries in the Task Input Output Table (TIOT). The PRINT procedure is then
used to print the entries. Entries in the TIOT include the three components
outlined in the following list. In this example, TIOT represents the starting
address of the TIOT entry. 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>TIOT+4</TD>
<TD align="left">is the DDname. This component takes
up 8 bytes.</TD></TR>

<TR align=left valign="top">
<TD>TIOT+12</TD>
<TD align="left">is a 3-byte pointer to the Job File
Control Block (JFCB).</TD></TR>

<TR align=left valign="top">
<TD>TIOT+134</TD>
<TD align="left">is the volume serial number (volser)
of the data set. This component takes up 6 bytes.</TD></TR>
</TABLE>
Here is the program:  



<PRE>   /* Create a DATA step view of the contents    */
   /* of the TIOT. The code steps through each   */
   /* TIOT entry to extract the DDname, JFCB,    */ 
   /* and volser of each DDname that has been    */ 
   /* allocated for the current task. The data   */
   /* set name is also extracted from the JFCB.  */
  
data save.tiot/view=save.tiot;
   length ddname $8 volser $6 dsname $44;
      /* Get the TCB (Task Control Block)address */ 
      /* from the PSATOLD variable in the PSA    */
      /* (Prefixed Save Area).  The address of   */ 
      /* the PSA is 21CX. Add 12 to the address  */
      /* of the TCB to get the address of the    */
      /* TIOT. Add 24 to bypass the 24-byte      */  
      /* header, so that TIOTVAR represents the  */ 
      /* start of the TIOT entries.              */

   tiotvar=peek(peek(021CX)+12)+24;

      /* Loop through all TIOT entries until the */
      /* TIOT entry length (indicated by the     */
      /* value of the first byte) is 0.          */
         
   do while(peek(tiotvar,1));

      /* Check to see whether the current TIOT   */
      /* entry is a freed TIOT entry (indicated  */
      /* by the high order bit of the second     */
      /* byte of the TIOT entry). If it is not   */
      /* freed, then proceed.                    */
            
      if peek(tiotvar+1,1)NE'l.......'B then do;
         ddname=peekc(tiotvar+4);
         jfcb=peek(tiotvar+12,3);
         volser=peekc(jfcb+134);
            /* Add 16 to the JFCB value to get  */ 
            /* the data set name.  The data set */
            /* name is 44 bytes.                */

         dsname=peekc(jfcb+16);
         output;
         end;

         /* Increment the TIOTVAR value to point */
         /* to the next TIOT entry. This is done */
         /* by adding the length of the current  */ 
         /* TIOT entry (indicated by first byte  */ 
         /* of the entry) to the current value   */
         /* of TIOTVAR.                          */

      tiotvar+peek(tiotvar,1);
   end;

      /* The final DATA step view does not       */ 
      /* contain the TIOTVAR and JFCB variables. */

   keep ddname volser dsname;
run;

     /* Print the TIOT entries.                  */
proc print data=save.tiot uniform width=minimum;
run;</PRE>


In the PROC PRINT statement, the UNIFORM option ensures that each
page of the output is formatted exactly the same way. WIDTH=MINIMUM causes
the PRINT procedure to use the minimum column width for each variable on the
page. The column width is defined by the longest data value in that column.
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><FONT size="5"><A name="z0226417">See Also</A></FONT>
</FONT></B></TD></TR></TABLE>
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>CALL Routine: 
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD><A href="z0127816.htm">CALL POKE</A></TD></TR></TABLE></TD></TR>
<TR valign="top"><TD></TD><TD>Functions:
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD><A href="z0202872.htm">ADDR</A></TD></TR>
<TR valign="top"><TD></TD><TD><A href="z0202878.htm">PEEK</A></TD></TR></TABLE></TD></TR></TABLE>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0245852.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0202878.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z1009940.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0202880">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>