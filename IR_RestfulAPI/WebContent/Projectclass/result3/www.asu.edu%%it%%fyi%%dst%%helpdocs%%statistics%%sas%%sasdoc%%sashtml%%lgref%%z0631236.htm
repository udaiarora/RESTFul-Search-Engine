<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Statements : PUT, _ODS_ </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0174678.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0510006.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">PUT, _ODS_</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0631236">PUT, _ODS_</A></FONT></H1>

<P><HR><BR><B>Writes data values to a special buffer from which they can be
written to the data component, and formatted by ODS destinations</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Valid:</B></TD>
<TD bgcolor="#CCCCCC" align="left">in a DATA step
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Category:</B></TD>
<TD bgcolor="#CCCCCC" align="left">File-handling
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Type:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Executable
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0631236.htm#zid-2578"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0631236.htm#z0630601"><FONT size="2"><B>Arguments</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0631236.htm#z0629434"><FONT size="2"><B>Options</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0631236.htm#z0629399"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0631236.htm#z0629466"><FONT size="2">Column Pointer Controls and ODS</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0631236.htm#z0629481"><FONT size="2">Line Pointer Controls</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0631236.htm#z0629484"><FONT size="2">When the Pointer Goes Past the End of a Line</FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="zid-2578">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PUT</B>
&lt;<I>specification(s)</I>&gt;&lt;_ODS_&gt;&lt;@|@@&gt; ;
</TD></TR></TABLE><A name="zid-2579">&#13;</A>
<P>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0630601">Arguments</A></FONT></B></TD></TR></TABLE>

<P>
<DL>
<DT><B>specification</B></DT>
<DD>specifies the variables to write and where
to write them. Each specification has the following form: 
<P>&lt;<B>ods-pointer-control</B>><B>variable</B>

<P>
<DL>
<DT><I>ods-pointer-control</I></DT>
<DD><P></DD>

<DT><I>variable</I></DT>
<DD>identifies the variable to write.<P></DD>
</DL>
<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0629434">Options</A></FONT></B></TD></TR></TABLE>

<DL>
<DT>_ODS_</DT>
<DD>moves data values for all columns to a buffer.
The order of these columns is determined by the orderthat is specified by
the COLUMNS= or VARIABLES= suboption in the ODS option in the FILE statement.
If you do not specify either of these options, the order of the variables
in the program data vector determines their order in the buffer.
<P>The PUT statement writes this buffer to the data component.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Interaction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use _ODS_
in a PUT statement that specifies the placement of individual variables. _ODS_
writes to a particular column only if a PUT statement has not already written
a variable to that column. The position of _ODS_ in the PUT statement does
not affect the outcome in the data component, but it may affect performance.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction: </B></TD>
<TD align="left" bgcolor="#F5F5F5">Use _ODS_ only
if you have previously specified the ODS option in the FILE statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The order of the column
in the data component matches the order of the columns in buffer. However,
the template that is combined with the data component to produce the output
object may override this order.</TD>
</TABLE>
<P></DD>

<DT>@ | @@ </DT>
<DD>holds an output line for the execution of
the next PUT statement across iterations of the DATA step. The line-hold specifiers
are called <B>trailing @</B> and <B>double trailing @</B>. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you do not use @
or @@, each PUT statement in a DATA step writes a new line to the buffer.</TD>
</TABLE>
<P></DD>
</DL>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0629399">Details</A></FONT></B></TD></TR></TABLE>

<P>Within the DATA
step, the ODS option in the FILE statement and the _ODS_ option in the PUT
statement provide connections with the Output Delivery System (ODS). You use
both of these connections to route the results of a DATA step to ODS. By default,
when the DATA step uses ODS, ODS writes output objects to the procedure output
and places links to them in the Results folder. You can use global ODS statements
to write to other ODS destinations.
<P>The FILE and PUT statements interact in the following
ways:
<P>
<UL>

<LI>The ODS option in the FILE statement defines the
structure of the data component that holds the results of the DATA step.<P>

<LI>The _ODS_ option in the PUT statement writes values
(as specified by the ODS option in the FILE statement) into a special buffer.
 This buffer is written to the data component.<P>

<LI>The ODS option in the FILE statement binds the
data component to a template to produce an output object. ODS sends this object
to all open ODS destinations, each of which formats the object appropriately.<P>
</UL>

<P>The ODS destinations are controlled by the global ODS
statements. You can use an existing template or create your own with the TEMPLATE.
procedure.
<P>For details on using the Output Delivery System, see <B>The Complete Guide to the SAS Output Delivery     System</B>.
<BR><H3><A name="z0629466">Column Pointer Controls and ODS</A></H3>


<P>Column pointer controls in a DATA step that uses ODS differ slightly from
column pointer controls in a DATA step that does not use ODS. ODS is not character-based.
Therefore, in ODS a column contains the entire value of a variable. Column
1 contains the first variable in the output; column 2 contains the second
variable, and so on. 
<P>Column pointer controls have the following general forms: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>@<B>ods-column</B></TD></TR>
<TR valign="top"><TD></TD><TD>+<B>ods-column</B></TD></TR></TABLE>
<DL>
<DT>@<B>ods-column</B></DT>
<DD>moves the pointer to the specified ODS column.
 <I>ods-column</I> can be a number, a numeric-variable,
or an expression that identifies the column to write to.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If <I>ods-column</I> is a number, it must be a positive integer.
<P>If
<I>ods-column</I> is a variable
or an expression, SAS treats it as follows:
<P>
<TABLE cellpadding="6" cellspacing="0" border="1">


<TR valign="bottom" bgcolor="#CCCCCC">
  <TH  align="LEFT" valign="TOP" ><B>If the variable or expression is ...</B></TH>
  <TH  align="LEFT" valign="TOP" ><B>SAS</B></TH>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">not an integer</TD>
  
<TD  align="LEFT" valign="TOP">truncates the decimal portion and uses only the integer
value</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">0 or negative</TD>
  
<TD  align="LEFT" valign="TOP">moves the pointer to column 1</TD>
</TR>

</TABLE>

<BR></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">By default, if  <I>ods-column</I> exceeds the number of columns in the data component,
ODS writes the current line, moves the pointer to the first column on the
next line, and continues to process the PUT statement. You can alter this
behavior with options in the FILE statement.</TD>
</TABLE>
<P></DD>

<DT>+<B>ods-column</B></DT>
<DD>moves the pointer the specified number of
columns. <I>ODS-column</I> can be a number, a numeric-variable,
or an expression that specifies the number of columns to move the pointer. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If <I>ods-column</I> is a number, it must be an  integer. If <I>ods-column</I> is a variable or an
expression, it does not have to be an
integer. If it isn't, SAS truncates the decimal portion and uses the only
the integer value.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If <I>ods-column</I> is greater than 0, the pointer moves to the right. If <I>ods-column</I> is less than
0, the pointer moves to the left. If <I>ods-column</I> is equal to 0, the pointer does not move.
<P>If the current column position becomes less than 1,
the pointer moves to column 1. If the current column position exceeds the
number of columns in the data component, the ODS writes the current line,
moves the pointer to the first column on the next line, and continues to process
the PUT statement.</TD>
</TABLE>
<P></DD>
</DL>
 
<BR><H3><A name="z0629481">Line Pointer Controls</A></H3>


<P>Line pointer controls in a DATA step that uses ODS are the same as line pointer
controls in a DATA step that does not use ODS. Line pointer controls have
the following general forms:  



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>#<B>line</B></TD></TR>
<TR valign="top"><TD></TD><TD>/</TD></TR></TABLE>
<DL>
<DT>#<B>line</B></DT>
<DD>moves the pointer to the specified line. <I>line</I> can be a number, a numeric-variable, or an expression
that identifies the line to write to. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If <I>line</I> is a number, it must be an  integer. If <I>line</I> is a variable or an expression, it
does not have to be an
integer. If it isn't, SAS truncates the decimal portion and uses the only
the integer value.</TD>
</TABLE>
<P></DD>

<DT>/</DT>
<DD>moves the pointer to the first column of
the next line.<P></DD>
</DL>
 
<BR><H3><A name="z0629484">When the Pointer Goes Past the End of a Line</A></H3>


<P>In a DATA step that uses the Output Delivery System,
the number of columns that is specified by the COLUMNS= or VARIABLES= suboption
to the ODS option in the FILE statement determines the number of columns in
the buffer, and eventually, in the data component. If you do not specify either
of these options, the number of the variables in the program data vector determines
the number of columns.
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;The template that is combined
with the data component to produce the output object may change the number
of columns that actually appear in the output object.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>Using pointer controls and trailing @ or double trailing
@, you may inadvertently position the pointer beyond the last column. You
control how SAS handles this situation with options in the FILE statement.

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0174678.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0510006.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0631236">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>