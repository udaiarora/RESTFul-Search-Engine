<HTML>
<!-- This page produced Tue Jun 22 10:41:23 EDT 1999
 -->
<!-- Used program version 1.117.1.1 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>OpenVMS: DECnet Access Method : SAS/SHARE </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0381608.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0381612.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0145433.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">Communications Access Methods for SAS/CONNECT     and SAS/SHARE Software                                                  </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0381620">SAS/SHARE</A></FONT></H1>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Client Tasks</FONT></B></TD></TR></TABLE>

<P><B>System Administrator, Applications Programmer, and
User</B>
<P>To prepare for accessing a SAS/SHARE server,
perform the following tasks: 
<OL START="1" type="1">
<LI>Set security for connecting clients.<P>

<LI>Specify the DECnet access method.<P>

<LI>Specify a
server name.<P>
</OL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Setting Security for Connecting Clients</FONT></B></TD></TR></TABLE>

<P>Requiring connecting clients to supply a valid userid
and password enforces server security. At the client, set the preferred security
method for specifying a userid and password that are valid on the server host.
For details, see <A href="z0381609.htm#z1256641">Setting Security for SAS/CONNECT and SAS/SHARE</A>. 
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Specifying the DECnet Communications Access Method</FONT></B></TD></TR></TABLE>

<P>You must specify
the DECnet communications access method at the client before you access a
server.
<P>Use the following syntax to specify the DECnet access method at each
connecting client:  



<PRE>OPTIONS COMAMID=<I>access-method-id</I>;</PRE>
<P>where
COMAMID is an acronym for Communications Access Method Identification. <B>access-method-id</B> is an abbreviation for the method used by the client
to communicate with the server.  DECnet (an acronym for Digital Equipment
Corporation's Networking architecture) is an example of an <B>access-method-id</B>.
<P>Example:  



<PRE>options comamid=decnet;</PRE>
<P>The server is accessed using the DECnet access method.
<P>You may specify the COMAMID option in an OPTIONS statement, at a SAS
invocation, or in a SAS configuration file.
<P>Additionally
you may use the COMAUX1 and  COMAUX2  options to designate auxiliary communications
access methods. See <A href="z0381371.htm#z1135748">SAS/CONNECT and SAS/SHARE: Supported Access Methods According to Host Release</A>
for the supported access methods by host. If the first method fails to access
a server, the second method will be attempted, and so on. You can specify
up to two auxiliary access methods, depending on the number of methods that
are supported between client and server hosts.
<P>COMAUX options can be specified only in an OPTIONS statement. The syntax
for the COMAUX option follows:  



<PRE>OPTIONS COMAUX1=<I>alternate-method</I>;</PRE>
<P>An example of the OPTIONS statements for an OpenVMS client that is connecting
to a server follows:  



<PRE>options comamid=decnet;
options comaux1=tcp;</PRE>
<P>If the server cannot be reached with the DECNET method, a second attempt
is made with the TCP/IP access method.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="znetserv">Specifying a Server Name</A></FONT></B></TD></TR></TABLE>

<P>If the client and server sessions
are running on different network nodes, you must include the DECnet node in
the server identifier in the PROC SERVER command or in the LIBNAME and PROC
OPERATE statements as follows:  



<PRE>SERVER=<I>node.server-id</I></PRE>
<P>This
representation is known as a two-level server name.
<P><B>node</B> must be a valid DECnet node name. If the server and
the client sessions are running on the same node, you may omit the node name.
<P>If the DECnet node name is not a valid SAS name (for example, it contains
a digit or its length exceeds eight characters such as when you assign ACI
to the node name) you have several options for validating the node name: 
<P>
<UL>

<LI>Assign the name of the server's node to a SAS macro variable,
then use the name of the macro variable for <B>node</B> in the two-level
server name.<P>

<LI>Assign the name of the server's node to an OpenVMS logical name,
then use the name of that OpenVMS logical name for <B>node</B> in the
two-level server name.<P>

<LI>Assign the name of the server's node to a DCL symbol, then use
the DCL symbol for <B>node</B> in the two-level server name.<P>
</UL>

<P>The access method evaluates the node name, in this order of precedence:

<P>
<UL>

<LI>acceptable node name<P>

<LI>OpenVMS logical name<P>

<LI>SAS macro variable<P>

<LI>DCL
symbol.<P>
</UL>

<P>Examples: 
<P>
<UL>

<LI>OpenVMS logical name format:  



<PRE>$ define <I>alias</I> "<I>node</I>"["<I>userid password</I>""]</PRE><P>
</UL>

<P>Example of OpenVMS logical name format:  



<PRE>$ define fred "4sonar""bass time2go""</PRE>


 
<P>
<UL>

<LI>SAS macro variable format:  



<PRE>1? %let <I>alias</I>=<I>node</I> ["<I>username password</I>"];</PRE><P>
</UL>

<P>Example of SAS macro variable format:  



<PRE>1? %let fred=4sonar"bass time2go";</PRE>


 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;Do
not use an ampersand (&amp;) in a two-level name. An ampersand causes the
macro variable to be resolved by the SAS parser prior to syntactic evaluation
of the SERVER= option. The access method evaluates the node name in a two-level
server name.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>See <B>SAS Language Reference: Dictionary</B> for details about SAS naming rules. See <B>SAS/SHARE User's Guide</B> for details
about the PROC SERVER, PROC OPERATE, and LIBNAME statements. 
<P>
<UL>

<LI>DCL symbol format:  



<PRE>$ <I>alias</I>:="<I>node</I>"["username password""]</PRE><P>
</UL>

<P>Example of DCL symbol:  



<PRE>$ fred:="4sonar""bass time2go""</PRE>



<P>
<UL>

<LI>USER= and PASSWORD= options to applicable SAS/CONNECT statement:
<PRE><I>statement</I> USER=<I>username</I> PASSWORD=<I>password</I>;</PRE><P>
</UL>

<P>Example of USER= and PASSWORD= options to SIGNON:



<PRE>signon user=bass password=time2go;</PRE>
<P>In the preceding examples, the alias is FRED, the node is 4SONAR, the
username is BASS, and the password is TIME2GO.
<P>For details about starting a SAS/SHARE server,
see <B>SAS/SHARE User's Guide</B>.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Client Example</FONT></B></TD></TR></TABLE>

<P>The following example illustrates
the statements
that you specify in an OpenVMS client SAS session to access a server with
the DECnet access method:  



<PRE>options comamid=decnet;
libname sasdata [edc.prog2.sasdata] user=_prompt_ server=rmthost.share1;</PRE>
<P>The DECnet access method is declared. The LIBNAME statement specifies
the data library that is accessed through the server, which is specified by
the two-level server name RMTNODE.SHARE1 by means of a prompt for a username
and a password that are valid on the server 
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Server Tasks</FONT></B></TD></TR></TABLE>

<P><B>Server
Administrator</B>
<P>To set up a secure server and to make it accessible to a client, perform
the following tasks: 
<P>
<UL>

<LI>Assign a privileged account to the server.<P>

<LI>Set DECNET access method security.<P>

<LI>Specify the
communications access method.<P>

<LI>Specify the server name.<P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Assigning a Privileged Account to the Server</FONT></B></TD></TR></TABLE>

<P>Ask
your system administrator to verify that the account in which the secured
server runs has one of these privileges:  GRPPRV, SYSPRV, or BYPASS. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If the server has GRPPRV privilege, only users in the same UIC group
as the server will be able to have access to files validated by the server.
Users that are not in the same UIC group as the server will not be able to
use the server.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Setting DECnet Access Method Security</FONT></B></TD></TR></TABLE>

<P>Before
you can create a secure SAS/SHARE server,
you must make the access method secure by setting the SASSECUR macro or environment
variable to  _SECURE_.  See <A href="z0381609.htm#zcnetvar">SAS/SHARE SASSECUR Variable</A>
for information about setting the SASSECUR variable.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Specifying the DECnet Communications Access Method</FONT></B></TD></TR></TABLE>

<P>You must specify
the DECnet communications access method at the server before you create a SAS/SHARE server.
<P>Use the following syntax to specify the DECnet access
method at the
server:  



<PRE>OPTIONS COMAMID=<I>access-method-id</I>;</PRE>
<P>where
COMAMID is an acronym for Communications Access Method Identification. <B>access-method-id</B> is an abbreviation for the method used by the server
to communicate with the client.  DECnet (an acronym for Digital Equipment
Corporation's Networking architecture) is an example of an <B>access-method-id</B>.
<P>For a server that is running on a host on which only one communications
access method is available, use only the COMAMID option.
<P>Example:  



<PRE>options comamid=decnet;</PRE>
<P>The server will be available only to SAS/SHARE sessions
that use the DECnet access method.
<P>You may specify the COMAMID option in an OPTIONS statement, at a SAS
invocation, or in a SAS configuration file.
<P>If, however,
the host on which a server runs supports multiple access methods, you may
specify up to two auxiliary access methods by which clients may access the
server using the COMAUX1 and COMAUX2 options. See <A href="z0381371.htm#z1135748">SAS/CONNECT and SAS/SHARE: Supported Access Methods According to Host Release</A> for the supported access methods by host.
<P>All of the access
methods initialize when the server initializes. The
activation of multiple access methods makes a server available to several
groups of clients, each using a different communications access method simultaneously.
<P>COMAUX
options can be specified in an OPTIONS statement only.
The syntax for the COMAUX option follows:  



<PRE>OPTIONS COMAUX1=<I>alternate-method</I>;</PRE>
<P>An example of the OPTIONS statements for a server that is running on
an OpenVMS host follows.
<P>
<PRE>options comamid=decnet;
options comaux1=tcp;</PRE>
<P>When the server starts, all of the communications access methods are
initialized.  The server is simultaneously available to client sessions that
use the DECnet access method as well as to clients that use the TCP/IP access
method.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Specifying a Server Name</FONT></B></TD></TR></TABLE>

<P>If the client and server sessions
are running on different network nodes, you must include the DECnet node in
the server identifier in the PROC SERVER command. See <A href="#znetserv">Specifying a Server Name</A> for server-naming rules.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Server Example</FONT></B></TD></TR></TABLE>

<P>The following example illustrates
the statements
that you specify in a SAS session on the OpenVMS host at which you start a
server:  



<PRE>%let sassecur=_secure_;
options comamid=decnet;
proc server id=share1 authenticate=req;
run;</PRE>
<P>The SASSECUR variable requires clients to submit a userid and a password
that are valid on the server. The DECnet access method is declared and a server
with the <B>server-id</B> SHARE1 is started on the OpenVMS host. The
additional options in the PROC SERVER statement allow only validated clients
to access the server.

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0381608.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0381612.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0145433.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0381620">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>