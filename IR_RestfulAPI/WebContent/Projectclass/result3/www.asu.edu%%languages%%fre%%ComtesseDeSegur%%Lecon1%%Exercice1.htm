<html>
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Temporary registration."></meta><meta name="keywords" content="Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta>
<title>
EXERCICE 1
</title>

<script language="javascript" type="text/javascript">

//<![CDATA[

<!--

// BrowserCheck Object

function BrowserCheck() {
	var b = navigator.appName
//HBS extension
	this.mac = (navigator.appVersion.indexOf('Mac') != -1)
	if (b=="Netscape") this.b = "ns"
	else if (b=="Microsoft Internet Explorer") this.b = "ie"
	else this.b = b
	this.version = navigator.appVersion
	this.v = parseInt(this.version)
	this.ns = (this.b=="ns" && this.v>=4)
	this.ns4 = (this.b=="ns" && this.v==4)
	this.ns5 = (this.b=="ns" && this.v==5)
	this.ie = (this.b=="ie" && this.v>=4)
	this.ie4 = (this.version.indexOf('MSIE 4')>0)
	this.ie5 = (this.version.indexOf('MSIE 5')>0)
	this.min = (this.ns||this.ie)
	this.CRAPBrowser = (this.ie && this.mac); //Cannot Resolve Addresses Properly
}

is = new BrowserCheck();

var LocFolder = GetFolder(window.location.href);
function GetFolder(LocPath){
	LocPath = ReplaceStuff('\'','%27',LocPath);
	var i = LocPath.lastIndexOf('/');
	if (i<0){i=LocPath.lastIndexOf('\\')};
	return LocPath.substring(0,i);
}

function CombineURLs(InURL){
	var i = InURL.indexOf('../');
	var s = LocFolder;
	while (i >- 1){
		s = GetFolder(s);
		InURL = InURL.substring(3,InURL.length);
		i = InURL.indexOf('../');
	}
	return s + '/' + InURL;
}

x = new Array();
function ResolveURLs(InText,Attribute){
	x.length=0;
	var Temp = InText.toLowerCase();
	var z;
	var AttLen = Attribute.length + 2;
	var y=Temp.lastIndexOf(Attribute + '="');
	while (y>-1){
		var sLoc = y+AttLen;
		if (Temp.substring(sLoc,sLoc+5) != 'http:'){
			x[x.length]=new Array();
			x[x.length-1][0] = sLoc;
			z = Temp.indexOf('"',sLoc);
			x[x.length-1][1] = z;
			x[x.length-1][2] = InText.substring(sLoc,z);

		}
		Temp = Temp.substring(0,y);
		y=Temp.lastIndexOf(Attribute + '="');
	}
	for (var j=0; j<x.length; j++){
		InText = InText.substring(0,x[j][0]) + CombineURLs(x[j][2]) + InText.substring(x[j][1], InText.length);
	}
	return InText;
}

function ResolveAllURLs(Stuff){
	Stuff = ResolveURLs(Stuff,'href');
	Stuff = ResolveURLs(Stuff,'src');
	Stuff = ResolveURLs(Stuff,'parent.location');
	return Stuff;
}

var CorrectIndicator = ':-)';
var IncorrectIndicator = 'X';
var YourScoreIs = 'Your score is '; //'Your score is: ';
var CorrectResponse = 'Correct! Well done.';
var IncorrectResponse = 'Sorry! Try again. Incorrect matches have been removed.';
var TotalUnfixedLeftItems = 0;
var TotCorrectChoices = 0;
var Penalties = 0;
var ExerciseTitle = 'EXERCICE 1'; //'Test exercise';
var ExerciseSubtitle = 'Matching exercise'; //'Multiple-choice';
var Instructions = 'Match the items on the right with the items on the left.'; //'';
var DefaultResponse = '[strDefaultResponse]';
var ReadingURL = '';

var PreviousPage = history.length;



ReadingText='<html><head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Temporary registration."></meta><meta name="keywords" content="Hot Potatoes, Half-Baked Software, Windows, University of Victoria"></meta><title>Une mauvaise plaisanterie</title></head><body background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc"><center><table border="0" cellpadding="5" cellspacing="1" width="85%"><tr><td align="center" bgcolor="#ffffff"><font size="+1" face="Geneva,Arial" color="#000033">Une mauvaise plaisanterie<br></br></font></td></tr><tr><td bgcolor="#bbbbee"><font face="Geneva,Arial" size="-1" color="#000000">Plusieurs enfants jouaient dans le jardin de Mme Dupuis ; il faisait beau temps, presque trop chaud.  Jacques, Louis, Nicolas et Jules se reposaient sur un banc.  Jacques s\'essuyait le front   avec son mouchoir ;  il avait b\u00EAch\u00E9, arros\u00E9, ratiss\u00E9, et il se reposait en causant avec ses amis.<br />JACQUES :   Quelle chaleur il fait aujourd\'hui ! c\'est presque comme en \u00E9t\u00E9.<br />LOUIS:   Nous sommes bien pr\u00E8s de l\'\u00E9t\u00E9.<br />NICOLAS :   Non, puisque nous commen\u00E7ons le printemps.<br />LOUIS:  Eh bien ! est-ce que  le printemps ne touche pas \u00E0 l\'\u00E9t\u00E9?<br />NICOLAS:   Oui, comme il touche \u00E0 l\'hiver.<br />JACQUES:  Ce n\'est pas la m\u00EAme chose ; l\'hiver est en arri\u00E8re, et l\'\u00E9t\u00E9 est en avant ; la preuve, c\'est que c\'est demain le 1er  avril.	<br />JULES :  Le 1er avril demain ! Je n\'y pensais pas. C\'est le jour des attrapes. T\u00E2chons d\'attraper quelqu\'un.	<br />JACQUES : Pas moi d\'abord. Je n\'aime pas \u00E0 tromper.	<br />JULES : Que tu es b\u00EAte ! Ce n\'est pas pour tout de bon ; c\'est pour rire<br />NICOLAS : Je crois bien ! J\'ai jou\u00E9 beaucoup de tours du 1er avril, tr\u00E8s dr\u00F4les et tr\u00E8s innocents.<br />LOUIS: Quels tours as-tu faits ?		<br />NICOLAS : Un jour, j\'ai \u00E9crit \u00E0 un vieux M. Poucque, ami de ma tante Dupont, qu\'elle l\'attendait pour d\u00EEner avec un missionnaire qui avait \u00E9t\u00E9 martyris\u00E9 en Chine et qu\'il d\u00E9sirait beaucoup conna\u00EEtre. Pr\u00E9cis\u00E9ment, ce jour-l\u00E0, le 1er avril, ma tante d\u00EEnait chez nous. Le vieux monsieur est arriv\u00E9 en belle toilette ; il avait pris une voiture, parce qu\'il pleuvait. Le portier lui dit que ma tante \u00E9tait sortie ;  il veut monter pour l\'attendre ; le portier assure qu\'elle doit rentrer tard dans la soir\u00E9e ; M. Poucque se f\u00E2che ; le portier se f\u00E2che aussi; ils se disputent longtemps ; le  monsieur monte, ne trouve personne ; la pluie tombait par torrents ; pas de voiture pour retourner chez lui ; le bonhomme est oblig\u00E9 de s\'en aller \u00E0 pied ; il rentre ruisselant d\'eau et fort en col\u00E8re ; son domestique \u00E9tait sorti ; pas de d\u00EEner ; il n\'a que du pain et des confitures, et le lendemain il \u00E9crit \u00E0 ma tante une lettre furieuse, \u00E0 laquelle elle ne comprend rien ; elle le prie de venir la voir ; il lui montre sa lettre d\'invitation ; elle devine que c\'est un tour qu\'on lui a jou\u00E9 ; ils cherchent et ne trouvent pas le coupable (car j\'avais fait copier ma lettre par un de mes camarades de coll\u00E8ge, pour qu\'on ne reconn\u00FBt pas mon \u00E9criture). Ma tante nous a racont\u00E9 I\'histoire ; j\'\u00E9tais enchant\u00E9 d\'avoir si bien reussi, et voil\u00E0 pourquoi je voudrais cette ann\u00E9e-ci encore faire une attrape \u00E0 quelqu\'un.	 	<br />LOUIS: Tu appelles cela un tour innocent ? C\'est tr\u00E8s m\u00E9chant pour ce pauvre M. Poucque, qui n\'a pas d\u00EEn\u00E9 qui a \u00E9t\u00E9 tremp\u00E9 et qui a pass\u00E9 une triste soir\u00E9e.<br />JACQUES : Sans compter qu\'il est pauvre et qu\'il a d\u00E9pens\u00E9 de l\'argent pour une voiture.<br />NICOLAS: Bah ! Bah !  On ne s\'amuserait jamais si on regardait \u00E0 tout.<br />LOUIS : C\'est que je ne trouve aucun amusement \u00E0 faire de la peine \u00E0 quelqu\'un.<br />NICOLAS : Que tu es b\u00EAte ! Ce n\'est pas  une grande  peine d\'\u00EAtre attrap\u00E9!<br />JACQUES : Non, mais c\'est un ennui, on est vex\u00E9 de s\'\u00EAtre laiss\u00E9 attraper.<br />JULES : Alors to ne veux pas m\'aider \u00E0 jouer un petit tour \u00E0 la bonne de tes cousins Pierre et Henri ? Tu  sais comme elle est ennuyeuse ! elle emm\u00E8ne toujours tes cousins au plus fort de nos jeux.<br />JACQUES : Ce n\'est pas pour les tourmenter ; il faut qu\'ils rentrent pour apprendre leurs le\u00E7ons.<br />JULES : Voyons ! veux-tu ou ne veux-tu pas \u00EAtre des n\u00F4tres pour le 1er avril?		<br />JACQUES : Non, je ne veux pas.<br />LOUIS : Ni moi non plus.<br />JULES : Vous \u00EAtes deux nigauds ; nous allons nus amuser, Nicolas et moi, et vous serez bien f\u00E2ch\u00E9s d\'avoir refus\u00E9.<br />JACQUES : Nous nous amuserons de notre c\u00F4t\u00E9, et bien plus que vous, car nous ferons du bien en t\u00E2chant de d\u00E9jouer vos tours.<br />NICOLAS : C\'est ce que nous verrons, monsieur. Quand  je m\'y mets,  il n\'est pas facile de m\'emp\u00EAcher de faire ce que je veux.<br />JACQUES : Tant pis pour toi si tu veux le mal."<br />En disant ces mots, Jacques se leva ainsi que Louis, et ils recommenc\u00E8rent leurs travaux de jardinage.  Nicolas et Jules reprirent leurs vestes et s\'en all\u00E8rent pour comploter le tour dont ils avaient parl\u00E9.<br /></font></td></tr></table></center></body></html>';


if (is.CRAPBrowser){ReadingText=ResolveAllURLs(ReadingText);}


var NavBar='';


NavBar+='<tr><form name="NavButtons1" action=""><td bgcolor="#000066" align="center">';
NavBar+='<font face="Geneva,Arial" size="-1">';

NavBar+='<input type="button" value="&lt;=" onclick="parent.GoBack()"></input>';


NavBar+='<input type="button" value="Index" onclick=\'parent.location="index.htm"\'></input>';


NavBar+='<input type="button" value="=&gt;" onclick=\'parent.location="Exercice2.htm"\'></input>';
NavBar+='</font></td></form></tr>';
if (is.CRAPBrowser){NavBar = ResolveAllURLs(NavBar);}


var TitleCode = '<tr><td align="center" valign="middle" bgcolor="#ffffff">';
TitleCode += '<font size="+1" face="Geneva,Arial" color="#000033">' + ExerciseTitle + '</font><br />';
TitleCode += '<font size="-1" face="Geneva,Arial" color="#000033">' + ExerciseSubtitle + '<br />';
TitleCode += '</font></td></tr>';

var TableOpener = '<center><form name="QForm">';
TableOpener += '<table border="0">';

var IRow = '<tr><td valign="top" bgcolor="#bbbbee">';
IRow += '<font face="Geneva,Arial" color="#000000">[strLeftItem]&nbsp;&nbsp;&nbsp;&nbsp;</font></td>';
IRow += '<td valign="top" bgcolor="#bbbbee">';
IRow += '<font face="Geneva,Arial" color="#000000">[strRightItem]</font></td>';
IRow += '<td valign="top" bgcolor="#bbbbee"><font face="Geneva,Arial" color="#000000">';
IRow += '&nbsp;&nbsp;&nbsp;[Mark]';
IRow += '</font></td></tr>';

var CheckButton = '<tr><td valign="top" align="center" bgcolor="#bbbbee" colspan="3"><br /><input type="button" value="Check" OnClick="parent.CheckAnswers()"></input></td></tr>';

TableCloser = '</table></form></center>';

var DropDownList = '';
var Exercise = '';

function GoBack(){
	var BackSkip = history.length - PreviousPage;
	if (BackSkip > 0){
		history.go((BackSkip+1)*-1);
	}
	else{
		parent.history.back();
	}
}

function Shuffle(InArray){
	Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < j; k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteFeedback(Feedback) {
	if (is.CRAPBrowser){Feedback=ResolveAllURLs(Feedback);}
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += NavBar;
	if (Feedback.length>0){
		OutString += '<tr><td bgcolor="#bbbbee" align="center">'; 
		OutString += '<font face="Geneva,Arial" size="-1" color="#000000">';
		OutString += Feedback;
		OutString += '</font></td></tr>'
	}
	OutString += '</table></center></body></html>';
//Write it to the frame
	TopFrame.document.clear();
	TopFrame.document.open();
	TopFrame.document.write(OutString);
	TopFrame.document.close();
}

function BuildSelector(){
	DropDownList = '<select name="sel[INum]">';
	DropDownList += '<option value="rien ">rien </option>';
	for (var i=0; i<RItems.length; i++){
		DropDownList += '<option value="' + EscapeDoubleQuotes(RItems[i][0]) + '">' + RItems[i][0] + '</option>';
	}
	DropDownList += '</select>';
}

function StartUp(){


	CorrectIndicator = '<nobr>' + CorrectIndicator + '</nobr>';
	IncorrectIndicator = '<nobr>' + IncorrectIndicator + '</nobr>';

//Write the top frame
	WriteFeedback(Instructions);

//Create the right-item/distractor array, and shuffle it
	var DuplicateItem = false;
	for (var i=0; i<I.length; i++){
//If it's not fixed
		if (I[i][2] < 1){
			if (I[i][0].length > 0){
				TotalUnfixedLeftItems++;
			}
			DuplicateItem = false;
//and it's not already in the array
			for (var j=0; j<RItems.length; j++){
				if (I[i][1] == RItems[j][0]){
					DuplicateItem = true;
					RItems[j][1][RItems[j][1].length] = i;
				}
			}
//add it to the array
			if (DuplicateItem == false){
				RItems[RItems.length] = new Array();
				RItems[RItems.length-1][0] = I[i][1];
				RItems[RItems.length-1][1] = new Array();
				RItems[RItems.length-1][1][0] = i;
			}
		}
	}
	RItems = Shuffle(RItems);

//Now tell the I array items which of the selector items matches to it
	for (i=0; i<RItems.length; i++){
		for (j=0; j<RItems[i][1].length; j++){
			I[RItems[i][1][j]][3] = i;
		}
	}

//Now use the RItems array to build the drop-down list selector
	BuildSelector();	

//Create arrays
	CreateStatusArrays();



//Build and show the exercise
	BuildExercise();
	DisplayExercise(Exercise);



	ShowReading();


}


function BuildExercise(){
	var TempRow = '';
	Exercise = '';
	for (var i=0; i<I.length; i++){
//if there's a left item -- ie it's not a distractor
		if (I[i][0].length > 0){
			TempRow = IRow;
			TempRow = ReplaceStuff('[strLeftItem]', I[i][0], TempRow);
//if not fixed and not yet answered correctly
			if ((I[i][2] < 1)&&(Status[i][0] < 1)){
				TempRow = ReplaceStuff('[strRightItem]', DropDownList, TempRow);
			}
			else{
				TempRow = ReplaceStuff('[strRightItem]', I[i][1], TempRow);
			}
//if it's not fixed, and it's been attempted, mark it appropriately
			if ((I[i][2] < 1)&&(Status[i][1] > 0)){
				if (Status[i][0] < 1){
					TempRow = ReplaceStuff('[Mark]', IncorrectIndicator, TempRow);
				}
				else{
					TempRow = ReplaceStuff('[Mark]', CorrectIndicator, TempRow);
				}
			}
			else{
				TempRow = ReplaceStuff('[Mark]', '', TempRow);
			}
			TempRow = ReplaceStuff('[INum]', i, TempRow);
			Exercise += TempRow;
		}
	}
//Add the check button
	Exercise += CheckButton;

//Make it into a table
	Exercise = TableOpener + Exercise + TableCloser;
}

I = new Array();
I[0] = new Array();
I[0][0] = 'b&#234;ch&#233;';
I[0][1] = 'dug';
I[0][2] = 0;
I[1] = new Array();
I[1][0] = 'arros&#233;';
I[1][1] = 'watered';
I[1][2] = 0;
I[2] = new Array();
I[2][0] = 'ratiss&#233;';
I[2][1] = 'raked over';
I[2][2] = 0;
I[3] = new Array();
I[3][0] = 'se f&#226;cher';
I[3][1] = 'to get angry';
I[3][2] = 0;
I[4] = new Array();
I[4][0] = 'jouer un tour';
I[4][1] = 'to play a trick on someone';
I[4][2] = 0;
I[5] = new Array();
I[5][0] = 'd&#233;jouer un tour';
I[5][1] = 'to foil a trick';
I[5][2] = 0;
I[6] = new Array();
I[6][0] = 'comploter';
I[6][1] = 'to plot';
I[6][2] = 0;


Status = new Array();

RItems = new Array();

function CreateStatusArrays(){
	for (var x=0; x<I.length; x++){
		Status[x] = new Array();
		Status[x][0] = 0; // Item not matched correctly yet
		Status[x][1] = 0; //Tries at this item so far
	}
}

function ReplaceStuff(Token, Replacement, InString){
	var i = InString.indexOf(Token);
	var FirstBit = '';
	var LastBit = '';
	while (i>-1){
		FirstBit = InString.substring(0, i);
		LastBit = InString.substring(i + Token.length, InString.length);	
		InString = FirstBit + Replacement + LastBit;
		i = InString.indexOf(Token);
	}
	return InString;
}

function EscapeDoubleQuotes(InString){
	var Result = '';
	for (var i=0; i<InString.length; i++){
		if (InString.charAt(i) == '"'){
			Result += '&quot;';
		}
		else{
			Result += InString.charAt(i);
		}
	}
	return Result;
}

function DisplayExercise(StuffToDisplay){
//Build the output string
	var OutString = '';
	OutString += '<html>';
	OutString += '<body  background="" bgcolor="#ffffff" text="#000000" link="#0000ff" vlink="#0000cc">';
	OutString += '<center><table border="0" cellpadding="5" cellspacing="1" width="85%">';
	OutString += TitleCode; 
	OutString += '<tr><td bgcolor="#bbbbee" align="center">'; 
	OutString += '<font face="Geneva,Arial" size="-1">';
	OutString += StuffToDisplay;
	OutString += '</font></td></tr>';
	OutString += NavBar;
	OutString += '</table></center></body></html>';

	if (is.CRAPBrowser){OutString=ResolveAllURLs(OutString);}

//Write it to the frame
	BottomFrame.document.clear();
	BottomFrame.document.open();
	BottomFrame.document.write(OutString);
	BottomFrame.document.close();
}

function GetAnswer(INum){
	var Result = -1;
	var s = eval('BottomFrame.document.QForm.sel' + INum);
	if (s != null){
		Result = s.selectedIndex - 1;
	}
	return Result;
}

function CheckAnswers(){
	var AllDone = true;
	TotCorrectChoices = 0;
//for each item not fixed or a distractor
	for (var i=0; i<I.length; i++){
		if ((I[i][2] < 1)&&(I[i][0].length > 0)){
//if it hasn't been answered correctly yet
			if (Status[i][0] < 1){
//Add one to the number of tries for this item
				Status[i][1]++;
//Get the answer
				if (GetAnswer(i) == I[i][3]){
//The answer is correct, so set the status flag
					Status[i][0] = 1;
				}
//else the answer is wrong, so remember that
				else{
					AllDone = false;
				}				
			}
//If it's correct, count it
			if (Status[i][0] == 1){
				TotCorrectChoices++;
			}
		}
	}
//Calculate the score
	var Score = Math.floor(((TotCorrectChoices-Penalties)/TotalUnfixedLeftItems)*100);
	var Feedback = '';

//Build the feedback
	if (AllDone == true){
		Feedback = CorrectResponse + '<br />' + YourScoreIs + Score + '%.';
	}
	else{
		Feedback = IncorrectResponse + '<br />' + YourScoreIs + Score + '%.';
//Penalty for incorrect check
		Penalties++;
	}
//Show the feedback and rebuild the exercise
	WriteFeedback(Feedback);



	BuildExercise();
	DisplayExercise(Exercise);
}


function ShowReading(){
	if (ReadingFrame != null){
		if (ReadingURL.length > 0){
			ReadingFrame.location.href=ReadingURL;
		}
		else{
			ReadingFrame.document.clear();
			ReadingFrame.document.open();
			ReadingFrame.document.write(ReadingText);
			ReadingFrame.document.close();
		}
	}
}






function Blank(){
	return '<html><body>&copy;Half-Baked Software. Loading...</body></html>';
}

//-->

//]]>

</script>


</head>
<!--<body>Fool those dumb ad-inserting ISPs</body>-->

<!--For full XHTML 1.0 compatibility, remove the border and framespacing attributes.
These are required for proper display in current browsers, but render the document incompatible. Then, you'll need to add the appropriate Document Type Declaration; use
the W3C XHTML 1 frameset DTD.-->





<frameset cols = "50%,50%" framespacing="0" border="0">
  <frameset rows = "25%,*" framespacing="0" border="0" onload="StartUp()">
	<frame src="javascript:parent.Blank()" frameborder="0" name="TopFrame"></frame>
	<frame src="javascript:parent.Blank()" frameborder="0" name="BottomFrame"></frame>
   </frameset>
  <frame src="javascript:parent.Blank()" frameborder="0" name="ReadingFrame"></frame>
</frameset>





</html>
