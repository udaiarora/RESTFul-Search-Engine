<HTML>
<!-- This page produced Fri Jul  9 14:14:38 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>SAS/GRAPH Statements : BY Statement </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0724351.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zxischap.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0724373.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS/GRAPH Software: Reference                                                                                             </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="bychap">BY Statement</A></FONT></H1>


<P><A name="z0750219">&#13;
The BY statement processes data and orders output according to the BY group. </A>
<DL>
<DT>Used by:</DT>
<DD>GCHART, GCONTOUR, GMAP, GPLOT, GREDUCE,
G3D, G3GRID procedures<P></DD>
</DL>

<BR><H3>Description</H3>


<P>The BY statement divides the observations
from an input data set into groups for processing.  Each set of contiguous
observations with the same value for a specified variable is called a <B>BY group</B>. A variable that defines BY groups is called a <B>BY variable</B> and is the variable that is
specified in the BY statement.  When you
use a BY statement, the graphics procedure 
<P>
<UL>

<LI>processes each group of observations independently<P>

<LI>generates a separate
graph or output for each
BY group<P>

<LI>automatically adds a heading called a <B>BY
line</B> to  each graph identifying the BY group represented in the graph<P>

<LI>adds BY statement information below the Description
field of the catalog entry.<P>
</UL>

<P>By default, the procedure expects the observations in
the input data set to be sorted in ascending order of the BY variable values. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;The BY statement in SAS/GRAPH is
essentially the same as the BY statement in base SAS, but the effect on the
output is different when it is used with SAS/GRAPH procedures.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<BR><H3>Syntax</H3>


<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>BY</B>&lt;DESCENDING&gt;<I>variable</I>
<BR>&lt;...&lt;DESCENDING&gt;<I>variable-n</I>&gt;
<BR>&lt;NOTSORTED&gt;;
</TD></TR></TABLE>
<BR><H3>Required Arguments</H3>


<P><A name="z0750229">&#13; </A>
<DL>
<DT><B>variable</B></DT>
<DD>specifies the variable that the procedure
uses to form BY groups.  You can specify more than one variable.  By default,
the procedure expects observations in the data set to be sorted in ascending
order by all the variables that you specify or to be indexed appropriately.<P></DD>
</DL>

<BR><H3>Options</H3>


<P><A name="z0750232">&#13;
</A>
<DL>
<DT><A name="z0750233">&#13; DESCENDING</A></DT>
<DD>indicates that the data set is sorted
in descending order by the specified variable. The option affects only the
variable that immediately follows the option name, and  must be repeated before
every variable that is not sorted in ascending order. For example, this BY
statement indicates that observations in the input data set are arranged in
descending order of VAR1 values and ascending order of VAR2 values:  



<PRE>by descending var1 var2;</PRE>
<P>This BY statement indicates that the input data set
is sorted in descending order of both VAR1 and VAR2 values:  



<PRE>by descending var1 descending var2;</PRE><P></DD>

<DT><A name="z0750236">&#13; NOTSORTED</A></DT>
<DD>specifies that observations with
the same BY value are grouped together, but are not necessarily sorted in
alphabetical or numeric order.  The observations can be grouped in another
way, for example, in chronological order.
<P>NOTSORTED can appear anywhere in the BY statement and
affects all variables specified in the statement. NOTSORTED overrides DESCENDING
if both appear in the same BY statement.
<P>The requirement for ordering or indexing observations
according to the values of BY variables is suspended when you use the NOTSORTED
option. In fact, the procedure does not use an index if you specify NOTSORTED.
For NOTSORTED, the procedure defines a BY group as a set of contiguous observations
that have the same values for all BY variables.  If observations with the
same value for the BY variables are not contiguous, the procedure treats each
new value it encounters as the first observation in a new BY group and will
create a graph for that value, even if it is only one observation.<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Preparing Data for BY-Group Processing</FONT></B></TD></TR></TABLE>

<P><A name="z0750240">&#13;
Unless you specify the NOTSORTED option, observations in the input data set
must be in ascending numeric or alphabetic order.  To prepare the data set,
either sort it with the SORT procedure using the same BY statement that you
plan to use in the target SAS/GRAPH procedure
or create an appropriate index on the BY variables.</A>
<P>If the procedure encounters an observation is out of
the proper order, it issues an error message.
<P>If you need to group data in some other order, such
as chronological order, you can still use BY-group processing.  To do so,
process the data so that observations are arranged in contiguous groups that
have the same BY-variable values and specify the NOTSORTED option in the BY
statement.
<P>For an example of sorting the input data set, see <A href="z8n04-ex.htm">Example 7.  Using BY-group Processing to Generate a Series of Charts</A>.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Controlling BY Lines</FONT></B></TD></TR></TABLE>

<P><A name="z0750244">&#13; By default,
the BY statement prints a BY line above each graph that contains the variable
name followed by an equal sign and the variable value.  For example, if you
specify BY SITE in the procedure, the default heading when the value of SITE
is 


</A><CODE><B>London</B></CODE> would be SITE=London.
<BR><H3>Suppressing the BY line</H3>


<P>To suppress the entire BY line, use the
NOBYLINE option in an OPTION statement or specify HBY=0 in the GOPTIONS statement.
See <A href="z8n04-ex.htm">Example 7.  Using BY-group Processing to Generate a Series of Charts</A>.
<BR><H3>Suppressing the name of the BY variable</H3>


<P>To suppress the variable name and the
equal sign in the heading and leave only the BY value, use the LABEL statement
to assign a null label ('00'X) to the BY variable. For example, this statement
assigns a null label to the SITE variable:  



<PRE>label site='00'x;</PRE>
<P>See also <A href="z3n11-ex.htm">Grouping and Arranging Pie Charts</A>.
<BR><H3>Controlling the appearance of the BY line</H3>


<P>To control the color, font, and height
of the BY lines, use the following graphics options in a GOPTIONS statement: 
<DL>
<DT>CBY=<B>BY-line-color</B></DT>
<DD>specifies the color for BY lines.<P></DD>

<DT>FBY=<B>font</B></DT>
<DD>specifies the font for BY lines.<P></DD>

<DT>HBY=<B>n</B>&lt;<B>units</B>></DT>
<DD>specifies the height for BY lines.<P></DD>
</DL>

<P>See
<A href="z0713550.htm">Graphics Options and Device Parameters Dictionary</A>
for a complete description of each option.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Naming the Catalog Entries</FONT></B></TD></TR></TABLE>

<P><A name="z0750256">&#13;The catalog entries
generated with BY-group processing always
use incremental naming. This means that the first entry created by the procedure
uses the base name and subsequent entries  increment that name. The base name
is either the default entry name for the procedure (for example, GPLOT) or
the name specified with the NAME= option in the action statement. Incrementing
the base name automatically appends a number to each subsequent entry (for
example, GPLOT1, GPLOT2, and so forth). See also </A><A href="zatalogs.htm#zrynames">Names and Descriptions of Catalog Entries</A> and
<A href="zort-gsf.htm#z0696077">Using the default output name</A>.  For an example of incremented catalog
names, see <A href="zods1-ex.htm">Example 9.  Combining Graphs and Reports in a Web Page</A>.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Using the BY Statement</FONT></B></TD></TR></TABLE>

<P>This section describes the following: 
<P>
<UL>

<LI>the effect of BY-group
processing on the GCHART,
GMAP, and GPLOT procedures<P>

<LI>the interaction between BY-group and RUN-group
processing<P>

<LI>the requirements for using BY-group processing
with the Annotate facility<P>

<LI>how to include BY information in titles, notes,
and footnotes<P>

<LI>how patterns and symbols are assigned to BY-groups<P>

<LI>the effect of using BY-group processing with the
ODS HTML statement.<P>
</UL>

<P>For additional information on any of these topics, refer
to the appropriate chapter.
<BR><H3>With the GCHART Procedure</H3>


<P><A name="z0750265">&#13;
 When you use BY-group processing with
the GCHART procedure, you can do the following: </A>
<P>
<UL>

<LI>With the BLOCK, HBAR, and VBAR statements, you
can use the PATTERNID=BY option to assign patterns according to BY groups.
With PATTERNID=BY, each BY group uses a different PATTERN definition, but
all bars or blocks within a BY group use the same pattern.<P>

<LI>With the BLOCK statement, you can use the BLOCKMAX=
option to produce the same block-height scaling in all block charts in a BY
group.<P>

<LI>With the HBAR or VBAR statement, you can use the
RAXIS= option to produce the same response axis scaling in all horizontal
or vertical bar charts in a BY group.<P>
</UL>

<P>With the PIE and STAR statements, the effect of a BY
statement is similar to that of the GROUP= option, except that the GROUP=
option allows you to put more than one graph on a single page while the BY
statement does not.  Do not use a BY variable as the group variable in STAR
or PIE statements.
<BR><H3>With the GMAP Procedure</H3>


<P><A name="z0750270">&#13;
 By default, BY-group processing affects
both the map data set and the response data set. This means that you get separate,
individual output for each map area common to both data sets.  For example,
if the map data set REGION contains six states and the response data set contains
the same six states, and you specify BY STATE in the GMAP procedure, you get
six graphs with one state on each graph.</A>
<P>If you use the ALL option in the PROC GMAP statement
and you also use the BY statement, you get one output for each map area in
the response data set, but that output displays all the map areas in the map
data set.  Only one map area per output contains response data information;
the others are empty.  For example, if you create a block map using the data
sets REGION and SALES, specify BY STATE, and include the ALL option in the
PROC GMAP statement, you get six graphs with six states on each graph. One
state per graph has a block; the remaining five are empty.
<BR><H3>With the GPLOT Procedure</H3>


<P><A name="z0750272">&#13;
 You can use the UNIFORM option in
the PROC GPLOT statement to produce the same axis scaling for all graphs in
a BY group.  By default, the range of the axes may vary from graph to graph,
but UNIFORM forces the scaling to be the same for all graphs generated by
the procedure.</A>
<BR><H3>With the RUN Groups</H3>


<P><A name="z0750273">&#13;  If you use the BY statement with a procedure
that processes data and supports RUN-group processing (the GCHART, GMAP, and
GPLOT procedures), then each time you submit an action statement or a RUN
statement you get a separate graph for each value of the BY variable. For
example, each of these two RUN-groups produces a separate plot for every value
of the BY variable SITE:  


</A>
<PRE>/* first run group*/
proc gplot data=sales;
   title1 'Sales Summary';
   by site;
   plot sales*model_a;
run;

   /* second run group */
   plot sales*model_b;
run;
quit;</PRE>
<P>The BY statement stays in effect for every subsequent
RUN group until you submit another BY statement or exit the procedure.  Variables
in subsequent BY statements replace any previous BY variables.
<P>You can also turn off BY-group processing by submitting
a null BY statement (BY;) in a RUN group, but when you do this, the null BY
statement turns off BY-group processing <B>and</B> the RUN group generates
a graph.
<P>For more information, see <A href="zrunning.htm#zungroup">RUN-Group Processing</A>.
<BR><H3>With the Annotate Facility</H3>


<P><A name="z0750277">&#13;
 If a procedure that is using BY-group
processing also specifies annotation with the ANNOTATE= option in the PROC
statement, the same annotation is applied to every graph generated by the
procedure.</A>
<P>If you specify annotation with the ANNOTATE= option
in the action statements for a procedure, the BY-group processing is applied
to the Annotate data set.  In this way, you can customize the annotation for
the output from each BY group by including the BY variable in the Annotate
data set and by using each BY-variable value as a condition for the annotation
to be applied to the output for that value.
<BR><H3>With TITLE, FOOTNOTE, and NOTE Statements</H3>


<P><A name="z0750279">&#13;
 
 TITLE, FOOTNOTE, and NOTE  statements
can automatically include the BY variable name, BY variable values, or BY
lines in the text they produce. To insert BY variable information into the
text strings used by these statements, use the #BYVAR, #BYVAL, and #BYLINE
substitution options.  For details, see the description of the </A><A href="ztlechap.htm#z0725480"> text-string argument</A>. For
an example, see <A href="z8n04-ex.htm">Example 7.  Using BY-group Processing to Generate a Series of Charts</A>.
<BR><H3>With PATTERN and SYMBOL Definitions</H3>


<P><A name="z0750280">&#13; 
 Procedures that use SYMBOL or PATTERN
definitions, assign the symbols or patterns in order to each BY group.  For
example, if the BY variable REGION has four values -- 


</A><CODE><B>East</B></CODE>, 


<CODE><B>North</B></CODE>, 


<CODE><B>South</B></CODE>, and 


<CODE><B>West</B></CODE> -- the patterns are
assigned to the BY-groups in this order: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>PATTERN1 is assigned to 


<CODE><B>East</B></CODE>,</TD></TR>
<TR valign="top"><TD></TD><TD>PATTERN2 is assigned to 


<CODE><B>North</B></CODE>,</TD></TR>
<TR valign="top"><TD></TD><TD>PATTERN3 is assigned to 


<CODE><B>South</B></CODE>,</TD></TR>
<TR valign="top"><TD></TD><TD>PATTERN4 is assigned to 


<CODE><B>West</B></CODE>.</TD></TR></TABLE>
<P>If you create sets of graphs from several data sets
containing the variable REGION, and if you want the same pattern assigned
to the same region each time, you must be sure that REGION always has the
same four values.  Otherwise, the patterns may not be the same across graphs.
For example, if the value 


<CODE><B>North</B></CODE> is missing from the data, the
patterns are assigned as follows: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>PATTERN1 is assigned to 


<CODE><B>East</B></CODE>,</TD></TR>
<TR valign="top"><TD></TD><TD>PATTERN2 is assigned to 


<CODE><B>South</B></CODE>,</TD></TR>
<TR valign="top"><TD></TD><TD>PATTERN3 is assigned to 


<CODE><B>West</B></CODE>.</TD></TR></TABLE>
<P>In this case, 


<CODE><B>South</B></CODE> is assigned pattern
2 instead of pattern 3 and 


<CODE><B>West</B></CODE> is assigned pattern 3 instead
of pattern 4.  To avoid this, include the value 


<CODE><B>North</B></CODE> for the variable
REGION, but assign it a missing value for all other variables.

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0724351.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zxischap.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0724373.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#bychap">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>