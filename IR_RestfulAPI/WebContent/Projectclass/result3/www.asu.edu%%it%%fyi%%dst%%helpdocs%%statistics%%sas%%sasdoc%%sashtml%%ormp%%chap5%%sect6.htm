<HTML>
<HEAD>
<TITLE>PROC NLP Statement</TITLE>
<LINK REL="STYLESHEET" TYPE="text/css" HREF="../sas.css">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<A NAME="nlppns">&#13;</A>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A NAME="topofpage" HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect5.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect7.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
</TR>
</TABLE>
<TABLE BGCOLOR="#CCCC99" WIDTH="100%" CELLPADDING=4>
<TR>
  <TD VALIGN=MIDDLE CLASS="chaphead"><I><FONT SIZE="2">The NLP Procedure</FONT></I></TD>
</TR>
</TABLE><BR>
<P><!--End of Navigation Panel-->
<H2>PROC NLP Statement</H2>
<A NAME="idxnlp0291">&#13;</A><A NAME="idxnlp0292">&#13;</A>This statement invokes the NLP procedure.
<P><DL><DD><B CLASS="ssbeleven">PROC NLP</B> <I CLASS="ssieleven"> options <SPAN CLASS="ssbeleven"><B>; </B></SPAN></I></DL><BR>The following options are used with the PROC NLP statement.
<BR><BR><DL>
<DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfct">&#13;</A>ABSCONV=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">ABSTOL=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0053">&#13;</A><A NAME="idxnlp0054">&#13;</A><A NAME="idxnlp0055">&#13;</A><A NAME="idxnlp0056">&#13;</A>specifies an absolute function convergence criterion.
For minimization (maximization), termination requires
<IMG WIDTH="124" HEIGHT="39" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq14.gif"
 ALT=" f(x^{(k)}) \leq (\geq) r . ">The default value of ABSTOL is
the negative (positive) square root
of the largest double precision value.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfbsfc">&#13;</A>ABSFCONV =<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">ABSFTOL=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0057">&#13;</A><A NAME="idxnlp0058">&#13;</A><A NAME="idxnlp0059">&#13;</A><A NAME="idxnlp0060">&#13;</A>specifies an absolute function convergence criterion. For all techniques
except NMSIMP, termination requires a small change of the
function value in successive iterations:
      
<DL CLASS="equation"><DD><IMG WIDTH="189" HEIGHT="78"
 SRC="images/nlpeq15.gif"
 ALT="| f(x^{(k-1)}) - f(x^{(k)})| \leq r"></DL>
For the NMSIMP technique the same formula is used, but
<SPAN CLASS="mathfont"><I>x</I><SUP>(<I>k</I>)</SUP></SPAN> is defined as the vertex with the lowest function
value, and <SPAN CLASS="mathfont"><I>x</I><SUP>(<I>k</I>-1)</SUP></SPAN> is defined as the vertex with the highest
function value in the simplex. The default value is <SPAN CLASS="mathfont"><I>r</I>=0</SPAN>.
The optional integer value <SPAN CLASS="mathfont"><I>n</I></SPAN> specifies the number of successive
iterations for which the criterion must be satisfied before the
process can be terminated.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfbsgc">&#13;</A>ABSGCONV=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">ABSGTOL=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0061">&#13;</A><A NAME="idxnlp0062">&#13;</A><A NAME="idxnlp0063">&#13;</A><A NAME="idxnlp0064">&#13;</A>specifies the absolute
gradient convergence criterion. Termination requires the maximum
absolute gradient element to be small:
 
<DL CLASS="equation"><DD><IMG WIDTH="137" HEIGHT="89"
 SRC="images/nlpeq16.gif"
 ALT="\max_j | g_j(x^{(k)})| \leq r "></DL>
This criterion is not used by the NMSIMP technique. The default
value is <SPAN CLASS="mathfont"><I>r</I>=1<I>e</I>-5</SPAN>.
The optional integer value <SPAN CLASS="mathfont"><I>n</I></SPAN> specifies the number of successive
iterations for which the criterion must be satisfied before the
process can be terminated.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfbsxc">&#13;</A>ABSXCONV=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">ABSXTOL=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0065">&#13;</A><A NAME="idxnlp0066">&#13;</A><A NAME="idxnlp0067">&#13;</A><A NAME="idxnlp0068">&#13;</A>specifies the
absolute parameter convergence criterion. For all techniques
except NMSIMP, termination requires a small Euclidean distance
between successive parameter vectors,
   
<DL CLASS="equation"><DD><IMG WIDTH="161" HEIGHT="78"
 SRC="images/nlpeq17.gif"
 ALT="\parallel x^{(k)} - x^{(k-1)} \parallel_2 \leq r "></DL>
For the NMSIMP technique, termination requires either a small
length <IMG WIDTH="35" HEIGHT="20" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq18.gif"
 ALT="\alpha^{(k)}"> of the vertices of a restart simplex
   
<DL CLASS="equation"><DD><IMG WIDTH="62" HEIGHT="76"
 SRC="images/nlpeq19.gif"
 ALT="\alpha^{(k)} \leq r "></DL>
or a small simplex size
   
<DL CLASS="equation"><DD><IMG WIDTH="59" HEIGHT="76"
 SRC="images/nlpeq20.gif"
 ALT="\delta^{(k)} \leq r "></DL>
where the simplex size <IMG WIDTH="32" HEIGHT="20" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq21.gif"
 ALT="\delta^{(k)}"> is defined as the L1 distance
of the simplex vertex <SPAN CLASS="mathfont"><I>y</I><SUP>(<I>k</I>)</SUP></SPAN> with the smallest function value
to the other <SPAN CLASS="mathfont"><I>n</I></SPAN> simplex points <IMG WIDTH="87" HEIGHT="45" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq22.gif"
 ALT="x_l^{(k)} \neq y^{(k)}">:
<DL CLASS="equation"><DD><IMG WIDTH="202" HEIGHT="102"
 SRC="images/nlpeq23.gif"
 ALT="\delta^{(k)} = \sum_{x_l \neq y} \parallel x_l^{(k)} - y^{(k)}\parallel _1"></DL>
The default value is <SPAN CLASS="mathfont"><I>r</I>=1<I>e</I>-4</SPAN> for the COBYLA NMSIMP technique,
<SPAN CLASS="mathfont"><I>r</I>=1<I>e</I>-8</SPAN> for the standard NMSIMP technique, and <SPAN CLASS="mathfont"><I>r</I>=0</SPAN> otherwise.
The optional integer value <SPAN CLASS="mathfont"><I>n</I></SPAN> specifies the number of successive
iterations for which the criterion must be satisfied before the
process can be terminated.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfsing">&#13;</A>ASINGULAR=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">ASING=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0069">&#13;</A><A NAME="idxnlp0070">&#13;</A><A NAME="idxnlp0071">&#13;</A><A NAME="idxnlp0072">&#13;</A>specifies an absolute singularity
criterion for measuring singularity 
of Hessian and crossproduct Jacobian and their projected
forms, which may have to be converted to compute the 
covariance matrix.  The default is the square
root of the smallest positive double precision value.
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpbss">&#13;</A>BEST=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0073">&#13;</A><A NAME="idxnlp0074">&#13;</A><A NAME="idxnlp0075">&#13;</A>produces the <SPAN CLASS="mathfont"><I>i</I></SPAN> best grid points only.
This option not only restricts the output, it also can
significantly reduce the computation time needed for sorting
the grid point information.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfdigi">&#13;</A>CDIGITS=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0076">&#13;</A><A NAME="idxnlp0077">&#13;</A><A NAME="idxnlp0078">&#13;</A>specifies the number of accurate digits
in nonlinear constraint evaluations. Fractional values such as
CDIGITS=4.7 are allowed. The default value is <SPAN CLASS="mathfont"><I>r</I></SPAN>=-log10(<IMG WIDTH="11" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq24.gif"
 ALT="\epsilon">),
where <IMG WIDTH="11" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq24.gif"
 ALT="\epsilon"> is the machine precision. The value of <SPAN CLASS="mathfont"><I>r</I></SPAN> is
used to compute the interval size <SPAN CLASS="mathfont"><I>h</I></SPAN> for the computation of
finite-difference approximations of  the Jacobian matrix
of nonlinear constraints.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpwaldo">&#13;</A>CLPARM= PL | WALD | BOTH</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0079">&#13;</A><A NAME="idxnlp0080">&#13;</A><A NAME="idxnlp0081">&#13;</A>The CLPARM = option is similar to but
not the same as that used by other SAS procedures.
Using CLPARM=BOTH is equivalent to specifying <BR>
<P ALIGN=CENTER>  <TT>PROFILE / ALPHA=0.5 0.1 0.05 0.01 OUTTABLE;  </P></TT> <BR>and specifies that PL CLs for all parameters and for
<IMG WIDTH="138" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq25.gif"
 ALT="\alpha=.5, .1, .05, .01"> are computed and displayed or written
to the OUTEST= data set. Computing the profile confidence
limits for all parameters
can be very expensive and should be avoided when a difficult 
optimization problem or one with many parameters is solved.
The OUTTABLE option is valid only when an OUTEST= data set is
specified in the PROC NLP statement.
For CLPARM=BOTH, the table of displayed output contains
the Wald confidence limits computed from the standard errors as
well as the PL CLs. The Wald confidence limits are not computed
(displayed or written to the OUTEST= data set) unless the
approximate covariance matrix of parameters is computed.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfcova">&#13;</A>COVARIANCE=1 | 2 | 3 | 4 | 5 | 6 | M | H | J | B | E | U</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">COV=1 | 2 | 3 | 4 | 5 | 6 | M | H | J | B | E | U</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0082">&#13;</A><A NAME="idxnlp0083">&#13;</A><A NAME="idxnlp0084">&#13;</A><A NAME="idxnlp0085">&#13;</A>specifies one of
six formulas for computing the covariance matrix.
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfcsing">&#13;</A>COVSING=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0086">&#13;</A><A NAME="idxnlp0087">&#13;</A><A NAME="idxnlp0088">&#13;</A>specifies a threshold that
determines whether the eigenvalues of a singular Hessian matrix
or crossproduct Jacobian matrix are considered to be zero.
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfdump">&#13;</A>DAMPSTEP[=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN>]</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">DS[=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN>]</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0089">&#13;</A><A NAME="idxnlp0090">&#13;</A><A NAME="idxnlp0091">&#13;</A><A NAME="idxnlp0092">&#13;</A>specifies that the
initial step size value <IMG WIDTH="34" HEIGHT="20" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq26.gif"
 ALT="\alpha^{(0)}"> for each line-search
(used by the QUANEW, HYQUAN, CONGRA, or NEWRAP technique) cannot be larger
than <SPAN CLASS="mathfont"><I>r</I></SPAN> times the step size value used in the former
iteration. If the DAMPSTEP option is specified but not factor <SPAN CLASS="mathfont"><I>r</I></SPAN>,
the default is <SPAN CLASS="mathfont"><I>r</I>=2</SPAN>. The DAMPSTEP=<SPAN CLASS="mathfont"><I>r</I></SPAN> option can prevent the
line-search algorithm from repeatedly stepping into
regions where some objective functions are difficult to compute
or where they could lead to floating point overflows during the
computation of objective functions and their derivatives.
The DAMPSTEP=<SPAN CLASS="mathfont"><I>r</I></SPAN> option can save time-costly function calls
during the line-searches of objective functions that result
in very small step.  For more information, see the section <A HREF="sect35.htm#nlprtsl">&#34;Restricting the Step Length&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfdats">&#13;</A>DATA=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0093">&#13;</A>allows variables from the specified data set
to be used in the specification of the objective function <SPAN CLASS="mathfont"><I>f</I></SPAN>.
For more information, see the section <A HREF="sect38.htm#nlpdids">&#34;DATA= Input Data Set&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfdihhs">&#13;</A>DIAHES</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0094">&#13;</A>specifies that only the diagonal of the
Hessian or crossproduct Jacobian is used. 
This saves function evaluations but may considerably 
slow the convergence process.  Note that the
DIAHES option refers to both the Hessian and the crossproduct
Jacobian when using the LSQ statement. When derivatives are
specified using the HESSIAN or CRPJAC statement, these
statements must refer only to the <SPAN CLASS="mathfont"><I>n</I></SPAN> diagonal derivative
elements (otherwise, the <SPAN CLASS="mathfont"><I>n</I>(<I>n</I>+12)/2</SPAN> derivatives of the lower
triangle must be specified). The DIAHES option is ignored if a
quadratic programming with a constant Hessian is specified by
TECH=QUADAS or TECH=LICOMP.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpffc">&#13;</A>FCONV =<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">FTOL=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0095">&#13;</A><A NAME="idxnlp0096">&#13;</A><A NAME="idxnlp0097">&#13;</A><A NAME="idxnlp0098">&#13;</A>specifies the relative
function convergence criterion. For all techniques except NMSIMP,
termination requires a small relative change of the function
value in successive iterations,
 
<DL CLASS="equation"><DD><IMG WIDTH="221" HEIGHT="102"
 SRC="images/nlpeq27.gif"
 ALT="{ | f(x^{(k)}) - f(x^{(k-1)})| \over
 \max(| f(x^{(k-1)})|,{FSIZE}) } \leq r "></DL>
where FSIZE is defined by the FSIZE= option.
For the NMSIMP technique, the same formula is used, but
<SPAN CLASS="mathfont"><I>x</I><SUP>(<I>k</I>)</SUP></SPAN> is defined as the vertex with the lowest function
value, and <SPAN CLASS="mathfont"><I>x</I><SUP>(<I>k</I>-1)</SUP></SPAN> is defined as the vertex with the highest
function value in the simplex.
The default value is <I>r=<SPAN CLASS="mathfont">10<sup>- FDIGITS</sup></SPAN></I>
where FDIGITS is the value of the FDIGITS= option.
The optional integer value <SPAN CLASS="mathfont"><I>n</I></SPAN> specifies the number of successive
iterations for which the criterion must be satisfied before the
process can be terminated.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfffcc">&#13;</A>FCONV 2=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">FTOL2=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0099">&#13;</A><A NAME="idxnlp0100">&#13;</A><A NAME="idxnlp0101">&#13;</A><A NAME="idxnlp0102">&#13;</A>specifies another
function convergence criterion.
For least-squares problems and all techniques except NMSIMP,
termination requires a small predicted reduction

<DL CLASS="equation"><DD><IMG WIDTH="240" HEIGHT="78"
 SRC="images/nlpeq28.gif"
 ALT="df^{(k)} \approx f(x^{(k)}) - f(x^{(k)} + s^{(k)}) "></DL>
of the objective function. The predicted reduction
<DL CLASS="equation"><DD><IMG WIDTH="296" HEIGHT="170"
 SRC="images/nlpeq29.gif"
 ALT="df^{(k)} & = & -g^{(k)T} s^{(k)} - {1 \over 2} s^{(k)T} G^{(k)} s^{(k)} \ & = & -{1 \over 2} s^{(k)T} g^{(k)} \ & \leq & r"></DL>
is based on approximating the objective function <SPAN CLASS="mathfont"><I>f</I></SPAN>
by the first two terms of the Taylor series and substituting
the Newton step
 
<DL CLASS="equation"><DD>
<SPAN CLASS="mathfont"><I>s</I><SUP>(<I>k</I>)</SUP> = - <I>G</I><SUP>(<I>k</I>)-1</SUP> <I>g</I><SUP>(<I>k</I>)</SUP></SPAN>
</DL><BR>For the NMSIMP technique, termination requires a small standard
deviation of the function values of the <SPAN CLASS="mathfont"><I>n</I> + 1</SPAN> simplex vertices
<SPAN CLASS="mathfont"><I>x</I><SUB><I>l</I></SUB><SUP>(<I>k</I>)</SUP></SPAN>, <SPAN CLASS="mathfont"><I>l</I> = 0, ... ,<I>n</I></SPAN>,
 
<DL CLASS="equation"><DD><IMG WIDTH="277" HEIGHT="111"
 SRC="images/nlpeq30.gif"
 ALT="\sqrt{ {1 \over n+1} \sum_l (f(x_l^{(k)}) - \overline{f}(x^{(k)}))^2 }
 \leq r "></DL>
where <IMG WIDTH="198" HEIGHT="45" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq31.gif"
 ALT="\overline{f}(x^{(k)}) = {1 \over n+1} \sum_l f(x_l^{(k)}) ">.If there are <SPAN CLASS="mathfont"><I>n</I><SUB><I>act</I></SUB></SPAN> boundary constraints active at <SPAN CLASS="mathfont"><I>x</I><SUP>(<I>k</I>)</SUP></SPAN>,
the mean and standard deviation are computed only for the
<SPAN CLASS="mathfont"><I>n</I> + 1 - <I>n</I><SUB><I>act</I></SUB></SPAN> unconstrained vertices.
The default value is <SPAN CLASS="mathfont"><I>r</I></SPAN>=1e-6 for the NMSIMP technique and the
QUANEW technique with nonlinear constraints and <SPAN CLASS="mathfont"><I>r</I>=0</SPAN> otherwise.
The optional integer value <SPAN CLASS="mathfont"><I>n</I></SPAN> specifies the number of successive
iterations for which the criterion must be satisfied before the
process can be terminated.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfford">&#13;</A>FD[=<SPAN CLASS="ssiten"><I>FORWARD | CENTRAL | number</I></SPAN>]</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0103">&#13;</A><A NAME="idxnlp0104">&#13;</A>specifies that all derivatives
be computed using finite difference
approximations. 
The following specifications are permitted:
<DL>
<DT>FD=FORWARD
<DD>uses forward differences.
<DT>FD=CENTRAL
<DD>uses central differences.
<DT>FD=<I>number</I>
<DD>uses central differences for the initial
      and final evaluations of the gradient, Jacobian, and
      Hessian. During iteration, start with forward differences
      and switch to a corresponding central-difference formula
      during the iteration process when one of the following
      two criteria is satisfied:
      <UL>
<LI> The absolute maximum gradient element is less than
            or equal to <I>number</I> times the ABSGTOL threshold.
<LI> The term left of the GTOL criterion is less than or
            equal to <SPAN CLASS="mathfont">max(1.0<I>E</I>-6,</SPAN><I>number</I><SPAN CLASS="mathfont">*</SPAN>GTOL threshold). The
            <SPAN CLASS="mathfont">1.0<I>E</I>-6</SPAN> ensures that the switch is done, even if you
            set the GTOL threshold to zero.
      </UL>
<DT>FD
<DD>is equivalent to FD=100.
</DL>
Note that the FD and FDHESSIAN options cannot apply at the same time.
The FDHESSIAN option is ignored when only first-order
derivatives are used, for example, when the LSQ statement
is used and the HESSIAN is not explicitly needed (displayed
or written to a data set).
For more information, see the section <A HREF="sect28.htm#nlpfdad">&#34;Finite-Difference Approximations of Derivatives&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfhesi">&#13;</A>FDHESSIAN[=<SPAN CLASS="ssiten"><I>FORWARD | CENTRAL</I></SPAN>]</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">FDHES[=<SPAN CLASS="ssiten"><I>FORWARD | CENTRAL</I></SPAN>]</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">FDH[=<SPAN CLASS="ssiten"><I>FORWARD | CENTRAL</I></SPAN>]</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0105">&#13;</A><A NAME="idxnlp0106">&#13;</A><A NAME="idxnlp0107">&#13;</A><A NAME="idxnlp0108">&#13;</A><A NAME="idxnlp0109">&#13;</A>specifies that second-order derivatives
be computed using finite difference approximations based on evaluations
of the gradients.
<DL>
<DT>FDHESSIAN=FORWARD
<DD>uses forward differences.
<DT>FDHESSIAN=CENTRAL
<DD>uses central differences.
<DT>FDHESSIAN
<DD>uses forward differences
      for the Hessian except for the initial and final
      output.
</DL>
Note that the FD and FDHESSIAN options cannot apply at the same time.
For more information, see the section <A HREF="sect28.htm#nlpfdad">&#34;Finite-Difference Approximations of Derivatives&#34;</A>
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpffdigi">&#13;</A>FDIGITS=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0110">&#13;</A><A NAME="idxnlp0111">&#13;</A><A NAME="idxnlp0112">&#13;</A>specifies the number of accurate digits
in evaluations of the objective function. Fractional values
such as FDIGITS=4.7 are allowed. The default value is <SPAN CLASS="mathfont"><I>r</I></SPAN>=-log10(<IMG WIDTH="11" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq24.gif"
 ALT="\epsilon">),
where <IMG WIDTH="11" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq24.gif"
 ALT="\epsilon"> is the machine precision. The value of <SPAN CLASS="mathfont"><I>r</I></SPAN> is
used to compute the interval size <SPAN CLASS="mathfont"><I>h</I></SPAN> for the computation of
finite-difference approximations of the derivatives of the
objective function and for the default value of the FCONV =
option.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfobjcon">&#13;</A>FDINT= OBJ | CON | ALL</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0113">&#13;</A>specifies how the finite difference
intervals <SPAN CLASS="mathfont"><I>h</I></SPAN> should be computed.
For FDINT=OBJ, the interval <SPAN CLASS="mathfont"><I>h</I></SPAN> is based on the behavior of
the objective function; for FDINT=CON, the interval <SPAN CLASS="mathfont"><I>h</I></SPAN>
is based on the behavior of the nonlinear constraints
functions; and for FDINT=ALL, the interval <SPAN CLASS="mathfont"><I>h</I></SPAN> is based
on the behavior of the objective function and the
nonlinear constraints functions.
For more information, see the section <A HREF="sect28.htm#nlpfdad">&#34;Finite-Difference Approximations of Derivatives&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpffsz">&#13;</A>FSIZE=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0114">&#13;</A>specifies the FSIZE parameter of the relative
function and relative gradient termination criteria. The default
value is <SPAN CLASS="mathfont"><I>r</I>=0</SPAN>. For more details, see the FCONV = and GCONV= options
in the the section <A HREF="sect6.htm#nlppns">&#34;PROC NLP Statement&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfgfour">&#13;</A>G4=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>n</I>&#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0115">&#13;</A>The G4= option is used when the covariance matrix is singular. 
The value <SPAN CLASS="mathfont"><I>n</I></SPAN> determines which generalized inverse is computed.
The default value of <SPAN CLASS="mathfont"><I>n</I></SPAN> is 60. 
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfcongo">&#13;</A>GCONV=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">GTOL=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0116">&#13;</A><A NAME="idxnlp0117">&#13;</A><A NAME="idxnlp0118">&#13;</A><A NAME="idxnlp0119">&#13;</A>specifies the relative
gradient convergence criterion. For all techniques except the
CONGRA and NMSIMP techniques, termination requires that the
normalized predicted function reduction is small,
 
<DL CLASS="equation"><DD><IMG WIDTH="214" HEIGHT="102"
 SRC="images/nlpeq32.gif"
 ALT="{ g(x^{(k)})^T [G^{(k)}]^{-1} g(x^{(k)}) \over
 \max(| f(x^{(k)})|,{FSIZE}) } \leq r "></DL>
where FSIZE is defined by the FSIZE= option.
For the CONGRA technique (where a reliable Hessian estimate <SPAN CLASS="mathfont"><I>G</I></SPAN>
is not available)
 
<DL CLASS="equation"><DD><IMG WIDTH="391" HEIGHT="102"
 SRC="images/nlpeq33.gif"
 ALT="{ \parallel g(x^{(k)}) \parallel_2^2 
 \parallel s(x^{(k)}) \parallel_2
 \over \...
 ...lel g(x^{(k)}) - g(x^{(k-1)})
 \parallel_2 \max(| f(x^{(k)})|,{FSIZE}) } \leq r "></DL>
is used. This criterion is not used by the NMSIMP technique.
The default value is <SPAN CLASS="mathfont"><I>r</I>=1<I>e</I>-8</SPAN>.
The optional integer value <SPAN CLASS="mathfont"><I>n</I></SPAN> speicfies the number of successive
iterations for which the criterion must be satisfied before the
process can be terminated.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfctwo">&#13;</A>GCONV2=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">GTOL2=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0120">&#13;</A><A NAME="idxnlp0121">&#13;</A><A NAME="idxnlp0122">&#13;</A><A NAME="idxnlp0123">&#13;</A>specifies another relative gradient convergence criterion.
 
<DL CLASS="equation"><DD><IMG WIDTH="178" HEIGHT="116"
 SRC="images/nlpeq34.gif"
 ALT="\max_j {| g_j(x^{(k)})| \over \sqrt{f(x^{(k)})G_{j,j}^{(k)}} }
 \leq r "></DL>
This option is valid only when using the
TRUREG, LEVMAR, NRRIDG, and NEWRAP techniques on least-squares problems.
The default value is <SPAN CLASS="mathfont"><I>r</I>=0</SPAN>.
The optional integer value <SPAN CLASS="mathfont"><I>n</I></SPAN> specifies the number of successive
iterations for which the criterion must be satisfied before the
process can be terminated.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfgcheck">&#13;</A>GRADCHECK[= NONE | FAST | DETAIL]</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">GC[= NONE | FAST | DETAIL]</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0124">&#13;</A><A NAME="idxnlp0125">&#13;</A><A NAME="idxnlp0126">&#13;</A>Specifying
GRADCHECK= DETAIL computes a test vector and test matrix
to check whether the gradient <SPAN CLASS="mathfont"><I>g</I></SPAN> specified by a
GRADIENT (or indirectly by a JACOBIAN) statement is appropriate
for the function <SPAN CLASS="mathfont"><I>f</I></SPAN> computed by the program statements.
If the specification of the first derivatives is correct, the
elements of the test vector and test matrix should be relatively
small. For very large optimization problems, the algorithm can be
too expensive in terms of computer time and memory. If the GRADCHECK 
option is not specified, a fast derivative test identical
to the GRADCHECK= FAST specification is performed by default. 
It is possible to
suppress the default derivative test by specifying GRADCH=NONE.
For more information, see the section <A HREF="sect30.htm#nlpttgs">&#34;Testing the Gradient Specification&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfheska">&#13;</A>HESCA=<SPAN CLASS="mathfont">0 | 1 | 2 | 3</SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">HS=<SPAN CLASS="mathfont">0 | 1 | 2 | 3</SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0127">&#13;</A><A NAME="idxnlp0128">&#13;</A><A NAME="idxnlp0129">&#13;</A><A NAME="idxnlp0130">&#13;</A>specifies the scaling
version of the Hessian or crossproduct Jacobian matrix used in
NRRIDG, TRUREG, LEVMAR, NEWRAP, or DBLDOG optimization.
If the value of the HS=option is not equal to zero, the first iteration and each restart
iteration sets the diagonal scaling matrix <SPAN CLASS="mathfont"><I>D<SUP>(0)</SUP></I>=<I>diag</I>(<I>d</I><SUB><I>i</I></SUB><SUP>(0)</SUP>)</SPAN>:

<DL CLASS="equation"><DD><IMG WIDTH="177" HEIGHT="89"
 SRC="images/nlpeq35.gif"
 ALT="d_i^{(0)} = \sqrt{\max(| G^{(0)}_{i,i}|,\epsilon)} "></DL>
where <SPAN CLASS="mathfont"><I>G<SUP>(0)</SUP></I><SUB><I>i</I>,<I>i</I></SUB></SPAN> are the diagonal elements of the
Hessian or crossproduct Jacobian matrix.
In every other iteration, the diagonal scaling matrix
<SPAN CLASS="mathfont"><I>D<SUP>(0)</SUP></I>=<I>diag</I>(<I>d</I><SUB><I>i</I></SUB><SUP>(0)</SUP>)</SPAN> is updated depending on the HS=option:
<DL>
<DT>HS=0
<DD>specifies that no scaling is done.
<DT>HS=1
<DD>specifies the Mor<IMG WIDTH="11" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq36.gif"
 ALT="\acute{e}"> (1978) scaling update:
  
<DL CLASS="equation"><DD><IMG WIDTH="279" HEIGHT="89"
 SRC="images/nlpeq37.gif"
 ALT="d_i^{(k+1)} = \max(d_i^{(k)},\sqrt{\max(| G^{(k)}_{i,i}|,\epsilon)}) "></DL>
<DT>HS=2
<DD>specifies the Dennis, Gay, &#38; Welsch (1981) scaling update:
  
<DL CLASS="equation"><DD><IMG WIDTH="319" HEIGHT="89"
 SRC="images/nlpeq38.gif"
 ALT="d_i^{(k+1)} = \max(0.6 * d_i^{(k)},
 \sqrt{\max(| G^{(k)}_{i,i}|,\epsilon)}) "></DL>
<DT>HS=3
<DD>specifies that <SPAN CLASS="mathfont"><I>d</I><SUB><I>i</I></SUB></SPAN> is reset in each iteration:
  
<DL CLASS="equation"><DD><IMG WIDTH="196" HEIGHT="89"
 SRC="images/nlpeq39.gif"
 ALT="d_i^{(k+1)} = \sqrt{\max(| G^{(k)}_{i,i}|,\epsilon)} "></DL></DL>
where <IMG WIDTH="11" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq24.gif"
 ALT="\epsilon"> is the relative machine precision.
The default value is HS=1 for LEVMAR minimization and HS=0 otherwise.
Scaling of the Hessian or crossproduct Jacobian matrix can be
time-consuming in the case where general linear constraints
are active.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfnest">&#13;</A>INEST=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">INVAR=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">ESTDATA=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0131">&#13;</A><A NAME="idxnlp0132">&#13;</A><A NAME="idxnlp0133">&#13;</A><A NAME="idxnlp0134">&#13;</A>can be used to specify the initial values of the parameters
defined in a PARMS or VAR statement as well as simple boundary
constraints and general linear constraints. The INEST= data set
can contain additional variables with names corresponding to
constants used in the program statements. At the beginning of each
run of PROC NLP, the values of the constants are read from the
PARMS observation, initializing the constants in the program
statements.  For more information, see the section <A HREF="sect38.htm#nlpiids">&#34;INEST= Input Data Set&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfinfis">&#13;</A>INFEASIBLE</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">IFP</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0135">&#13;</A><A NAME="idxnlp0136">&#13;</A>specifies that the
function values of both feasible and infeasible grid points are
to be computed, displayed, and written to the OUTEST= or OUTVAR=
data set, although only the feasible grid points are candidates
for the starting point <SPAN CLASS="mathfont"><I>x<SUP>(0)</SUP></I></SPAN>. This option enables you to explore
the shape of the objective function of points surrounding the
feasible region. For the output, the grid points are
sorted first with decreasing values of the maximum constraint
violation. Points with the same value of the maximum constraint
violation are then sorted with increasing (minimization) or
decreasing (maximization) value of the objective function.
Using the BEST= option restricts only the number of best grid
points in the displayed output, not those in the data set. The
INFEASIBLE option affects both the displayed output and the
output saved to the OUTEST= data set. The OUTGRID option can be used
to write the grid points and their function values to an OUTEST= or
OUTVAR= data set. After small modifications (deleting unneeded
information), this data set can be used with the G3D procedure of the
SAS/GRAPHproduct to generate a three-dimensional surface plot
of the objective function depending on two selected parameters.
For more information on grids, see the section <A HREF="sect22.htm#nlpddvrs">&#34;DECVAR Statement&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfinhesn">&#13;</A>INHESSIAN[=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN>]</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">INHESS[=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN>]</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0137">&#13;</A><A NAME="idxnlp0138">&#13;</A><A NAME="idxnlp0139">&#13;</A><A NAME="idxnlp0140">&#13;</A>specifies how the initial
estimate of the approximate Hessian is defined for the quasi-Newton
techniques QUANEW, DBLDOG, and HYQUAN. There are two alternatives:
<UL>
<LI> The <SPAN CLASS="mathfont">=<I>r</I></SPAN> specification is not used: the initial estimate of the
      approximate Hessian is set to the true Hessian or crossproduct
      Jacobian at <SPAN CLASS="mathfont"><I>x<SUP>(0)</SUP></I></SPAN>.
<LI> The <SPAN CLASS="mathfont">=<I>r</I></SPAN> specification is used: the initial estimate of the
      approximate Hessian is set to the multiple of the identity
      matrix <SPAN CLASS="mathfont"><I>rI</I></SPAN>.
</UL>
By default, if INHESSIAN=<SPAN CLASS="mathfont"><I>r</I></SPAN> is not specified, the initial estimate
of the approximate Hessian is set to the multiple of the identity
matrix <SPAN CLASS="mathfont"><I>rI</I></SPAN>, where the scalar <SPAN CLASS="mathfont"><I>r</I></SPAN> is computed from the magnitude
of the initial gradient.  
For most applications, this is a sufficiently good 
first approximation.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfinitl">&#13;</A>INITIAL=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0141">&#13;</A>specifies a value <SPAN CLASS="mathfont"><I>r</I></SPAN> as the common
initial value for all parameters for which no other initial
value assignments by the PARMS or VAR statement or an INEST=
(or INVAR= or ESTDATA=) data set are made.
For more information, see the description of the INITIAL 
option in the section <A HREF="sect6.htm#nlppns">&#34;PROC NLP Statement&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfinqdd">&#13;</A>INQUAD=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0142">&#13;</A><A NAME="idxnlp0143">&#13;</A><A NAME="idxnlp0144">&#13;</A>can be used to specify (the nonzero
elements of) the matrix <SPAN CLASS="mathfont"><I>H</I></SPAN>, vector <SPAN CLASS="mathfont"><I>g</I></SPAN>, and scalar <SPAN CLASS="mathfont"><I>c</I></SPAN> of
a quadratic programming problem,
 <IMG WIDTH="205" HEIGHT="37" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq40.gif"
 ALT=" f(x) = {1 \over 2} x^T H x + g^T x + c ">.This option cannot be used together with the NLINCON statement.
Two forms (<I>dense</I> and <I>sparse</I>) of the INQUAD= data
set can be used. For more information,see the section <A HREF="sect38.htm#nlpinq">&#34;INQUAD= Input Data Set&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfinstpp">&#13;</A>INSTEP=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0145">&#13;</A>For highly nonlinear objective functions, such as the EXP function,
the default initial radius of the trust-region algorithm TRUREG,
DBLDOG, or LEVMAR or the default step length of the line-search
algorithms can result in arithmetic overflows. If this occurs, 
decreasing values of <SPAN CLASS="mathfont">0 &#60; <I>r</I> &#60; 1</SPAN> should be specified, such as INSTEP=<SPAN CLASS="mathfont">1<I>e</I>-1</SPAN>,
INSTEP=<SPAN CLASS="mathfont">1<I>e</I>-2</SPAN>, INSTEP=<SPAN CLASS="mathfont">1<I>e</I>-4</SPAN>, and so on, until the iteration starts
successfully.
<UL>
<LI> For trust-region algorithms (TRUREG, DBLDOG, LEVMAR)
the INSTE=P option specifies a factor <SPAN CLASS="mathfont"><I>r</I> &#62; 0</SPAN> for the initial radius <IMG WIDTH="37" HEIGHT="20" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq41.gif"
 ALT="\Delta^{(0)}">of the trust region. The default initial trust-region radius is
the length of the scaled gradient. This step corresponds to the
default radius factor of <SPAN CLASS="mathfont"><I>r</I>=1</SPAN>.
<LI> For line-search algorithms (NEWRAP, CONGRA, QUANEW, HYQUAN)
the INSTEP= option specifies an upper bound for the initial step length for
the line-search during the first five iterations. The default
initial step length is <SPAN CLASS="mathfont"><I>r</I>=1</SPAN>.
<LI> For the Nelder-Mead simplex algorithm,
using TECH= NMSIMP, the INSTEP=<SPAN CLASS="mathfont"><I>r</I></SPAN> option defines the size of
the initial simplex.
</UL>
For more details, see the section <A HREF="sect36.htm#nlpcp">&#34;Computational Problems&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpflsd">&#13;</A>LCDEACT=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">LCD=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0146">&#13;</A><A NAME="idxnlp0147">&#13;</A>specifies a threshold <SPAN CLASS="mathfont"><I>r</I></SPAN> for the Lagrange multiplier that decides
whether an active inequality constraint remains active or can
be deactivated. For a maximization (minimization), an active
inequality constraint can be deactivated only if its Lagrange
multiplier is greater (less) than the threshold value <SPAN CLASS="mathfont"><I>r</I></SPAN>.
For maximization, <SPAN CLASS="mathfont"><I>r</I></SPAN> must be greater than zero;
for minimization, <SPAN CLASS="mathfont"><I>r</I></SPAN> must be smaller than zero. The default value is

<DL CLASS="equation"><DD><IMG WIDTH="467" HEIGHT="78"
 SRC="images/nlpeq42.gif"
 ALT="r = +- \min(0.01, \max(0.1 * 
{\textstyle ABSGCONV},0.001 * gmax^{(k)})) "></DL>
where the <SPAN CLASS="mathfont">+</SPAN> stands for maximization, the <SPAN CLASS="mathfont">-</SPAN> for minimization,
ABSGCONV is the value of the absolute gradient criterion, and
<SPAN CLASS="mathfont"><I>gmax</I><SUP>(<I>k</I>)</SUP></SPAN> is the maximum absolute element of the (projected)
gradient <SPAN CLASS="mathfont"><I>g</I><SUP>(<I>k</I>)</SUP></SPAN> or <SPAN CLASS="mathfont"><I>Z</I><SUP><I>T</I></SUP> <I>g</I><SUP>(<I>k</I>)</SUP></SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfepsci">&#13;</A>LCEPSILON=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">LCEPS=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">LCE=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0148">&#13;</A><A NAME="idxnlp0149">&#13;</A><A NAME="idxnlp0150">&#13;</A>specifies the range
<A NAME="idxnlp0151">&#13;</A>for active and violated boundary and linear
constraints.
 During the optimization process, the
introduction of rounding errors can force PROC NLP to
increase the value of <SPAN CLASS="mathfont"><I>r</I></SPAN> by a factor of 10, 100,... If
this happens it is indicated by a message written to the log.
For more information, see the section <A HREF="sect27.htm#nlpflincomp">&#34;Linear Complementarity (LICOMP)&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpflcsinn">&#13;</A>LCSINGULAR=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">LCSING=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">LCS=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0152">&#13;</A><A NAME="idxnlp0153">&#13;</A><A NAME="idxnlp0154">&#13;</A>specifies a criterion <SPAN CLASS="mathfont"><I>r</I></SPAN> used in the update of
the QR decomposition that decides whether an active
constraint is linearly dependent on a set of other active
constraints. The default value is <SPAN CLASS="mathfont"><I>r</I>=1<I>e</I>-8</SPAN>. The larger <SPAN CLASS="mathfont"><I>r</I></SPAN> becomes,
the more the active constraints are recognized as being
linearly dependent. If the value of <SPAN CLASS="mathfont"><I>r</I></SPAN> is larger than
<SPAN CLASS="mathfont">0.1</SPAN>, it is reset to <SPAN CLASS="mathfont">0.1</SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpflsear">&#13;</A>LINESEARCH=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I></SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">LIS=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0155">&#13;</A><A NAME="idxnlp0156">&#13;</A><A NAME="idxnlp0157">&#13;</A><A NAME="idxnlp0158">&#13;</A>specifies the
line-search method for the CONGRA, QUANEW, HYQUAN, and NEWRAP
optimization techniques.
Refer to Fletcher (1987) 
<A NAME="idxnlp0159">&#13;</A>for an introduction to
line-search techniques. The value of <SPAN CLASS="mathfont"><I>i</I></SPAN> can be <SPAN CLASS="mathfont">1, ... , 8</SPAN>.
For CONGRA, QUANEW, and NEWRAP, the default value is <SPAN CLASS="mathfont"><I>i</I> = 2</SPAN>. A special
line-search method is the default for the least-squares technique
HYQUAN that is based on an algorithm developed by Lindstr<IMG WIDTH="12" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq43.gif"
 ALT="\ddot{o}">m
&#38; Wedin (1984). Although it needs more memory, this default
line-search method sometimes works better with large
least-squares problems. However, by specifying LIS=<SPAN CLASS="mathfont"><I>i</I></SPAN>,
<SPAN CLASS="mathfont"><I>i</I> = 1, ... , 8</SPAN>, it is possible to use one of the standard
techniques with HYQUAN.
<DL>
<DT>LIS=1
<DD>specifies a line-search method that needs the
             same number of function and gradient calls for
             cubic interpolation and cubic extrapolation.
<DT>LIS=2
<DD>specifies a line-search method that needs more
             function than gradient calls for quadratic and
             cubic interpolation and cubic extrapolation;
             this method is implemented as shown in
             Fletcher (1987) and can be modified to an exact
             line-search by using the LSPRECISION= option.
<DT>LIS=3
<DD>specifies a line-search method that needs the
             same number of function and gradient calls for
             cubic interpolation and cubic extrapolation;
             this method is implemented as shown in
             Fletcher (1987) and can be modified to an exact
             line-search by using the LSPRECISION= option.
<DT>LIS=4
<DD>specifies a line-search method that needs the
             same number of function and gradient calls for
             stepwise extrapolation and cubic interpolation.
<DT>LIS=5
<DD>specifies a line-search method that is a modified
             version of LIS=4.
<DT>LIS=6
<DD>specifies golden section line-search (Polak 1971), which
             uses only function values for linear approximation.
<DT>LIS=7
<DD>specifies bisection line-search (Polak 1971), which
             uses only function values for linear approximation.
<DT>LIS=8
<DD>specifies the Armijo line-search technique, (Polak 1971)
             which uses only function values for linear approximation.
</DL><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpflst">&#13;</A>LIST</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0160">&#13;</A>displays the model program and variable lists.
The LIST option is a debugging feature and is not normally needed. This
output is not included in either the default output or
the output specified by the PALL option.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpflcod">&#13;</A>LISTCODE</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0161">&#13;</A>diplays the derivative tables and the compiled
program code. The LISTCODE option is a debugging feature and is not normally
needed. This output is not included in either the default
output or the output specified by the PALL option. The option is
similar to that used in MODEL procedure in SAS/ETS software.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfsprec">&#13;</A>LSPRECISION=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">LSP=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0162">&#13;</A><A NAME="idxnlp0163">&#13;</A>specifies the
degree of accuracy that should be obtained by the line-search
algorithms LIS=2 and LIS=3. Usually an imprecise line-search
is inexpensive and sufficient for convergence to the optimum. 
For difficult optimization
problems, a more precise and expensive line-search may be
necessary (Fletcher<A NAME="idxnlp0164">&#13;</A>1987). The second (default
for NEWRAP, QUANEW, and CONGRA) and third line-search methods
approach exact line-search for small LSPRECISION= values. 
In the presence of numerical problems, it is advised to decrease
the LSPRECISION= value to obtain a more precise line-search.
The default values are as follows.
<DIV ALIGN="CENTER">
<TABLE COLS=3 FRAME=BOX RULES=GROUPS CELLPADDING=5 CELLSPACING=0 BGCOLOR="#F0F0F0" BORDER=1><COLGROUP><COL><COLGROUP><COL><COLGROUP><COL>
<TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#BBBBBB"  ALIGN=LEFT NOWRAP><B>
                      <FONT COLOR="#003399" FACE="Verdana, Helvetica, Helv"><B>TECH= </B></FONT></B>
                      </TD>
                     <TD BGCOLOR="#BBBBBB"  ALIGN=LEFT NOWRAP><B>
                      <FONT COLOR="#003399" FACE="Verdana, Helvetica, Helv"><B>UPDATE= </B></FONT></B>
                      </TD>
                     <TD BGCOLOR="#BBBBBB"  ALIGN=LEFT NOWRAP><B>
                      <FONT COLOR="#003399" FACE="Verdana, Helvetica, Helv"><B>LSP default</B></FONT></B>
                      </TD>
                     </TR><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>QUANEW</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>DBFGS, BFGS</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><SPAN CLASS="mathfont"><I>r</I></SPAN> = 0.4</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>QUANEW</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>DDFP, DFP</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><SPAN CLASS="mathfont"><I>r</I></SPAN> = 0.06</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>HYQUAN</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>DBFGS</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><SPAN CLASS="mathfont"><I>r</I></SPAN> = 0.1</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>HYQUAN</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>DDFP</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><SPAN CLASS="mathfont"><I>r</I></SPAN> = 0.06</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>CONGRA</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>all</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><SPAN CLASS="mathfont"><I>r</I></SPAN> = 0.1</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>NEWRAP</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP>no update</TD><TD BGCOLOR="#DDDDDD" ALIGN=LEFT NOWRAP><SPAN CLASS="mathfont"><I>r</I></SPAN> = 0.9</TD></TR></TBODY>
</TABLE></DIV>For more details, refer to Fletcher<A NAME="idxnlp0165">&#13;</A>(1987).
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfmaxfx">&#13;</A>MAXFUNC=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I></SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">MAXFU=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0166">&#13;</A><A NAME="idxnlp0167">&#13;</A><A NAME="idxnlp0168">&#13;</A><A NAME="idxnlp0169">&#13;</A>specifies the
maximum number <SPAN CLASS="mathfont"><I>i</I></SPAN> of function calls in the optimization
process. The default values are
      <UL>
<LI> TRUREG, LEVMAR, NRRIDG, NEWRAP: 125
<LI> QUANEW, HYQUAN, DBLDOG: 500
<LI> CONGRA, QUADAS: 1000
<LI> NMSIMP: 3000
      </UL>
Note that the optimization can be terminated only after
completing a full iteration. Therefore, the number of function
calls that are actually performed can exceed the number that
is specified by the MAXFUNC= option.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfmxitt">&#13;</A>MAXITER=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">MAXIT=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0170">&#13;</A><A NAME="idxnlp0171">&#13;</A><A NAME="idxnlp0172">&#13;</A><A NAME="idxnlp0173">&#13;</A>specifies the
maximum number <SPAN CLASS="mathfont"><I>i</I></SPAN> of iterations in the optimization process.
The default values are:
      <UL>
<LI> TRUREG, LEVMAR, NRRIDG, NEWRAP:  50
<LI> QUANEW, HYQUAN, DBLDOG: 200
<LI> CONGRA, QUADAS: 400
<LI> NMSIMP: 1000
      </UL>
This default value is valid also when <SPAN CLASS="mathfont"><I>i</I></SPAN> is specified as
a missing value. The optional second value <SPAN CLASS="mathfont"><I>n</I></SPAN> is valid only
for TECH= QUANEW with nonlinear constraints. It specifies an
upper bound <SPAN CLASS="mathfont"><I>n</I></SPAN> for the number of iterations of an algorithm
used to reduce the violation of nonlinear constraints at a
starting point. The default value is <SPAN CLASS="mathfont"><I>n</I></SPAN>=20.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfmxstp">&#13;</A>MAXSTEP=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0174">&#13;</A>specifies an upper bound for the
step length of the line-search algorithms during the
first <SPAN CLASS="mathfont"><I>n</I></SPAN> iterations. By default, <SPAN CLASS="mathfont"><I>r</I></SPAN> is the largest
double precision value and <SPAN CLASS="mathfont"><I>n</I></SPAN> is the largest integer
available. Setting this option can reduce the speed of
convergence for TECH=CONGRA, TECH=QUANEW, TECH=HYQUAN, and TECH=NEWRAP.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfmxtme">&#13;</A>MAXTIME=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0175">&#13;</A><A NAME="idxnlp0176">&#13;</A><A NAME="idxnlp0177">&#13;</A>specifies an upper limit of <SPAN CLASS="mathfont"><I>r</I></SPAN> seconds of
CPU time for the optimization process. The default value is the largest
floating point double representation of the computer. Note that
the time specified by the MAXTIME= option is checked only once at
the end of each iteration. Therefore, the actual running time of
the PROC NLP job may be longer than that specified by the
MAXTIME= option. The actual running time includes the rest of the
time needed to finish the iteration, time for the output
of the (temporary) results, and (if required) the time for saving
the results in an OUTEST= or OUTVAR= data set. Using the MAXTIME=
option with a permanent OUTEST= data set enables you to separate
large optimization problems into a series of smaller problems
that need smaller amounts of CPU time.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfmnitt">&#13;</A>MINITER=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I></SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">MINIT=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0178">&#13;</A><A NAME="idxnlp0179">&#13;</A>specifies the
minimum number of iterations. The default value is zero. 
If more iterations than are actually needed are requested for
convergence to a stationary point, the optimization
algorithms can behave strangely.
For example,the effect of 
rounding errors can prevent the algorithm from continuing
for the required number of iterations.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfmdl">&#13;</A>MODEL=<SPAN CLASS="ssiten"><I>model-name, model-list</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">MOD=<SPAN CLASS="ssiten"><I>model-name, model-list</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">MODFILE=<SPAN CLASS="ssiten"><I>model-name, model-list</I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0180">&#13;</A><A NAME="idxnlp0181">&#13;</A><A NAME="idxnlp0182">&#13;</A>reads the program statements from one or more input
model files created by previous PROC NLP steps using the
OUTMODEL= option. If it is necessary to include the program code at
a special location in newly written code, the INCLUDE
statement can be used instead of using the MODEL= option. 
Using both the
MODEL= option and the INCLUDE statement
<A NAME="idxnlp0183">&#13;</A>with the same model
file will include the same model twice, which can produce
different results than including it once. The MODEL= option
is similar to the option used in PROC MODEL in SAS/ETS software.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfmsnglr">&#13;</A>MSINGULAR=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">MSING=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0184">&#13;</A><A NAME="idxnlp0185">&#13;</A><A NAME="idxnlp0186">&#13;</A><A NAME="idxnlp0187">&#13;</A>specifies a relative singularity
criterion for measuring singularity of Hessian and
crossproduct Jacobian and their projected forms.
The default value is <SPAN CLASS="mathfont">1<I>e</I>-12</SPAN> if
the SINGULAR= option is not specified and
<IMG WIDTH="92" HEIGHT="33" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq44.gif"
 ALT="\max(10 * \epsilon,">1e-4<SPAN CLASS="mathfont">* <I>SINGULAR</I></SPAN> otherwise.
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfnognm">&#13;</A>NOEIGNUM</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0188">&#13;</A>suppresses the computation and
output of the determinant and the inertia of the Hessian,
crossproduct Jacobian, and covariance matrices. The inertia
of a symmetric matrix are the numbers of negative, positive,
and zero eigenvalues. For large applications, the NOEIGNUM
option can save computer time.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfnomrs">&#13;</A>NOMISS</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0189">&#13;</A>is valid only for those variables
of the DATA= data set that  are referred to in program
statements. If the NOMISS option is specified, observations with any
missing value for those variables are skipped. If the NOMISS option
is not specified, the missing value may result in a
missing value of the objective function, implying that
the corresponding BY group of data is not processed.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfnopig">&#13;</A>NOPRINT</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">NOP</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0190">&#13;</A><A NAME="idxnlp0191">&#13;</A><A NAME="idxnlp0192">&#13;</A><A NAME="idxnlp0193">&#13;</A>suppresses the output.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfptchk">&#13;</A>OPTCHECK [=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I></SPAN></I></SPAN>]</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0194">&#13;</A><A NAME="idxnlp0195">&#13;</A>computes the function values <SPAN CLASS="mathfont"><I>f</I>(<I>x</I><SUB><I>l</I></SUB>)</SPAN> of a grid of
points <SPAN CLASS="mathfont"><I>x</I><SUB><I>l</I></SUB></SPAN> in a small neighborhood of <SPAN CLASS="mathfont"><I>x<SUP>*</SUP></I></SPAN>. 
The <SPAN CLASS="mathfont"><I>x</I><SUB><I>l</I></SUB></SPAN> are located in a ball of radius of <SPAN CLASS="mathfont"><I>r</I></SPAN> about <SPAN CLASS="mathfont"><I>x<SUP>*</SUP></I></SPAN>.
If the OPTCHECK optioin is specified without <SPAN CLASS="mathfont"><I>r</I></SPAN>, the default value is
<SPAN CLASS="mathfont"><I>r</I>=0.1</SPAN> at the starting point
and <SPAN CLASS="mathfont"><I>r</I>=0.01</SPAN> at terminating point.
If a point <SPAN CLASS="mathfont"><I>x</I><SUB><I>l</I></SUB><SUP>*</SUP></SPAN> is found with a better function value than
<SPAN CLASS="mathfont"><I>f</I>(<I>x<SUP>*</SUP></I>)</SPAN>, then optimization is restarted at <SPAN CLASS="mathfont"><I>x</I><SUB><I>l</I></SUB><SUP>*</SUP></SPAN>.
For more information on grids, see the section <A HREF="sect22.htm#nlpddvrs">&#34;DECVAR Statement&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfott">&#13;</A>OUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0196">&#13;</A>creates an output data set that
contains those variables of a DATA= input data set 
referred to in the program statements plus additional
variables computed by performing the program statements
of the objective function, derivatives, and nonlinear
constraints. The OUT= data set can also contain
first- and second-order derivatives of these variables
if the OUTDER= option is specified. The variables and
derivatives are evaluated at <SPAN CLASS="mathfont"><I>x<SUP>*</SUP></I></SPAN>; for TECH=NONE, they are evaluated at <SPAN CLASS="mathfont"><I>x<SUP>0</SUP></I></SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfotlll">&#13;</A>OUTALL</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0197">&#13;</A>if an OUTEST= data set is
specified, this option sets the OUTHESSIAN option if the MIN
or MAX statement is used. If the LSQ statement is used, the
OUTALL option sets the OUTCRPJAC option. If nonlinear
constraints are specified using the NLINCON statement, the
OUTALL option sets the OUTNLCJAC option.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfotccc">&#13;</A>OUTCRPJAC</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0198">&#13;</A>if an OUTVAR= data set is
specified, the crossproduct Jacobian matrix of the <SPAN CLASS="mathfont"><I>m</I></SPAN>
functions composing the least-squares function 
is written to the OUTVAR= data set.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nllpfowtd">&#13;</A>OUTDER= 0, 1, 2</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0199">&#13;</A>specifies whether or not derivatives are
written to the OUT= data set. For OUTDER=2, first-
and second-order derivatives are written to the data set;
for OUTDER=1, only first-order derivatives are written;
for OUTDER=0, no derivatives are written to the data set.
The default value is OUTDER=0. Derivatives are
evaluated at <SPAN CLASS="mathfont"><I>x<SUP>*</SUP></I></SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfowvr">&#13;</A>OUTVAR=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">OUTEST=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0200">&#13;</A><A NAME="idxnlp0201">&#13;</A>creates an output data set that contains the results of the
optimization.
This is useful for reporting and for restarting the optimzation
in a subsequent execution of the procedure.
Information in the data set can include parameter estimates, 
gradient values, constraint information, Lagrangian values,
Hessian values, Jacobian values, covariance, standard errors,
and confidence intervals.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfotgrd">&#13;</A>OUTGRID</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0202">&#13;</A>writes the grid points and their
function values to the OUTEST= data set. 
By default, only the feasible grid points points are saved;
however, if the INFEASIBLE option is specified, all
feasible and infeasible grid points are saved.
Note that the BEST= option does not affect the
output of grid points to the OUTEST= or OUTVAR=  data set.
For more information on grids, see the section <A HREF="sect22.htm#nlpddvrs">&#34;DECVAR Statement&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpothsy">&#13;</A>OUTHESSIAN</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">OUTHES</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0203">&#13;</A><A NAME="idxnlp0204">&#13;</A>writes the
Hessian matrix of the objective function to the OUTEST= data set.
If the Hessian matrix is computed for some other reason
(if, for example, the PHESSIAN option is specified),
the OUTHESSIAN option is set by default.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfotut">&#13;</A>OUTITER</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0205">&#13;</A>during each iteration writes the parameter estimates,
the value of the objective function, the gradient (if available),
and (if OUTTIME is specified) the time in seconds
from the start of the optimization to the OUTEST=
or OUTVAR= data set.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpojj">&#13;</A>OUTJAC</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0206">&#13;</A>writes the Jacobian matrix of the <SPAN CLASS="mathfont"><I>m</I></SPAN> 
functions composing the least-squares function to 
the OUTEST= or OUTVAR= data set. 
If the PJAC option is specified, the OUTJAC option is set by default.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfomdl">&#13;</A>OUTMODEL=<SPAN CLASS="ssiten"><I>model-name</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">OUTMOD=<SPAN CLASS="ssiten"><I>model-name</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">OUTM=<SPAN CLASS="ssiten"><I>model-name</I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0207">&#13;</A><A NAME="idxnlp0208">&#13;</A><A NAME="idxnlp0209">&#13;</A>the name of an output model file to which
the program statements are to be written. The program statements
of this file can be included into the program statements of a
succeeding PROC NLP run using the MODEL= option or the INCLUDE
program statement. The OUTMODEL= option is similar to the option
used in PROC MODEL in SAS/ETS software.
Note that the following statements are not part of the
program code that is written to an OUTMODEL= data set:
 MIN, MAX, LSQ, MINQUAD, MAXQUAD, PARMS, BOUNDS, BY,
 CRPJAC, GRADIENT, HESSIAN, JACNLC, JACOBIAN, LABEL,
 LINCON, MATRIX, NLINCON.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlponljc">&#13;</A>OUTNLCJAC</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0210">&#13;</A>if an OUTEST= or OUTVAR=  data set is
specified, the Jacobian matrix of the nonlinear constraint
functions specified by the NLINCON statement is written to the
OUTEST= data set. If the Jacobian matrix of the nonlinear
constraint functions is computed for some other reason (if,
for example, the PNLCJAC option is specified), the OUTNLCJAC
option is set by default.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfottm">&#13;</A>OUTTIME</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0211">&#13;</A>if an OUTEST= or OUTVAR= data set is
specified and if the OUTITER option is specified, during each
iteration, the time in seconds from the start of the optimization
is written to the OUTEST= or OUTVAR= data set.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlplplp">&#13;</A>PALL</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">ALL</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0212">&#13;</A><A NAME="idxnlp0213">&#13;</A><A NAME="idxnlp0214">&#13;</A><A NAME="idxnlp0215">&#13;</A>displays all optional output
except the output generated by the 
PSTDERR <A NAME="idxnlp0216">&#13;</A>, PCOV <A NAME="idxnlp0217">&#13;</A>, LIST<A NAME="idxnlp0218">&#13;</A>, 
or LISTCODE <A NAME="idxnlp0219">&#13;</A>option.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfcow">&#13;</A>PCOV</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0220">&#13;</A><A NAME="idxnlp0221">&#13;</A><A NAME="idxnlp0222">&#13;</A>diplays the covariance matrix specified by the
COV= option. The PCOV option is set automatically if the PALL
and COV= options are set.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfprp">&#13;</A>PCRPJAC</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">PJTJ</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0223">&#13;</A><A NAME="idxnlp0224">&#13;</A><A NAME="idxnlp0225">&#13;</A>diplays the <SPAN CLASS="mathfont"><I>n</I> &times;<I>n</I></SPAN>
crossproduct Jacobian matrix <SPAN CLASS="mathfont"><I>J</I><SUP><I>T</I></SUP><I>J</I></SPAN>. If the PALL option is
specified and the LSQ statement is used, this option is set
automatically. If general linear constraints are active at the
solution, the projected crossproduct Jacobian matrix is also
displayed.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfpgvl">&#13;</A>PEIGVAL</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0226">&#13;</A><A NAME="idxnlp0227">&#13;</A>diplays the distribution of eigenvalues
if a G4 inverse is computed for the covariance matrix.
The PEIGVAL option is useful for observing which
eigenvalues of the matrix are recognized as zero eigenvalues
when the generalized inverse is computed, and it is the basis for
setting the COVSING= option in a subsequent execution of PROC NLP.
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfror">&#13;</A>PERROR</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0228">&#13;</A>the PERROR option specifies additional
output for such applications where the program code
for objective function or nonlinear constraints cannot be
evaluated during the iteration process. The PERROR option
is set by default during the evaluations at the starting
point but not during the optimization process.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfpfnct">&#13;</A>PFUNCTION</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0229">&#13;</A><A NAME="idxnlp0230">&#13;</A><A NAME="idxnlp0231">&#13;</A>diplays the values of all functions
specified in a LSQ, MIN, or MAX statement for each observation
read fom the DATA= input data set. The PALL option sets the
PFUNCTION option automatically.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfpgrdd">&#13;</A>PGRID</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0232">&#13;</A>diplays the function values from the grid search.
For more information on grids, see the section <A HREF="sect22.htm#nlpddvrs">&#34;DECVAR Statement&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfpssh">&#13;</A>PHESSIAN</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">PHES</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0233">&#13;</A><A NAME="idxnlp0234">&#13;</A><A NAME="idxnlp0235">&#13;</A>diplays the <SPAN CLASS="mathfont"><I>n</I> &times;<I>n</I></SPAN>
Hessian matrix <SPAN CLASS="mathfont"><I>G</I></SPAN>. If the PALL option is specified and the MIN
or MAX statement is used, this option is set automatically.
If general linear constraints are active at the
solution, the projected Hessian matrix is also displayed.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfhispt">&#13;</A>PHISTORY</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">PHIS</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0236">&#13;</A><A NAME="idxnlp0237">&#13;</A><A NAME="idxnlp0238">&#13;</A><A NAME="idxnlp0239">&#13;</A>diplays the optimization
history. No optimization history is displayed for TECH=LICOMP.
This output is included in both the default output
and the output specified by the PALL option.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfpinni">&#13;</A>PINIT</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">PIN</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0240">&#13;</A><A NAME="idxnlp0241">&#13;</A>diplays the initial values
and derivatives (if available). This output is included
in both the default output and the output specified by the
PALL option.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfyacov">&#13;</A>PJACOBI</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">PJAC</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0242">&#13;</A><A NAME="idxnlp0243">&#13;</A><A NAME="idxnlp0244">&#13;</A>diplays the <SPAN CLASS="mathfont"><I>m</I> &times;<I>n</I></SPAN>
Jacobian matrix <SPAN CLASS="mathfont"><I>J</I></SPAN>. Because of the memory requirement for large
least-squares problems, this option is not invoked by using the
PALL option.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfnlcpj">&#13;</A>PNLCJAC</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0245">&#13;</A>diplays the Jacobian matrix of nonlinear
constraints specified by the NLINCON statement. The PNLCJAC
option is set automatically if the PALL option is specified.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfhorsh">&#13;</A>PSHORT</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">SHORT</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">PSH</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0246">&#13;</A><A NAME="idxnlp0247">&#13;</A><A NAME="idxnlp0248">&#13;</A><A NAME="idxnlp0249">&#13;</A><A NAME="idxnlp0250">&#13;</A>restricts the amount
of<A NAME="idxnlp0251">&#13;</A>default output. If PSHORT is
specified, then
<UL>
<LI> the initial values are not displayed
<LI> the listing of constraints is not displayed
<LI> if there is more than one function in the MIN, MAX, or
      LSQ statement, their values are not displayed
<LI> if the GRADCHECK[=DETAIL] option is used, only the test
      vector is displayed
</UL>
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfsider">&#13;</A>PSTDERR</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">STDERR</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">SE</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0252">&#13;</A><A NAME="idxnlp0253">&#13;</A><A NAME="idxnlp0254">&#13;</A>standard errors that  are
defined as square
roots of the diagonal elements of the covariance matrix.
The <SPAN CLASS="mathfont"><I>t</I></SPAN> values and probabilities <SPAN CLASS="mathfont">&#62;|<I>t</I>|</SPAN> are displayed together
with the approximate standard errors. The type of covariance
matrix must be specified using the COV= option. The SIGSQ=
option, the VARDEF= option, and the special variables
_NOBS_  and _DF_ defined in the program statements can
be used to define a scalar factor <IMG WIDTH="22" HEIGHT="19" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq13.gif"
 ALT="\sigma^2"> of the
covariance matrix and the approximate
standard errors. For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfpsmrm">&#13;</A>PSUMMARY</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">SUMMARY</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">SUM</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0255">&#13;</A><A NAME="idxnlp0256">&#13;</A><A NAME="idxnlp0257">&#13;</A><A NAME="idxnlp0258">&#13;</A><A NAME="idxnlp0259">&#13;</A>restricts the amount of default displayed
output to a short form of iteration history and
notes, warnings and errors.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfptimtm">&#13;</A>PTIME</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0260">&#13;</A>specifies the output of four different
but partially overlapping differences of CPU time:
<UL>
<LI> total running time
<LI> total time for the evaluation of objective
      function, nonlinear constraints, and derivatives:
      shows the total time spent executing
      the programming statements specifying the objective
      function, derivatives, and nonlinear constraints, and
      (if necessary) their firs-t and second-order derivatives.
      This is the total of the time needed for code evaluation
      before, during, and after iterating
<LI> total time for optimization 
      shows the total time spent iterating.
<LI> time for some CMP parsing: shows the time needed
      for parsing the program statements and its derivatives.
      In most applications this is a negligible number, but for
      applications that contain ARRAY statements or DO loops
      or use an optimization technique with analytic second-order 
      derivatives, it can be a considerable.
</UL>
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfrandy">&#13;</A>RANDOM=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0261">&#13;</A><A NAME="idxnlp0262">&#13;</A><A NAME="idxnlp0263">&#13;</A>specifies a positive integer as a seed value
for the pseudorandom number generator. Pseudorandom numbers are
used as initial value <SPAN CLASS="mathfont"><I>x<SUP>(0)</SUP></I></SPAN>.
For more information, see the section <A HREF="sect6.htm#nlppns">&#34;PROC NLP Statement&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfrstsr">&#13;</A>RESTART=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I>&#62;0</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">REST=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>i</I>&#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0264">&#13;</A><A NAME="idxnlp0265">&#13;</A>specifies that
the QUANEW, HYQUAN, or CONGRA algorithm is restarted with
a steepest descent/ascent search direction after at most
<SPAN CLASS="mathfont"><I>i</I></SPAN> iterations.
Default values are as follows:
<UL>
<LI> CONGRA: UPDATE=PB: restart is done automatically so
              specification of <SPAN CLASS="mathfont"><I>i</I></SPAN> is not used.
<LI> CONGRA: UPDATE<IMG WIDTH="18" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq45.gif"
 ALT="\neq">PB: <SPAN CLASS="mathfont"><I>i</I> = min(10<I>n</I>,80)</SPAN>,
              where <SPAN CLASS="mathfont"><I>n</I></SPAN> is the number of parameters.
<LI> QUANEW, HYQUAN: <SPAN CLASS="mathfont"><I>i</I></SPAN> is the largest integer available.
</UL>
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfsiis">&#13;</A>SIGSQ=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>sq</I> &#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0266">&#13;</A>specifies a scalar factor <IMG WIDTH="22" HEIGHT="19" ALIGN="BOTTOM" BORDER="0"
 SRC="images/nlpeq13.gif"
 ALT="\sigma^2"> for
computing the covariance matrix.
If the
SIGSQ= option is specified, VARDEF=N is the default.
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfsingler">&#13;</A>SINGULAR=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I> &#62; 0</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">SING=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I> &#62; 0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0267">&#13;</A><A NAME="idxnlp0268">&#13;</A>specifies the
singularity criterion <SPAN CLASS="mathfont"><I>r</I></SPAN> for the inversion of the
Hessian matrix and crossproduct Jacobian. The default value
is <SPAN CLASS="mathfont">1<I>e</I>-8</SPAN>. 
See the MSINGULAR= and the VSINGULAR= options in the section <A HREF="sect6.htm#nlppns">&#34;PROC NLP Statement&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfqq">&#13;</A>TECHNIQUE=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>x</I></SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">TECH=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>x</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0269">&#13;</A><A NAME="idxnlp0270">&#13;</A><A NAME="idxnlp0271">&#13;</A><A NAME="idxnlp0272">&#13;</A>specifies the optimization technique. Valid values for it are as follows:
<BR><BR><UL>
<LI> CONGRA <BR>
<A NAME="idxnlp0017">&#13;</A>chooses one of four
different <A NAME="idxnlp0018">&#13;</A>conjugate-gradient
optimization algorithms, which can be more precisely specified
with the UPDATE= option and modified with the LINESEARCH= option.
When this option is selected,
UPDATE=PB by default. 
For <IMG WIDTH="66" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq46.gif"
 ALT="n \geq 400">, CONGRA is the default
optimization technique.
<LI> DBLDOG <BR>
<A NAME="idxnlp0019">&#13;</A>performs a version of
double dogleg optimization, <A NAME="idxnlp0020">&#13;</A>which can be more precisely specified
with the UPDATE= option.
When this option is selected,
UPDATE=DBFGS by default.
<LI> HYQUAN <BR>
<A NAME="idxnlp0021">&#13;</A>chooses one of three
different hybrid quasi-Newton <A NAME="idxnlp0022">&#13;</A>optimization algorithms which can be more precisely defined
with the VERSION= option and modified with the LINESEARCH=
option.
By default,VERSION=2 and UPDATE=DBFGS.
<LI> LM <BR>
<A NAME="idxnlp0023">&#13;</A>performs the Levenberg-Marquardt <A NAME="idxnlp0024">&#13;</A>minimization.
For <SPAN CLASS="mathfont"><I>n</I> &#60; 40</SPAN>, this is the default minimization
technique for least-squares problems.
<LI> LCP <BR>
<A NAME="idxnlp0025">&#13;</A>solves a quadratic program as a linear complementarity problem.
<LI> NMSIMP <BR>
<A NAME="idxnlp0026">&#13;</A>performs the Nelder-Mead
simplex<A NAME="idxnlp0027">&#13;</A>optimization method.
<LI> NONE <BR>
<A NAME="idxnlp0028">&#13;</A>does not perform any
optimization. This option can be used
<UL>
<LI> to do grid search without optimization
<LI> to compute and display derivatives and covariance
      matrices which cannot be obtained efficiently with any
      of the optimization techniques
</UL>
<LI> NEWRAP <BR>
<A NAME="idxnlp0029">&#13;</A>performs the Newton-Raphson <A NAME="idxnlp0030">&#13;</A>optimization technique.
The algorithm combines a line-search algorithm with ridging.
The line-search algorithm LIS=2 is the default.
<LI> NRRIDG <BR>
<A NAME="idxnlp0031">&#13;</A>performs the Newton-Raphson
<A NAME="idxnlp0032">&#13;</A>optimization technique. For <IMG WIDTH="57" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq47.gif"
 ALT="n \leq 40">and non-linear least-squares, this is the default.
<LI> QUADAS
<A NAME="idxnlp0033">&#13;</A>performs a special
quadratic version of the active set strategy.
<LI> QUANEW <BR>
<A NAME="idxnlp0034">&#13;</A>chooses one of four
quasi-Newton <A NAME="idxnlp0035">&#13;</A>optimization algorithms
which can be defined more precisely with the UPDATE= option
and modified with the LINESEARCH= option.
This is the default for <SPAN CLASS="mathfont">40 &#60; <I>n</I> &#60; 400</SPAN> or
if there are nonlinear constraints.
<LI> TRUREG <BR>
<A NAME="idxnlp0036">&#13;</A>performs the trust region
<A NAME="idxnlp0037">&#13;</A>optimization technique.
</UL>
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfupdd">&#13;</A><SPAN CLASS="mathfont"><I>m</I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">UPD=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>m</I></SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0273">&#13;</A><A NAME="idxnlp0274">&#13;</A><A NAME="idxnlp0275">&#13;</A><A NAME="idxnlp0276">&#13;</A>specifies the update
method for the (dual) quasi-Newton, double dogleg, hybrid
quasi-Newton, or conjugate-gradient optimization technique.
Not every update method can be used with each optimizer.
For more information, see the section <A HREF="sect27.htm#nlpoa">&#34;Optimization Algorithms&#34;</A>.
Valid values for <SPAN CLASS="mathfont"><I>m</I></SPAN> are as follows:
<BR><BR><DL COMPACT>
<DT>BFGS
<DD><A NAME="idxnlp0038">&#13;</A>performs the original BFGS<A NAME="idxnlp0039">&#13;</A>(Broyden, Fletcher,
Goldfarb, &#38; Shanno) update of the inverse Hessian matrix.
<DT>DBFGS
<DD><A NAME="idxnlp0040">&#13;</A>performs the dual BFGS
(Broyden, Fletcher, Goldfarb, &#38; Shanno) 
update of the Cholesky factor of the Hessian matrix.
<BR><BR><DT>DDFP
<DD><A NAME="idxnlp0041">&#13;</A>performs the dual DFP
(Davidon, Fletcher, &#38; Powell)
update of the Cholesky factor of the Hessian matrix.
<BR><BR><DT>DFP
<DD><A NAME="idxnlp0042">&#13;</A>performs the original DFP
(Davidon, Fletcher, &#38; Powell) 
update of the inverse Hessian matrix.
<BR><BR><DT>PB
<DD><A NAME="idxnlp0043">&#13;</A>performs the automatic restart
          update method of<A NAME="idxnlp0044">&#13;</A>Powell (1977)
          and Beale (1972).
<BR><BR><DT>FR
<DD><A NAME="idxnlp0045">&#13;</A>performs the
<A NAME="idxnlp0046">&#13;</A>Fletcher-Reeves update (Fletcher 1987).
<BR><BR><DT>PR
<DD><A NAME="idxnlp0047">&#13;</A>performs the Polak-Ribiere
          update<A NAME="idxnlp0048">&#13;</A>(Fletcher 1987).
<DT>CD
<DD><A NAME="idxnlp0049">&#13;</A>performs a<A NAME="idxnlp0050">&#13;</A>conjugate-descent update of <A NAME="idxnlp0051">&#13;</A>Fletcher (1987).
</DL><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfverdi">&#13;</A>VARDEF=DF,N</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0277">&#13;</A>specifies the divisor <SPAN CLASS="mathfont"><I>d</I></SPAN> used in the
calculation of the covariance matrix and approximate standard
errors.
If the SIGSQ= option is not specified, the default value is
VARDEF= DF; otherwise, VARDEF=N is default.
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfverss">&#13;</A>VERSION=1, 2, 3</B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">VS=1, 2, 3</B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0278">&#13;</A>zx
<A NAME="idxnlp0279">&#13;</A>specifies the version
of the hybrid quasi-Newton<A NAME="idxnlp0280">&#13;</A>optimization
technique or the version of the quasi-Newton optimization
technique with nonlinear constraints. <BR>For hybrid quasi-Newton optimization technique
   <DL>
<DT><STRONG>VS=1</STRONG>
<DD>specifies version HY1 of Fletcher &#38; Xu (1987)
<DT><STRONG>VS=2</STRONG>
<DD>specifies version HY2 of Fletcher &#38; Xu (1987)
   <DT><STRONG>VS=3</STRONG>
<DD>specifies version HY3 of Fletcher &#38; Xu (1987)
   </DL>
For quasi-Newton optimization technique with nonlinear
constraints,
   <DL>
<DT><STRONG>VS=1</STRONG>
<DD>specifies the update of the <IMG WIDTH="14" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq8.gif"
 ALT="\mu"> vector
like Powell (1978)<A NAME="idxnlp0052">&#13;</A>(update like VF02AD)
   <DT><STRONG>VS=2</STRONG>
<DD>specifies the update of the <IMG WIDTH="14" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/nlpeq8.gif"
 ALT="\mu"> vector
               like Powell (1982) (update like VMCWD)
   </DL>
In both cases, the default value is VS=2.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfsingvv">&#13;</A>VSINGULAR=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">VSING=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0281">&#13;</A><A NAME="idxnlp0282">&#13;</A><A NAME="idxnlp0283">&#13;</A><A NAME="idxnlp0284">&#13;</A>specifies a relative singularity
criterion<A NAME="idxnlp0285">&#13;</A>for measuring singularity 
of Hessian and crossproduct Jacobian and their projected
forms, which may have to be converted to compute the 
covariance matrix.  The default value for VSING is <SPAN CLASS="mathfont">1<I>e</I>-8</SPAN> if
the SINGULAR= option is not specified and the value of
SINGULAR otherwise.
For more information, see the section <A HREF="sect37.htm#nlpcm">&#34;Covariance Matrix&#34;</A>.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfconx">&#13;</A>XCONV=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DT CLASS="ssbten"><B CLASS="ssbten">XTOL=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>[<I>n</I>]</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0286">&#13;</A><A NAME="idxnlp0287">&#13;</A><A NAME="idxnlp0288">&#13;</A><A NAME="idxnlp0289">&#13;</A>specifies the relative
parameter convergence criterion. For all techniques except
NMSIMP, termination requires a small relative parameter change
in subsequent iterations,

<DL CLASS="equation"><DD><IMG WIDTH="247" HEIGHT="116"
 SRC="images/nlpeq48.gif"
 ALT="{\max_j | x_j^{(k)} - x_j^{(k-1)}| \over
 \max(| x_j^{(k)}|,| x_j^{(k-1)}|,{XSIZE})} \leq r "></DL>
For the NMSIMP technique, the same formula is used, but
<SPAN CLASS="mathfont"><I>x</I><SUB><I>j</I></SUB><SUP>(<I>k</I>)</SUP></SPAN> is defined as the vertex with the lowest function
value and <SPAN CLASS="mathfont"><I>x</I><SUB><I>j</I></SUB><SUP>(<I>k</I>-1)</SUP></SPAN> is defined as the vertex with the highest
function value in the simplex. The default value is <SPAN CLASS="mathfont"><I>r</I>=1<I>e</I>-8</SPAN> for
the NMSIMP technique and <SPAN CLASS="mathfont"><I>r</I>=0</SPAN> otherwise.
The optional integer value <SPAN CLASS="mathfont"><I>n</I></SPAN> specifies the number of successive
iterations for which the criterion must be satisfied before the
process can be terminated.
<BR><BR></DD><DT CLASS="ssbten"><B CLASS="ssbten"><A NAME="nlpfsizem">&#13;</A>XSIZE=<SPAN CLASS="ssiten"><I><SPAN CLASS="mathfont"><I>r</I>&#62;0</SPAN></I></SPAN></B></DT>
<DD CLASS="sasop"><A NAME="idxnlp0290">&#13;</A>specifies the XSIZE parameter of the relative
parameter termination criterion. The default value is <SPAN CLASS="mathfont"><I>r</I>=0</SPAN>.
For more detail, see the XCONV= option in the section <A HREF="sect6.htm#nlppns">&#34;PROC NLP Statement&#34;</A>.
<BR><BR></DD>
</DL><P>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect5.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect7.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="#topofpage">
  <IMG BORDER="0" SRC="../../common/images/top1.gif" ALT="Top" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Top</FONT></A></TD>
</TR>
</TABLE>
<P><!--End of Navigation Panel-->
<P><FONT SIZE="1"><A HREF="../../common/images/copyrite.htm">Copyright &copy; 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>
