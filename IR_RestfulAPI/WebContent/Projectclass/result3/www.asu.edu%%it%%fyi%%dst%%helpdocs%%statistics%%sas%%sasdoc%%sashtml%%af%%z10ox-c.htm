<HTML>
<!-- This page produced Tue Jul 20 10:24:46 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Combo Box Control : Using the Combo Box Control </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z1-doc.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z1over.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z2ttrs.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS/AF Software: Class Dictionary                                                                                         </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z10ox-c">Using the Combo Box Control</A></FONT></H1>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Key properties to set</FONT></B></TD></TR></TABLE>

<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD><B>allowNewItems attribute</B></TD>
<TD align="left">Specify whether or not users can add to the list
of items that appear in the combo box at run-time.
<P>You can also query or set this attribute using SCL. For example, the
following line of code enables users to add to the combo box list at run-time:



<PRE>combobox1.allowNewItems='Yes';</PRE></TD></TR>

<TR align=left valign="top">
<TD><B>selectedItem attribute</B> (default attribute)</TD>
<TD align="left">Specify which of the list items you want selected
by default.
<P>You can also query this attribute to find out what the user has selected.
For example, the following line of SCL code queries the item that is currently
selected:
<P>
<PRE>choice = combobox1.selectedItem;</PRE>
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;The following line of code is also valid since the selectedItem attribute
is the default attribute:



<PRE>choice = combobox1;</PRE>&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR> </TD></TR>
</TABLE>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Setting combo box items</FONT></B></TD></TR></TABLE>

<P>You can set the items that appear in a combo box in these ways:
<P>
<P>
<UL>

<LI>You can set the items
attribute in the Properties window. When
you click the value cell for the items attribute, the Items window appears
where you can enter each of the items you want.<P>

<LI>You can populate the combo box with items from a list model by
setting the value of the model attribute in the Properties window to the name
of the list model.<P>

<LI>You can also populate the combo box with items from a list model
by dragging the model from the Components window onto the combo box in the
frame.<P>

<LI>Finally, you can specify the values of the items in the combo
box at run time. <P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Build-time attributes</FONT></B></TD></TR></TABLE>

<P>The following attribute is a <B>build-time attribute</B>, meaning
it can only be set at build-time if you choose to use it:
<UL>

<LI>comboboxStyle<P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Using SCL to specify combo box items</FONT></B></TD></TR></TABLE>

<P>You can specify combo box items using an SCL program.
<P>For example, the following code creates a list and
assigns the list
to a combo box:
<PRE>petList = makelist(); 
rc = insertc(petList, 'Dog', -1); 
rc = insertc(petList, 'Cat', -1); 
rc = insertc(petList, 'Bird', -1); 
combobox1.items = petList;</PRE>
<P>You could just as easily fill a combo box with a list of items that
already exists in a model that you have instantiated. The following code assigns
color list model items to a combo box:
<PRE>combobox1.items = colorlist1.items;</PRE>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z1-doc.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z1over.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z2ttrs.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z10ox-c">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>