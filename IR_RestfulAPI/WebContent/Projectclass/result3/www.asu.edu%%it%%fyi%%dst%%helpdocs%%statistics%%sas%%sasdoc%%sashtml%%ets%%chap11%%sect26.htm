<HTML>
<HEAD>
<TITLE>Transformation Operations</TITLE>
<LINK REL="STYLESHEET" TYPE="text/css" HREF="../sas.css">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A NAME="topofpage" HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect25.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect27.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
</TR>
</TABLE>
<TABLE BGCOLOR="#CCCC99" WIDTH="100%" CELLPADDING=4>
<TR>
  <TD VALIGN=MIDDLE CLASS="chaphead"><I><FONT SIZE="2">The EXPAND Procedure</FONT></I></TD>
</TR>
</TABLE><BR>
<P><!--End of Navigation Panel-->
<H2>Transformation Operations  </H2>
<P><A NAME="idxexp0113">&#13;</A><A NAME="idxexp0112">&#13;</A><A NAME="idxexp0115">&#13;</A><A NAME="idxexp0114">&#13;</A><A NAME="idxexp0116">&#13;</A><A NAME="idxexp0117">&#13;</A><A NAME="idxexp0118">&#13;</A><A NAME="idxexp0119">&#13;</A>The operations that can be used in the TRANSFORMIN= and TRANSFORMOUT= options
are shown in <A HREF="sect26.htm#exptops">Table 11.1</A>.
Operations are applied to each value of the series.
Each value of the series is replaced by the result of the operation.
<P>In <A HREF="sect26.htm#exptops">Table 11.1</A>, <SPAN CLASS="mathfont"><I>x</I><SUB><I>t</I></SUB></SPAN> or <I>x</I> represents the value of the series
at a particular time period <I>t</I> before the transformation is applied,
<SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB></SPAN> represents the value of the result series,
and N represents the total number of observations.
<P>The notation [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>] indicates that the argument <I>n</I> is optional;
the default is 1.
The notation <I>window</I> is used as the argument
for the moving statistics operators, and it 
indicates that you can specify
either an integer number of periods <I>n</I> or a
list of <I>n</I> weights in parentheses.
The notation <I>s</I> indicates the length of seasonality, and it is a required
argument.
<P></P><A NAME="exptops"><SPAN CLASS="ssften"><B>Table 11.1:</B> Transformation Operations</SPAN></A><TABLE COLS=2 FRAME=BOX RULES=GROUPS CELLPADDING=5 CELLSPACING=0 BGCOLOR="#F0F0F0" BORDER=1><COLGROUP><COL ALIGN=JUSTIFY><COLGROUP><COL ALIGN=JUSTIFY>
<TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#BBBBBB" ><B>
                      <FONT COLOR="#003399" FACE="Verdana, Helvetica, Helv"><SPAN CLASS="ssbeleven"><B>Syntax</B></SPAN></FONT></B>
                      </TD>
                     <TD BGCOLOR="#BBBBBB" ><B>
                      <FONT COLOR="#003399" FACE="Verdana, Helvetica, Helv"><SPAN CLASS="ssbeleven"><B>Result</B></SPAN></FONT></B>
                      </TD>
                     </TR><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">+ <I>number</I></TD><TD BGCOLOR="#DDDDDD">adds the specified <I>number</I>: <SPAN CLASS="mathfont"><I>x</I>+<I>number</I></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">- <I>number</I></TD><TD BGCOLOR="#DDDDDD">subtracts the specified <I>number</I>: <SPAN CLASS="mathfont"><I>x</I>-<I>number</I></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">* <I>number</I></TD><TD BGCOLOR="#DDDDDD">multiplies by the specified <I>number</I>: <SPAN CLASS="mathfont"><I>x</I>*<I>number</I></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#38; <I>number</I></TD><TD BGCOLOR="#DDDDDD">divides by the specified <I>number</I>: <SPAN CLASS="mathfont"><I>x</I> &#38; <I>number</I></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">ABS</TD><TD BGCOLOR="#DDDDDD">absolute value: <SPAN CLASS="mathfont">|<I>x</I>|</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">[]
CD_I <I>s</I></TD><TD BGCOLOR="#DDDDDD">classical decomposition irregular component</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CD_S <I>s</I></TD><TD BGCOLOR="#DDDDDD">classical decomposition seasonal component</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CD_SA <I>s</I></TD><TD BGCOLOR="#DDDDDD">classical decomposition seasonally adjusted series</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CD_TC <I>s</I></TD><TD BGCOLOR="#DDDDDD">classical decomposition trend-cycle component</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CDA_I <I>s</I></TD><TD BGCOLOR="#DDDDDD">classical decomposition (additive) irregular component</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CDA_S <I>s</I></TD><TD BGCOLOR="#DDDDDD">classical decomposition (additive) seasonal component</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CDA_SA <I>s</I></TD><TD BGCOLOR="#DDDDDD">classical decomposition (additive) seasonally adjusted series</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CEIL</TD><TD BGCOLOR="#DDDDDD">smallest integer greater than or equal to <I>x</I>: <SPAN CLASS="mathfont">ceil(x)</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVAVE <I>window</I></TD><TD BGCOLOR="#DDDDDD">centered moving average</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVCSS <I>window</I></TD><TD BGCOLOR="#DDDDDD">centered moving corrected sum of squares</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVMAX <I>n</I></TD><TD BGCOLOR="#DDDDDD">centered moving maximum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVMED <I>n</I></TD><TD BGCOLOR="#DDDDDD">centered moving median</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVMIN <I>n</I></TD><TD BGCOLOR="#DDDDDD">centered moving minimum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVRANGE <I>n</I></TD><TD BGCOLOR="#DDDDDD">centered moving range</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVSTD <I>window</I></TD><TD BGCOLOR="#DDDDDD">centered moving standard deviation</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVSUM <I>n</I></TD><TD BGCOLOR="#DDDDDD">centered moving sum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVUSS <I>window</I></TD><TD BGCOLOR="#DDDDDD">centered moving uncorrected sum of squares</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CMOVVAR <I>window</I></TD><TD BGCOLOR="#DDDDDD">centered moving variance</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUAVE [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative average</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUCSS [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative corrected sum of squares</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUMAX [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative maximum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUMED [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative median</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUMIN [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative minimum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CURANGE [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative range</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUSTD [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative standard deviation</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUSUM [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">moving sum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUUSS [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative uncorrected sum of squares</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">CUVAR [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">cumulative variance</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">DIF [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">lag <I>n</I> difference: <SPAN CLASS="mathfont"><I>x</I><SUB><I>t</I></SUB>-<I>x</I><SUB><I>t</I>-<I>n</I></SUB></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">EWMA <I>number</I></TD><TD BGCOLOR="#DDDDDD">exponentially weighted moving average of <SPAN CLASS="mathfont"><I>x</I></SPAN> with</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD">smoothing weight <I>number</I>, where <SPAN CLASS="mathfont">0 &#60; <I>number</I> &#60; 1</SPAN>:</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD"><SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB> = <I>number</I>&#160;&#160; <I>x</I><SUB><I>t</I></SUB> + (1-<I>number</I>) <I>y</I><SUB><I>t</I>-1</SUB></SPAN>.</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD">This operation is also called simple exponential smoothing.</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">EXP</TD><TD BGCOLOR="#DDDDDD">exponential function: <SPAN CLASS="mathfont">exp(<I>x</I>)</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">FLOOR</TD><TD BGCOLOR="#DDDDDD">largest integer less than or equal to <I>x</I>:
<SPAN CLASS="mathfont">floor(x)</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">ILOGIT</TD><TD BGCOLOR="#DDDDDD">inverse logistic function: <SPAN CLASS="mathfont">[exp(<I>x</I>)/(1+exp(<I>x</I>))]</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">LAG [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">value of the series <I>n</I> periods
earlier: <SPAN CLASS="mathfont"><I>x</I><SUB><I>t</I>-<I>n</I></SUB></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">LEAD [<SPAN CLASS="ssbeleven"><B><I>n</I></B></SPAN>]</TD><TD BGCOLOR="#DDDDDD">value of the series <I>n</I> periods later:
<SPAN CLASS="mathfont"><I>x</I><SUB><I>t</I>+<I>n</I></SUB></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">LOG</TD><TD BGCOLOR="#DDDDDD">natural logarithm: <SPAN CLASS="mathfont">log(<I>x</I>)</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">LOGIT</TD><TD BGCOLOR="#DDDDDD">logistic function: <SPAN CLASS="mathfont">log([<I>x</I>/(1-<I>x</I>)])</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MAX <I>number</I></TD><TD BGCOLOR="#DDDDDD">maximum of <I>x</I> and <I>number</I>: <SPAN CLASS="mathfont">max(<I>x</I>,<I>number</I>)</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MIN <I>number</I></TD><TD BGCOLOR="#DDDDDD">minimum of <I>x</I> and <I>number</I>: <SPAN CLASS="mathfont">min(<I>x</I>,<I>number</I>)</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#62; <I>number</I></TD><TD BGCOLOR="#DDDDDD">missing value if <SPAN CLASS="mathfont"><I>x</I> &#60;= <I>number</I></SPAN>, else <I>x</I></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#62;= <I>number</I></TD><TD BGCOLOR="#DDDDDD">missing value if <SPAN CLASS="mathfont"><I>x</I> &#60; <I>number</I></SPAN>, else <I>x</I></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">= <I>number</I></TD><TD BGCOLOR="#DDDDDD">missing value if <IMG WIDTH="99" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq3.gif"
 ALT="{x {\ne} number}">, else <I>x</I></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD"><IMG WIDTH="16" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="images/expeq4.gif"
 ALT="\wedge">= <I>number</I></TD><TD BGCOLOR="#DDDDDD">missing value if <SPAN CLASS="mathfont"><I>x</I> = <I>number</I></SPAN>, else <I>x</I></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#60; <I>number</I></TD><TD BGCOLOR="#DDDDDD">missing value if <SPAN CLASS="mathfont"><I>x</I> &#62;= <I>number</I></SPAN>, else <I>x</I></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#60;= <I>number</I></TD><TD BGCOLOR="#DDDDDD">missing value if <SPAN CLASS="mathfont"><I>x</I> &#62; <I>number</I></SPAN>, else <I>x</I></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVAVE <I>n</I></TD><TD BGCOLOR="#DDDDDD">moving average of <I>n</I> neighboring values:</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD"><IMG WIDTH="102" HEIGHT="40" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq5.gif"
 ALT="{\frac{1}n \sum_{j=0}^{n-1}{x_{t-j}}}"></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVAVE(<SPAN CLASS="mathfont"><I>w<SUb>1</SUb></I> ... <I>w</I><sub><I>n</I></sub></SPAN>)</TD><TD BGCOLOR="#DDDDDD">weighted moving average of
neighboring values:</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD"><IMG WIDTH="228" HEIGHT="34" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq6.gif"
 ALT="{{(\sum_{j=1}^n{w_{j}x_{t-j+1})}}/{(\sum_{j=1}^n{w_{j}})}}"></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVAVE <I>window</I></TD><TD BGCOLOR="#DDDDDD">backward moving average</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVCSS <I>window</I></TD><TD BGCOLOR="#DDDDDD">backward moving corrected sum of squares</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVMAX <I>n</I></TD><TD BGCOLOR="#DDDDDD">backward moving maximum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVMED <I>n</I></TD><TD BGCOLOR="#DDDDDD">backward moving median</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVMIN <I>n</I></TD><TD BGCOLOR="#DDDDDD">backward moving minimum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVRANGE <I>n</I></TD><TD BGCOLOR="#DDDDDD">backward moving range</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVSTD <I>window</I></TD><TD BGCOLOR="#DDDDDD">backward moving standard deviation</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVSUM <I>n</I></TD><TD BGCOLOR="#DDDDDD">backward moving sum</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVUSS <I>window</I></TD><TD BGCOLOR="#DDDDDD">backward moving uncorrected sum of squares</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MOVVAR <I>window</I></TD><TD BGCOLOR="#DDDDDD">backward moving variance</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">MISSONLY &#60;MEAN&#62;</TD><TD BGCOLOR="#DDDDDD">indicates that the following moving time window</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD">statistic operator should replace only missing values with the</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD">moving statistic and should leave nonmissing values unchanged.</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD">If the option MEAN is specified, then missing values are</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD">replaced by the overall mean of the series.</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">NEG</TD><TD BGCOLOR="#DDDDDD">changes the sign: <SPAN CLASS="mathfont">-<I>x</I></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">NOMISS</TD><TD BGCOLOR="#DDDDDD">indicates that the following moving time window</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD">statistic operator should not allow missing values.</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">RECIPROCAL</TD><TD BGCOLOR="#DDDDDD">reciprocal: <SPAN CLASS="mathfont">1/<I>x</I></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">REVERSE</TD><TD BGCOLOR="#DDDDDD">reverse the series: <IMG WIDTH="41" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq7.gif"
 ALT="{x_{_{N-t}}}"></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">SETMISS <I>number</I></TD><TD BGCOLOR="#DDDDDD">replaces missing values in the series with the number specified.</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">SIGN</TD><TD BGCOLOR="#DDDDDD">-1, 0, or 1 as <I>x</I> is &#60; 0, equals 0, or &#62; 0 respectively</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">SQRT</TD><TD BGCOLOR="#DDDDDD">square root: <IMG WIDTH="29" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq8.gif"
 ALT="{\sqrt{x}}"></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">SQUARE</TD><TD BGCOLOR="#DDDDDD">square: <SPAN CLASS="mathfont"><I>x<SUP>2</SUP></I></SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">SUM</TD><TD BGCOLOR="#DDDDDD">cumulative sum: <IMG WIDTH="69" HEIGHT="39" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq9.gif"
 ALT="{\sum_{j=1}^t{x_{j}}}"></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">SUM <I>n</I></TD><TD BGCOLOR="#DDDDDD">cumulative sum of <I>n</I>-period lags:</TD></TR>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">&#160;</TD><TD BGCOLOR="#DDDDDD"><SPAN CLASS="mathfont"><I>x</I><sub><I>t</I></sub>+<I>x</I><sub><I>t</I>-<I>n</I></sub>+<I>x</I><sub><I>t</I>-2<I>n</I></sub>+ ...</SPAN></TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">TRIM <I>n</I></TD><TD BGCOLOR="#DDDDDD">sets <SPAN CLASS="mathfont"><I>x</I><SUB><I>t</I></SUB></SPAN> to missing a value if <IMG WIDTH="35" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq10.gif"
 ALT="{t {\le} n}"> or <IMG WIDTH="105" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq11.gif"
 ALT="{t {\ge} N-n+1}">.</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">TRIMLEFT <I>n</I></TD><TD BGCOLOR="#DDDDDD">sets <SPAN CLASS="mathfont"><I>x</I><SUB><I>t</I></SUB></SPAN> to missing a value if <IMG WIDTH="35" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq10.gif"
 ALT="{t {\le} n}">.</TD></TR></TBODY><TBODY>
<TR VALIGN="TOP"><TD BGCOLOR="#DDDDDD">TRIMRIGHT <I>n</I></TD><TD BGCOLOR="#DDDDDD">sets <SPAN CLASS="mathfont"><I>x</I><SUB><I>t</I></SUB></SPAN> to missing a value if <IMG WIDTH="105" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq11.gif"
 ALT="{t {\ge} N-n+1}">.</TD></TR></TBODY>
</TABLE>
<P><H3><I>Moving Time Window Operators</I></H3>
<A NAME="idxexp0120">&#13;</A>Some operators compute statistics for a set of values within a
moving time window; these are called  <I>moving time window operators</I>.
There are backward and centered versions of these operators.
<P><A NAME="idxexp0121">&#13;</A>The centered moving time window operators are
CMOVAVE, CMOVCSS, CMOVMAX, CMOVMED, CMOVMIN, CMOVRANGE,
CMOVSTD, CMOVSUM, CMOVUSS, and CMOVVAR.
These operators compute statistics of the <SPAN CLASS="mathfont"><I>n</I></SPAN> values
<SPAN CLASS="mathfont"><I>x</I><SUB><I>i</I></SUB>&#160;</SPAN> for observations <IMG WIDTH="285" HEIGHT="33" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq12.gif"
 ALT="{t-(n-1)/2  {\le}  i  {\le}  t+(n-1)/2}">.<P>The backward moving time window operators are
MOVAVE, MOVCSS, MOVMAX, MOVMED, MOVMIN, MOVRANGE,
MOVSTD, MOVSUM, MOVUSS, and MOVVAR.
These operators compute statistics of the <SPAN CLASS="mathfont"><I>n</I></SPAN> values
<SPAN CLASS="mathfont"><I>x</I><sub><I>t</I></sub>, <I>x</I><sub><I>t</I>-1</sub>,  ... , <I>x</I><sub><I>t</I>-<I>n</I>+1</sub></SPAN>.
<P>All the moving time window operators accept an argument <SPAN CLASS="mathfont"><I>n</I></SPAN>
specifying the number of periods to include in the time window.
For example, the following statement computes
a five-period backward moving average of X.
<P><PRE>
      convert x=y / transformout=( movave 5 );
</PRE>
<P>In this example, the final result is
<SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB> = (<I>x</I><SUB><I>t</I></SUB> + <I>x</I><SUB><I>t</I>-1</SUB> + <I>x</I><SUB><I>t</I>-2</SUB> + <I>x</I><SUB><I>t</I>-3</SUB> + <I>x</I><SUB><I>t</I>-4</SUB>) / 5</SPAN>.
<P>The following statement computes
a five-period centered moving average of X.
<P><PRE>
      convert x=y / transformout=( cmovave 5 );
</PRE>
<P>In this example, the final result is
<SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB> = (<I>x</I><SUB><I>t</I>-2</SUB> + <I>x</I><SUB><I>t</I>-1</SUB> + <I>x</I><SUB><I>t</I></SUB> + <I>x</I><SUB><I>t</I>+1</SUB> + <I>x</I><SUB><I>t</I>+2</SUB>/5</SPAN>.
<P><A NAME="idxexp0122">&#13;</A>If the window with a centered moving time window operator is not an
odd number, one more lagged value than lead value is included in the
time window.
For example, the result of the CMOVAVE 4 operator is
<SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB> = (<I>x</I><SUB><I>t</I>-2</SUB> + <I>x</I><SUB><I>t</I>-1</SUB> + <I>x</I><SUB><I>t</I></SUB> + <I>x</I><SUB><I>t</I>+1</SUB>)/4</SPAN>.
<P>You can compute a forward moving time window operation by
combining a backward moving time window operator with the
REVERSE operator.
For example, the following statement computes
a five-period forward moving average of X.
<P><PRE>
      convert x=y / transformout=( reverse movave 5 reverse );
</PRE>
<P>In this example, the final result is
<SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB> = (<I>x</I><SUB><I>t</I></SUB> + <I>x</I><SUB><I>t</I>+1</SUB> + <I>x</I><SUB><I>t</I>+2</SUB> + <I>x</I><SUB><I>t</I>+3</SUB> + <I>x</I><SUB><I>t</I>+4</SUB>)/5</SPAN>.
<P>Some of the moving time window operators enable you to specify a list of
weight values to compute weighted statistics.
These are CMOVAVE, CMOVCSS, CMOVSTD, CMOVUSS, CMOVVAR,
MOVAVE, MOVCSS, MOVSTD, MOVUSS, and MOVVAR.
<P>To specify a weighted moving time window operator,
enter the weight values in parentheses after the operator name.
The window width <SPAN CLASS="mathfont"><I>n</I></SPAN> is equal to the number of weights that you specify;
do not specify <SPAN CLASS="mathfont"><I>n</I></SPAN>.
<P>For example, the following statement computes
a weighted five-period centered moving average of X.
<P><PRE>
      convert x=y / transformout=( cmovave( .1 .2 .4 .2 .1 ) );
</PRE>
<P>In this example, the final result is
<SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB> = .1 <I>x</I><SUB><I>t</I>-2</SUB> + .2 <I>x</I><SUB><I>t</I>-1</SUB> + .4 <I>x</I><SUB><I>t</I></SUB> + .2 <I>x</I><SUB><I>t</I>+1</SUB> + .1 <I>x</I><SUB><I>t</I>+2</SUB></SPAN>.
<P>The weight values must be greater than zero.
If the weights do not sum to 1,
the weights specified are divided by their sum to produce the weights
used to compute the statistic.
<P><A NAME="idxexp0123">&#13;</A>At the beginning of the series, and at the end
of the series for the centered operators, a complete time window
is not available.
The computation of the moving time window operators is adjusted
for these boundary conditions as follows.
<P>For backward moving window operators,
the width of the time window is shortened at the beginning of the series.
For example, the results of the MOVSUM 3 operator are
<P><DL CLASS="equation"><DD><IMG WIDTH="168" HEIGHT="255"
 SRC="images/expeq13.gif"
 ALT="y_{1} &=& x_{1} \y_{2} &=& x_{1} + x_{2} \y_{3} &=& x_{1} + x_{2} + x_{3} \y_{4} &=& x_{2} + x_{3} + x_{4} \y_{5} &=& x_{3} + x_{4} + x_{5} \& ... & \"></DL>
<P><A NAME="idxexp0124">&#13;</A>For centered moving window operators,
the width of the time window is shortened at both
the beginning and the end of the series.
When an observation is unavailable at one side of the moving time window,
the corresponding observation at the other side of the window is ignored.
For example, the results of the CMOVSUM 5 operator are
<P><DL CLASS="equation"><DD><IMG WIDTH="353" HEIGHT="310"
 SRC="images/expeq14.gif"
 ALT="y_{1} &=& x_{1} \y_{2} &=& x_{1} + x_{2} + x_{3} \y_{3} &=& x_{1} + x_{2} + x_{3...
 ...{N}} \y_{_{N-1}} &=& x_{_{N-2}} + x_{_{N-1}} + x_{_{N}} \y_{_{N}} &=& x_{_{N}} \"></DL>
<P>For weighted moving time window operators,
the weights for the unavailable or unused observations
are ignored and the remaining weights renormalized to sum to 1.
<P><H3><I>Cumulative Statistics Operators</I></H3>
<A NAME="idxexp0125">&#13;</A>Some operators compute cumulative statistics
for a set of current and previous values of the series.
The cumulative statistics operators are
CUAVE, CUCSS, CUMAX, CUMED, CUMIN, CURANGE,
CUSTD, CUSUM, CUUSS, and CUVAR.
These operators compute statistics of the values
<SPAN CLASS="mathfont"><I>x</I><sub><I>t</I></sub>, <I>x</I><sub><I>t</I>-<I>n</I></sub>, <I>x</I><sub><I>t</I>-2<I>n</I></sub>,  ... , <I>x</I><sub><I>t</I>-<I>in</I></sub></SPAN> for <SPAN CLASS="mathfont"><I>t</I>-<I>in</I> &#62; 0</SPAN>.
<P>By default, the cumulative statistics operators compute the
statistics from all previous values of the series,
so that <SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB></SPAN> is based on the set of values
<SPAN CLASS="mathfont"><I>x<SUb>1</SUb></I>, <I>x<SUb>2</SUb></I>,  ... , <I>x</I><sub><I>t</I></sub></SPAN>.
For example, the following statement computes <SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB></SPAN> as
the cumulative sum of nonmissing <SPAN CLASS="mathfont"><I>x</I><SUB><I>i</I></SUB></SPAN> values for <IMG WIDTH="30" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq15.gif"
 ALT="{i {\le} t}">.<PRE>
      convert x=y / transformout=( cusum );
</PRE>
<P>You can also specify a lag increment argument <SPAN CLASS="mathfont"><I>n</I></SPAN> for the
cumulative statistics operators.
In this case, the statistic is computed from the current and
every <SPAN CLASS="mathfont"><I>n</I><SUP><I>th</I></SUP></SPAN> previous value.
For example, the following statement computes <SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB></SPAN> as
the cumulative sum of nonmissing <SPAN CLASS="mathfont"><I>x</I><SUB><I>i</I></SUB></SPAN> values for
odd <SPAN CLASS="mathfont"><I>i</I></SPAN> when <SPAN CLASS="mathfont"><I>t</I></SPAN> is odd and for even <SPAN CLASS="mathfont"><I>i</I></SPAN> when <SPAN CLASS="mathfont"><I>t</I></SPAN> is even.
<PRE>
      convert x=y / transformout=( cusum 2 );
</PRE>
<P>The results of this example are
<P><DL CLASS="equation"><DD><IMG WIDTH="167" HEIGHT="283"
 SRC="images/expeq16.gif"
 ALT="y_{1} &=& x_{1} \y_{2} &=& x_{2} \y_{3} &=& x_{1} + x_{3} \y_{4} &=& x_{2} + x_{4} \y_{5} &=& x_{1} + x_{3} + x_{5} \y_{6} &=& x_{2} + x_{4} + x_{6} \& ...  & \"></DL>
<P><H3><I><A NAME="expmisval">Missing Values</A></I></H3>
<A NAME="idxexp0126">&#13;</A><A NAME="idxexp0127">&#13;</A><A NAME="idxexp0128">&#13;</A><A NAME="idxexp0129">&#13;</A>You can truncate the length of the result series by using 
the TRIM, TRIMLEFT, and TRIMRIGHT operators to set 
values to missing at the beginning or end of the series.
<P>You can use these functions to trim the results of moving time window operators
so that the result series contains only values computed from a full width
time window.
For example, the following statements compute a
centered five-period moving average of X,
and they set to missing values at the ends of the series
that are averages of fewer than five values.
<PRE>
      convert x=y / transformout=( movave 5 trim 2 );
</PRE>
<P>Normally, the moving time window and cumulative statistics operators
ignore missing values and compute their results for the nonmissing values.
When preceded by the NOMISS operator, these functions produce a missing result
if any value within the time window is missing.
<A NAME="idxexp0130">&#13;</A>The NOMISS operator does not perform any calculations,
but serves to modify the operation of the moving time window
operator that follows it.
The NOMISS operator has no effect unless it is followed by 
a moving time window operator.
<P>For example, the following statement computes a five-period moving average of
the variable X but produces a missing value when any of the five values are
missing.
<PRE>
      convert x=y / transformout=( nomiss movave 5 );
</PRE>
<P>The following statement computes the cumulative sum of
the variable X but produces a missing value for all periods after
the first missing X value.
<PRE>
      convert x=y / transformout=( nomiss cusum );
</PRE>
<P><A NAME="idxexp0131">&#13;</A>Similar to the NOMISS operator, the MISSONLY operator does not perform
any calculations (unless followed by the MEAN option), but it serves to
modify the operation of the moving time window operator that follows it.
When preceded by the MISSONLY operator, these moving time window 
operators replace any missing values
with the moving statistic and leave nonmissing values unchanged.
<P>For example, the following statement replaces any missing values
of the variable X with an exponentially weighted
moving average of the past values of X and
leaves nonmissing values unchanged. The missing values
are then interpolated using an exponentially weighted moving average
or simple exponential smoothing.
<PRE>
      convert x=y / transformout=( missonly ewma 0.3 );
</PRE>
<P>For example, the following statement replaces any missing values
of the variable X with the overall mean of X.
<PRE>
      convert x=y / transformout=( missonly mean );
</PRE>
<P><A NAME="idxexp0132">&#13;</A>You can use the SETMISS operator to replace missing values with a
specified number. For example, the following statement replaces
any missing values of the variable X with the number 8.77.
<PRE>
      convert x=y / transformout=( setmiss 8.77 );
</PRE>
<P><H3><I>Classical Decomposition Operators</I></H3>
<A NAME="idxexp0133">&#13;</A>If <SPAN CLASS="mathfont"><I>y</I><SUB><I>t</I></SUB></SPAN> is a seasonal time series with <SPAN CLASS="mathfont"><I>s</I></SPAN>
observations per season, <I>classical decomposition</I> methods
&#34;break down&#34; a time series into four components: trend, cycle,
seasonal, and irregular components. The trend and cycle components
are often combined to form the trend-cycle component.
There are two forms of decomposition: multiplicative and additive.
<P><DL CLASS="equation"><DD><IMG WIDTH="168" HEIGHT="145"
 SRC="images/expeq17.gif"
 ALT="y_{t} &=& TC_{t}S_{t}I_{t} \y_{t} &=& TC_{t} + S_{t} + I_{t} \"></DL>
where
<P><DL>
<DT><SPAN CLASS="mathfont"><I>TC</I><SUB><I>t</I></SUB></SPAN>
<DD>is the trend-cycle component.
<BR><BR><DT><SPAN CLASS="mathfont"><I>S</I><SUB><I>t</I></SUB> </SPAN>
<DD>is the seasonal component or seasonal factors
that are periodic with period $s$ and with mean
one (multiplicative) or zero (additive).
<BR><BR><DT><SPAN CLASS="mathfont"><I>I</I><SUB><I>t</I></SUB> </SPAN>
<DD>is the irregular or random component that is assumed to have mean
one (multiplicative) or zero (additive).
</DL><BR>The CD_TC operator computes the trend-cycle component for
both the multiplicative and additive models.
When <SPAN CLASS="mathfont"><I>s</I></SPAN> is odd, this operator computes an
<SPAN CLASS="mathfont"><I>s</I></SPAN>-period centered moving average as follows:

<DL CLASS="equation"><DD><IMG WIDTH="171" HEIGHT="120"
 SRC="images/expeq18.gif"
 ALT="TC_{t}
= \sum_{k=-{\lfloor s/2 \rfloor}}^{{\lfloor s/2 \rfloor}}{y_{t+k}/s}"></DL><BR>In the case <SPAN CLASS="mathfont"><I>s</I>=5</SPAN>, the CD_TC <I>s</I> operator is equivalent to
the following CMOVAVE operator:
<PRE>
      convert x=tc / transformout=( cmovave 5 trim 2 );
</PRE>
<BR><BR>When <SPAN CLASS="mathfont"><I>s</I></SPAN> is even, the CD_TC <I>s</I> operator computes the average of
two adjacent <SPAN CLASS="mathfont"><I>s</I></SPAN>-period centered moving averages as follows:

<DL CLASS="equation"><DD><IMG WIDTH="268" HEIGHT="120"
 SRC="images/expeq19.gif"
 ALT="TC_{t}
= \sum_{k = -{\lfloor s/2 \rfloor}}^{{\lfloor s/2 \rfloor}-1}{(y_{t+k}+y_{t+1+k})/2s}"></DL><BR>In the case <SPAN CLASS="mathfont"><I>s</I>=12</SPAN>, the CD_TC <I>s</I> operator is equivalent to
the following CMOVAVE operator:
<PRE>
      convert x=tc / transformout=(cmovave 12 movave 2 trim 6);
</PRE>
<BR><BR>The CD_S and CDA_S operators compute the seasonal components for the
multiplicative and additive models, respectively.
First, the trend-cycle component is computed as shown previously.
Second, the seasonal-irregular component is computed by
<SPAN CLASS="mathfont"><I>SI</I><SUB><I>t</I></SUB> = <I>y</I><SUB><I>t</I></SUB>/<I>TC</I><SUB><I>t</I></SUB> </SPAN> for the multiplicative model and by 
<SPAN CLASS="mathfont"><I>SI</I><SUB><I>t</I></SUB> = <I>y</I><SUB><I>t</I></SUB>-<I>TC</I><SUB><I>t</I></SUB> </SPAN> for the additive model.
The seasonal component is obtained by averaging
the seasonal-irregular component for each season.

<DL CLASS="equation"><DD><IMG WIDTH="166" HEIGHT="104"
 SRC="images/expeq20.gif"
 ALT="S_{k+js} = \sum_{t = k \bmod s}{SI_t \over n/s}"></DL>
where <IMG WIDTH="78" HEIGHT="33" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq21.gif"
 ALT="{0 {\le} j {\le} n/s }"> and <IMG WIDTH="59" HEIGHT="31" ALIGN="MIDDLE" BORDER="0"
 SRC="images/expeq22.gif"
 ALT="{1 {\le} k {\le} s }">.The seasonal components are normalized to sum to
one (multiplicative) or zero (additive).
<BR><BR>The CD_I and CDA_I operators compute the irregular component for the
multiplicative and additive models respectively. First, the seasonal
component is computed as shown previously.  Next, the irregular component is
determined from the seasonal-irregular and
seasonal components as appropriate.
<BR><BR><DL CLASS="equation"><DD><IMG WIDTH="125" HEIGHT="145"
 SRC="images/expeq23.gif"
 ALT="I_{t} &=& SI_{t}/S_{t} \I_{t} &=& SI_{t}-S_{t} \"></DL><BR>The CD_SA and CDA_SA operators compute the seasonally adjusted
time series for the multiplicative and additive models, respectively.
After decomposition, the original time series
can be seasonally adjusted as appropriate.
<BR><BR><DL CLASS="equation"><DD><IMG WIDTH="207" HEIGHT="145"
 SRC="images/expeq24.gif"
 ALT="\tilde y_{t} &=& y_{t}/S_{t} = TC_{t}I_{t} \\tilde y_{t} &=& y_{t} - S_{t} = TC_{t} + I_{t} \"></DL>
<P>The following statements compute all the multiplicative
classical decomposition components for the variable X for <SPAN CLASS="mathfont"><I>s</I></SPAN>=12.
<PRE>
      convert x=tc / transformout=( cd_tc 12 );
      convert x=s  / transformout=( cd_s  12 );
      convert x=i  / transformout=( cd_i  12 );
      convert x=sa / transformout=( cd_sa 12 );
</PRE>
<P>The following statements compute all the additive
classical decomposition components for the variable X for <SPAN CLASS="mathfont"><I>s</I></SPAN>=4.
<PRE>
      convert x=tc / transformout=( cd_tc  4 );
      convert x=s  / transformout=( cda_s  4 );
      convert x=i  / transformout=( cda_i  4 );
      convert x=sa / transformout=( cda_sa 4 );
</PRE>
<P>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect25.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect27.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="#topofpage">
  <IMG BORDER="0" SRC="../../common/images/top1.gif" ALT="Top" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Top</FONT></A></TD>
</TR>
</TABLE>
<P><!--End of Navigation Panel-->
<P><FONT SIZE="1"><A HREF="../../common/images/copyrite.htm">Copyright &copy; 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>
