<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE> Informats : Using Informats </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0309877.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z1258737.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z1258728.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS Language Reference: Dictionary                                                                                        </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z1258738">Using Informats</A></FONT></H1>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Ways to Specify Informats</FONT></B></TD></TR></TABLE>

<P>You
can specify informats in the following ways:
<P>
<UL>

<LI>in an INPUT statement<P>

<LI>with the INPUT, INPUTC, and INPUTN functions<P>

<LI>in an
INFORMAT statement in a DATA step or a PROC step<P>

<LI>in an ATTRIB statement in a DATA step or a PROC step.<P>
</UL>

<BR><H3>INPUT Statement</H3>


<P>The INPUT statement with an informat after a variable name is
the simplest way to read values into a variable. For example, the following
INPUT statement uses two informats:



<PRE>input @15 style $3. @21 price 5.2;</PRE>The $<I>w</I>.  character informat reads values
into the variable STYLE. The <I>w</I>.<I>d</I> numeric informat reads values into the variable PRICE.
<P>For a complete discussion of the INPUT
statement, see <A href="z0146292.htm">INPUT</A>. 
<BR><H3>INPUT Function</H3>


<P>The INPUT function reads a SAS character expression using a specified
informat. The informat determines whether the resulting value is numeric or
character. Thus, the INPUT function is useful for converting data. For example,



<PRE>TempCharacter='98.6';
TemperatureNumber=input(TempCharacter,4.);</PRE>Here, the INPUT function
in combination with the <I>w</I>.<I>d</I>
informat reads the character value of TempCharacter as a numeric value and
assigns the numeric value 98.6 to
TemperatureNumber.
<P>Use
the PUT function with a SAS format to convert numeric values to
character values.  See <A href="z0199354.htm">PUT</A>
for an example of a numeric-to-character conversion. For a complete discussion
of the INPUT function, see <A href="z0180357.htm">INPUT</A>.
<BR><H3>INFORMAT Statement</H3>


<P>The INFORMAT statement associates an informat with a variable.
SAS uses the informat in any subsequent INPUT statement to read values into
the variable.  For example, in the following statements the INFORMAT statement
associates the DATE<I>w.</I> informat with the variables
Birthdate and Interview:



<PRE>informat Birthdate Interview date9.;
input @63 Birthdate Interview;</PRE>
<P>An informat that is associated with an INFORMAT statement behaves like
an informat that you specify with a colon (:) format modifier in an INPUT
statement. (For details about using the colon (:) modifier, see the      
  
<A href="z0144370.htm">INPUT, List</A>.)
Therefore, SAS uses a modified list input to read the variable so that 
<P>
<UL>

<LI> the <I>w</I> value  in an informat does
not determine column positions or input field widths in an external file<P>

<LI>the blanks that are embedded in input data are treated as delimiters
unless you change the DELIMITER= option in an INFILE statement <P>

<LI>for character informats, the <I>w</I> value
in an informat specifies the length of character variables<P>

<LI>for numeric informats, the <I>w</I> value
is ignored<P>

<LI>for numeric informats, the <I>d</I> value
in an informat behaves in the usual way for numeric informats. <P>
</UL>
If you have coded the INPUT statement to use another style
of input, such as formatted input or column input, that style of input is
not used when you use the INFORMAT statement.    
<P>See <A href="z0144370.htm">INPUT, List</A>
for more information on how to use modified list input to read data.
<BR><H3>ATTRIB Statement</H3>


<P>The ATTRIB statement can also associate an informat, as well
as  other attributes, with one or more variables. For example, in the following
statements, the ATTRIB statement associates the DATE<I>w</I>.
informat with the variables Birthdate and Interview:



<PRE>attrib Birthdate Interview informat=date9.;
input @63 Birthdate Interview;</PRE>
<P>An informat that is associated by using the INFORMAT= option in the
ATTRIB statement behaves like an informat that you specify with a colon (:)
format modifier in an INPUT statement. (For details about using the colon
(:) modifier, see the         
<A href="z0144370.htm">INPUT, List</A>.)
Therefore, SAS uses a modified list input to read the variable in the same
way as it does for the INFORMAT statement.
<P>See <A href="z0179227.htm">ATTRIB</A>
for more information.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Permanent versus Temporary Association</FONT></B></TD></TR></TABLE>

<P>When you specify
an informat in an INPUT statement, SAS uses the informat to read input data
values during that DATA step. SAS, however, does not permanently associate
the informat with the variable. To permanently associate a format with a variable,
use an INFORMAT statement or an ATTRIB statement. SAS permanently associates
an informat with the variable by modifying the descriptor information in the
SAS data set. 
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">User-Defined Informats</FONT></B></TD></TR></TABLE>

<P>In
addition to the informats that are supplied with base SAS software, you can
create your own informats. In base SAS software, PROC FORMAT allows you to
create your own informats and formats for both character and numeric variables.
For more information on user-defined informats, see the FORMAT procedure in
the                             
<B>SAS Procedures Guide</B>. 
<P>When you execute a SAS program that uses user-defined informats, these
informats should be available. The two ways to make these informats available
are
<P>
<UL>

<LI>to create permanent, not temporary, informats with PROC FORMAT<P>

<LI>to store the source code that creates the informats (the PROC
FORMAT step) with the SAS program that uses them.<P>
</UL>
                          
 
<P> If you execute a program that cannot locate a user-defined informat,
the result depends on the setting of the FMTERR= system option. If the user-defined
informat is not found, then these system options produce these results:
<P>
<TABLE cellpadding="6" cellspacing="0" border="1">


<TR valign="bottom" bgcolor="#CCCCCC">
  <TH  align="LEFT" valign="TOP" ><B>System Options</B></TH>
  <TH  align="LEFT" valign="TOP" ><B>Results</B></TH>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">FMTERR </TD>
  
<TD  align="LEFT" valign="TOP">SAS produces an error that causes the current DATA or PROC step to stop.</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">NOFMTERR </TD>
  
<TD  align="LEFT" valign="TOP">SAS continues processing by substituting a default informat.</TD>
</TR>

</TABLE>

<BR>Although using NOFMTERR enables SAS to
process a variable,
you lose the information that the user-defined informat supplies. This option
can cause a DATA step to misread data, and it can produce incorrect results.
 
<P>To avoid problems, make sure that users of your program have access
to all the user-defined informats that are used.

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0309877.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z1258737.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z1258728.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z1258738">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>