
<HTML>

<HEAD>

<TITLE>MATH LIBRARY: ESSL, IMSL and OSL in UNIX</TITLE>

</HEAD>

<BODY>

<P>
<CENTER><B>MATH LIBRARY: ESSL, IMSL and OSL in UNIX<BR>
</B></CENTER>
<P>
1. <A HREF = "#gen">GENERAL INFORMATION</A>...............................<BR>

<P>
2. <A HREF = "#essl">THE ESSL LIBRARY</A> (On RS/6000 only)................ <BR>

<P>
3. <A HREF = "#imsl">THE IMSL LIBRARY</A>.................................. <BR>

<P>
4. <A HREF = "#osl">THE OSL LIBRARY</A> (On RS/6000 only)................. <BR>
<BR>
<BR>

<P><HR>

<CENTER><U><B>Syntax Summary</B></U></CENTER>
<P>
<DL><DT> <U>FORTRAN</U> Language
<DD> <P>
<DD> IMSL : f77 program.f -limsl
<DD> <P>
<DD> ESSL : xlf program.f -lessl
<DD> <P>
<DD> OSL : xlf program.f -losl<BR>
<DT> 
<DT> <P>
<DT> <U>C</U> Language
<DT> <P>
<DD> IMSL/MATH : cc program.c -limslcmath
<DT> <P>
<DD> IMSL/STAT : cc program.c -limslcstat
<DT> <P>
<DD>ESSL : xlc program.c -lessl -lm -lxlf
<DT> <P>
<DD> OSL : xlc program.c -losl -lm -lxlf<BR>
</DL><BR>

<P><HR>

<CENTER><B><H2>MATH LIBRARY: ESSL, IMSL and OSL in UNIX</H2><BR>
</B></CENTER>
<P>

<B><A NAME="gen">1. GENERAL INFORMATION</A><BR>
</B>
<P>
This write-up deals with the often used libraries : the <B>E</B>ngineering
and <B>S</B>cientific <B>S</B>ubroutine <B>L</B>ibrary (ESSL),
the <B>I</B>nternational <B>M</B>athematical and <B>S</B>tatistical
<B>L</B>ibrary (IMSL), and the <B>O</B>ptimization <B>S</B>ubroutine
<B>L</B>ibrary (OSL). It gives introduction and guidance for effective
access to the libraries. Reference manuals are available in COMPASS
and in some sites.<BR>

<P><HR>

<B><A NAME="essl">2. THE ESSL LIBRARY (On RS/6000 only)</A><BR>
</B>
<P>
ESSL (Engineering and Scientific Subroutine Library) is a set
of high performance mathematical routines for use by FORTRAN,
C and assembler language programs. <BR>

<P>
<U>Manual</U>: Engineering and Scientific Subroutine Library -
Guide and Reference. The reference manual contains information
for using ESSL with programs written in FORTRAN, C or assembler.
Copies of this manual are available at COMPASS .<BR>

<P>
The various routines in ESSL follow a standard naming convention
based on the first letter of each routine name as described below:
<BR>

<DL><DT> <P>
<DD> S - Short-precision real (about 6/7 decimal digits)
<DT> <P>
<DD> C - Short-precision complex
<DT> <P>
<DD> D - Long-precision real (about 14/15 decimal digits)
<DT> <P>
<DD> Z - Long-precision complex
<DT> <P>
<DD> I - Integer (4 byte length)<BR>
<DT> 
</DL><P>
The variables used by the routine must be at the same precision
level as the routine; i.e., use double precision variables with
a double precision routine.<BR>
<P>
The nine mathematical areas of ESSL are:
<DL><DT> <P>
<DT> <DD>Linear Algebra
<DT> <P>
<DT> <DD>Matrix Operations
<DT> <P>
<DT> <DD>Linear Algebraic Equations
<DT> <P>
<DT> <DD>Signal Processing
<DT> <P>
<DT> <DD>Interpolation
<DT> <P>
<DT> <DD>Numerical Quadrature
<DT> <P>
<DT> <DD>Random Number Generation
<DT> <P>
<DT> <DD>Utility Subroutines<BR>
</DL>
<P>
To link your FORTRAN program on RS/6000 with ESSL, simply type
:<BR>

<DL><DT><P>
<DD><B>xlf program.f -lessl <BR> </DL>
</B>
<P>
The xlf compiler also allows users to optimize their program by
making use of the ESSL routines. The XLF optimizer can detect
area of FORTRAN code that can be replaced by highly optimized
ESSL routines and optimize the program. To make use of that feature
the following xlf options need to be included:<BR>

<DL><DT><P>
<DD>
<B>xlf -Pv -Wp,-ej -O3 program.f -lessl</B></DL>
<P>
or 
<DL><DT><P>
<DD>
<B>xlf -Pk -Wp,-lc=essl -O3 program.f -lessl<BR></DL>
</B>
<P>
For more on the xlf compiler options refer to the &quot;XL FORTRAN
&quot;compiler manual at COMPASS.<BR>

<P>
To access the FORTRAN written ESSL routines in C language type
:<BR>

<DL><DT><P>
<DD>
<B>xlc program.c -lessl -lm -lxlf<BR></DL>
</B>
<P><HR>

<B><A NAME="imsl">3. THE IMSL LIBRARY</A><BR>
</B>
<P>
IMSL is a library of more than 900 FORTRAN subroutines designed
to handle many mathematical and statistical applications. You
must write your own FORTRAN or C program to access the routines.
<BR>

<P>
<U>Manual</U>: IMSL LIBRARY: Reference manual. The manual contains
basic information about IMSL characteristics and includes a full
section of documentation for each of the subroutines and examples.
<BR>

<P>
The IMSL library actually consists of three separate smaller,
coordinated groups. (The IMSL vendor calls these smaller groups
libraries, but at ASU the three groups have been combined in one
large library.) The IMSL routines are organized into areas:<BR>

<P>
MATH/LIBRARY general applied mathematics (3 volumes)
<P>
STAT/LIBRARY statistics (3 volumes)
<P>
SFUN/LIBRARY special functions (1 volume )
<P>
EXPONENT GRAPHICS LIBRARY graphics (1 volume )<BR>

<P>
Most of the subroutines are available both in single and double
precision. The subroutines are standard and the same interface
is found on the many hardware versions that span the range from
personal computer to supercomputer. Each of the libraries are
organized in chapters; each chapter contains routines with similar
computational or analytical capabilities. These chapters in the
libraries are as follows:<BR>

<P>
<U>In the MATH/LIBRARY</U>:<BR>

<P>
Linear Systems, Eigensystem Analysis, Interpolation and Approximation,
Integration and Differentiation, Differential Equations, Transforms,
Nonlinear Equations, Optimization, Basic Matrix/Vector Operations
and Utilities.<BR>
<BR>

<P>
<U>In the STAT/LIBRARY</U>:<BR>

<P>
Basic Statistics, Regression, Correlation, Analysis of Variance,
Categorical and Discrete Data Analysis, Nonparametric Statistics,
Test of Goodness of Fit and Randomness, Time Series Analysis and
Forecasting, Covariance Structures and Factor Analysis, Discriminant
Analysis, Cluster Analysis, Sampling, Survival Analysis, Life
Testing and Reliability, Multidimensional Scaling, Density and
Hazard Estimation, Line Printer Graphics, Probability Distribution
Functions and Inverses, Random Number Generation, Utilities and
Mathematical Support.<BR>

<P>
<U>In the SFUN/LIBRARY</U>:<BR>

<P>
Special Functions and Integral Routines.<BR>

<P>
<U>In the EXPONENT Graphics LIBRARY</U>:<BR>

<P>
2-D, 3-D, Contour Plots Generation.<BR>

<P>
IMSL is a library of subroutines, that is, pieces of computer
programs written to be used within other computer programs. They
cannot stand alone. You must write your own FORTRAN or C program
to handle input and output, initialize variables, and make the
calls to the desired IMSL subroutines.<BR>

<P>
The IMSL Library in FORTRAN includes single and long precision
routines and has the same rules for the first letter of the routine
names as the ESSL Library. In C language, similar naming convention
is used.<BR>

<P>
Except when expressly stated otherwise, the names of the variables
in the argument list follow the default FORTRAN naming convention
for integer and floating point variables. The arguments passed
into the routines must match the routine's precision.<BR>

<P>
When writing programs accessing the IMSL Library, you should choose
FORTRAN and/or C names that do not conflict with names of IMSL
subroutines, functions, or named common blocks. You can avoid
any conflict with IMSL names if the following rules are observed:
<BR>

<P>
- Do not choose a name that appears in the Alphabetical Index
of Routines, at the end of the User's Manual.
<P>
- Do not choose a name consisting of more than three characters
with a numeral in the second or third position.
<P>
- Do not have the arguments, passed into an IMSL routine, in COMMON
or EQUIVALENCE statement(s) unless is required by IMSL. <BR>

<P>
The quickest and safest way to use an IMSL routine is to find
an example similar to your problem and then mimic the example
as much as possible.<BR>

<P>
To link the first 3 libraries in FORTRAN, an user can type :<BR>

<DL><DT><P>
<DD>
<B>f77 program.f -limsl<BR></DL>
</B>
<P>
To link the IMSL libraries written in C, type:<BR>

<DL><DT><P>
<DD>
<B>cc program.c -limslcmath</B> &lt;--- for the MATH library</DL>
<DL><DT><P>
<DD>
<B>cc program.c -limslcstat</B> &lt;--- for the STAT library </DL>
<BR>

<P>
To link the Exponent Graphics FORTRAN Library presently available
on the RS/6000 cluster.(Note: Some of the libraries in this case
may be system depended.):<BR>

<DL><DT><P>
<DD>
<B>f77 gp.f -limslexp -lX11 -ltermcap -lbsd -lcfg -lodm<BR></DL>
</B>
<P><HR>

<A NAME="osl"><B>4. THE OSL LIBRARY</B></A><BR>

<P>
OSL (Optimization Subroutine Library), available on RS/6000 only,
is a collection of high-performance mathematical subroutines for
use by application programs that solve optimization problems.
The OSL subroutines are FORTRAN written subroutines and can be
called from FORTRAN and C programs<SUP>*</SUP> at different levels:
high-level routines can solve a problem without need of detailed
knowledge of mathematical programming. Low-level subroutines gives
the flexibility to structure algorithms without having to write
programs from scratch. Thus, OSL is ideal for use in making business
decisions, as well as for use in research of new algorithms and
techniques. <BR>

<P>
Mathematical programming technique can be applied to problems
where a function needs to be minimized or a maximized, subject
to set of constrains. OSL finds the solutions of several types
of optimization problems using linear programming, mixed-integer
programming, and quadratic programming.<BR>

<P>
<U>Manual:</U> Optimization Subroutine Library - Guide and Reference
<P>
The reference manual contains information for using OSL with programs
written in FORTRAN or C. Copies of this manual are available at
COMPASS.<BR>

<P>
The various routines in OSL begin with EKK to help prevent name
conflicts. The variables used by the routine need be fullword
integers (INTEGER*4) and doubleword real (REAL*8).<BR>

<P>
Two linear programming methods are offered by OSL: a <U>simplex
method</U>, which includes a primal and a dual algorithm, and
an <U>interior-point barrier method</U>. Mixed-integer problems
are linear programming problems where some of the variables are
constrained to be integers. The quadratic programming problems
solved by OSL have a convex quadratic objective function and linear
constraints. There are also subroutines for solving parametric
quadratic problems.<BR>

<P>
To access the OSL library on RS/6000 interactive server, for FORTRAN
or C respectively, type:<BR>

<DL><DT><P>
<DD>
<B>xlf program.f -losl<BR></DL>
</B>
<DL><DT><P>
<DD>
<B>xlc program.c -losl -lm -lxlf <BR></DL>
<BR>
<BR>
</B>
</BODY>

</HTML>

