<HTML>
<!-- This page produced Thu Jul  8 15:57:47 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Procedures : SOURCE </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0217368.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zoc-sort.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0217455.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SOURCE</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0217440">SOURCE</A></FONT></H1>

<P><HR><BR><B>Provides an easy way to back up and process source library data
sets</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>OS/390 specifics:</B></TD>
<TD bgcolor="#CCCCCC" align="left">all
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0217440.htm#znid-196"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217441"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217442"><FONT size="2"><B>PROC SOURCE Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217443"><FONT size="2"><B>SELECT Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217444"><FONT size="2"><B>EXCLUDE Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217445"><FONT size="2"><B>FIRST Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217446"><FONT size="2"><B>LAST Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217447"><FONT size="2"><B>BEFORE Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217448"><FONT size="2"><B>AFTER Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217449"><FONT size="2"><B>Output</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217450"><FONT size="2"><B>Example of Printing Selected Members from a PDS</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217451"><FONT size="2"><B>Example of Building and Submitting a Job to Assemble Programs</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217452"><FONT size="2"><B>Example of Producing Directory Records</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217453"><FONT size="2"><B>Example of Generating Control Cards for IEBCOPY</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217440.htm#z0217454"><FONT size="2"><B>References</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="znid-196">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PROC SOURCE</B>
&lt;<I>options</I>&gt;;
<TABLE cellpadding="2" cellspacing="2">
<TR><TD width="24"></TD><TD>
<B>SELECT</B> <I>member-1 </I> &lt; . . . <I>member-n</I>&gt;;
</TD></TR></TABLE>
<TABLE cellpadding="2" cellspacing="2">
<TR><TD width="24"></TD><TD>
<B>EXCLUDE</B>
<I>member-1 </I> &lt; . . . <I>member-n </I>&gt;
;
</TD></TR></TABLE>
<TABLE cellpadding="2" cellspacing="2">
<TR><TD width="24"></TD><TD>
<B>FIRST</B> '<I>model-control-statement</I> ';
</TD></TR></TABLE>
<TABLE cellpadding="2" cellspacing="2">
<TR><TD width="24"></TD><TD>
<B>LAST</B> '<I>model-control-statement</I>
';
</TD></TR></TABLE>
<TABLE cellpadding="2" cellspacing="2">
<TR><TD width="24"></TD><TD>
<B>BEFORE</B>  '<I>model-control-statement</I> ' &lt;<I>options </I>&gt;;
</TD></TR></TABLE>
<TABLE cellpadding="2" cellspacing="2">
<TR><TD width="24"></TD><TD>
<B>AFTER</B>
'<I>model-control-statement</I>' &lt;<I>options </I>&gt;;
</TD></TR></TABLE> 
</TD></TR></TABLE><A name="znid-197">&#13;</A>
<P><A name="z0553074">&#13;  </A>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217441">Details</A></FONT></B></TD></TR></TABLE>

<P>Use PROC SOURCE to read PDS or PDSE libraries
and produce sequential output.
<P>You can use the SOURCE procedure to: 
<P>
<UL>

<LI>write the contents of an entire library to the
SAS log.<P>

<LI>process only the directory of a library in order
to produce input for the SAS System, for a utility, or for other programs.<P>

<LI>route the members of a library to other programs
for processing. By default, PROC SOURCE generates records for the IBM utility,
IEBUPDTE, which reloads an unloaded data set.<P>

<LI>create a sequential, or unloaded, version of the
library's directory records.<P>

<LI>construct an unloaded data set from a library.
The unloaded data set is suitable for reloading by IEBUPDTE or other source
library maintenance utilities, including the ability to recognize and properly
handle aliases.<P>
</UL>

<P><A name="z0553081">&#13;    Using the
SOURCE
procedure, a source library can be copied into a sequential tape or disk data
set to create either a backup or a manually transportable copy of the source
data. This copy is called an <B>unloaded data set</B>; it consists of
80-byte records that contain the source data and the control information that
are needed to restore the source to its original organization. When an unloaded
data set is restored by the proper utility to a device that will support the
data in their original form, the data is reconstructed, or <B>loaded</B>.</A>
<P>An advantage of having an unloaded data set is that
one or more members can be retrieved without reloading the entire library.
<P>PROC SOURCE has several advantages over IBM's IEBPTPCH
utility. With PROC SOURCE you can 
<P>
<UL>

<LI>list members in alphabetical order<P>

<LI>select members by specifying a wildcard or
range<P>

<LI>list the number of records in each member<P>

<LI>list each member on a new
page<P>

<LI>produce an unloaded version of the library that
can be ported to some other host systems.<P>
</UL>

<P>The <B>model-control-statements </B> in the FIRST,
LAST, BEFORE, and AFTER statements are usually either utility or job control
statements, depending on the destination given by the OUTDD= option in the
PROC SOURCE statement.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217442">PROC SOURCE Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553090">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PROC SOURCE</B>
&lt;<I>options</I>&gt;;
</TD></TR></TABLE>
<P>The following options are used in the PROC SOURCE statement:

<DL>
<DT><A name="z0553092">&#13;DIRDD=<B>file-specification</B></A></DT>
<DD>specifies either the fileref or physical
file name of the output data set to which PROC SOURCE writes a sequential,
unloaded form of the PDS directory. Each directory record is written into
one 80-byte record.  Records are left-aligned and padded on the right with
blanks. If specified, the fileref must match the reference name that was used
in the FILENAME statement, FILENAME function, JCL DD statement, or TSO ALLOCATE
command that allocated the output data set. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;The
SELECT and EXCLUDE statements have no effect when the DIRDD= option is specified.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P></DD>

<DT><A name="z0553095">&#13;INDD=<B>file-specification</B></A></DT>
<DD>specifies the fileref or the physical file
name of an input PDS. The fileref, if specified, must match the reference
name that was specified in the FILENAME statement, FILENAME function, JCL
DD statement, or TSO ALLOCATE command that allocated the input library. If
the INDD= option is not specified, the default fileref is SOURCE.
<P>If OUTDD is specified, then the RECFM of the INDD file
must be either F or FB.  The fileref may not refer to a concatenation of data
sets. If it does, then an error message is generated. If the member names
in the INDD file are nonstandard, then specify FILEEXT=ASIS in an OPTIONS
statement.<P></DD>

<DT><A name="z0553098">&#13;MAXIOERROR=<B>n</B></A></DT>
<DD>specifies the maximum number of I/O errors
to allow before terminating. Normally, PROC SOURCE detects, issues a warning
message about, and then ignores I/O errors that occur while reading the library
members. When the number of errors specified by MAXIOERROR= has occurred,
however, PROC SOURCE assumes that the library is unreadable and stops. The
default MAXIOERROR= value is 50.<P></DD>

<DT><A name="z0553100">&#13;NOALIAS</A></DT>
<DD>treats aliases as main member names. Therefore,
PROC SOURCE does not generate 



<PRE>./ ALIAS</PRE>


 cards or alias BEFORE and AFTER cards.<P></DD>

<DT><A name="z0553102">&#13;NODATA</A></DT>
<DD>specifies that you do not want to read the
members in the input PDS. In other words, PROC SOURCE produces only control
statements and a list of the member names;  it does not produce the contents
of the members. The list of member names includes any aliases.  NODATA is
particularly useful when you want to process only the directory of a library.<P></DD>

<DT><A name="z0553104">&#13;NOPRINT</A></DT>
<DD>specifies that you do not want to generate
the list of member names and record counts. (These listings are produced even
when the PRINT option is not specified.) The NOPRINT option is ignored when
PRINT is specified.<P></DD>

<DT><A name="z0553106">&#13;NOSUMMARY</A></DT>
<DD>specifies that you do not want to generate
the member summary. The NOSUMMARY option is ignored when the NODATA, NOPRINT,
or PRINT option is specified.<P></DD>

<DT><A name="z0553108">&#13;NOTSORTED</A></DT>
<DD>causes PROC SOURCE to process PDS members
in the order in which they either appear (in SELECT statements) or remain
(after EXCLUDE statements).
<P>Normally, PROC SOURCE processes (that is, unloads, writes
to the SAS log, and so on) the PDS members in alphabetical order by member
name.<P></DD>

<DT><A name="z0553111">&#13;NULL</A></DT>
<DD>specifies that null members (PDS members
that contain no records, just an immediate end-of-file) should be processed.
Such members occasionally appear in source PDSs, but they are not normally
unloaded because IEBUPDTE and most other PDS maintenance utilities do not
create null members. If you are using a source library maintenance utility
that can properly recognize and create a null member, then specify this option
and provide the appropriate BEFORE (and possibly, AFTER) statements.<P></DD>

<DT><A name="z0553113">&#13;OUTDD=<B>file-specification</B></A></DT>
<DD>specifies the fileref, PDS or PDSE member
name, or UNIX System Services filename of the output file to which PROC SOURCE
writes the unloaded (sequential) form of the input PDS and any records that
FIRST, LAST, BEFORE, and AFTER statements generate.  If specified, the fileref
must match the reference name used in the FILENAME statement, FILENAME function,
JCL DD statement, or TSO ALLOCATE command that allocated the data set.  This
option cannot be used when the INDD file contains variable-length records.<P></DD>

<DT><A name="z0553115">&#13;PAGE</A></DT>
<DD>begins the listing of the contents of each
member on a new page.<P></DD>

<DT>PRINT</DT>
<DD>lists the contents of the entire PDS. The
PRINT option is ignored when NODATA is specified.<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217443">SELECT Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553119">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>SELECT</B> <I>member-1 </I> &lt; .
. . <I>member-n </I>&gt;;
</TD></TR></TABLE>When you use the SELECT statement, only the members that you specify
are processed. You can use any number of SELECT statements.
<P>Use a colon (:) to indicate that you want to select
all members whose names begin with the characters that precede the colon.
(See the second example below.)
<P>You can include an alphabetic range of names in the
SELECT statement by joining two names with a hyphen (-). The two hyphenated
members and all members in between are processed. For example, if a library
contains members called BROWN, GRAY, GREEN, RED, and YELLOW, and you want
to process the first four members, use this SELECT statement:  



<PRE>select brown-red;</PRE>
<P>The colon (:) and hyphen (-) notation can be used together.
For example, the following statement produces the same results as the previous
SELECT statement:  



<PRE>select br:-gr: red;</PRE>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217444">EXCLUDE Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553124">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>EXCLUDE</B> <I>member-1 </I> &lt; . . . <I>member-n </I>&gt;
;
</TD></TR></TABLE>When you use the EXCLUDE statement, all members except those that
you specify are processed. You can use any number of EXCLUDE statements.
<P>Use a colon (:) to indicate that you want to exclude
all members whose names begin with the characters that precede the colon.
<P>You can include an alphabetic range of names in the
EXCLUDE statement by joining two names with a hyphen. The two hyphenated members
and all members in between are excluded from processing. (See the SELECT examples
in the SELECT statement description.)
<P>The colon and hyphen notation can be used together.
<P>Sometimes it is convenient to use SELECT and EXCLUDE
statements together.  For example, you can use the colon or hyphen notation
in a SELECT statement to select many members, then use the EXCLUDE statement
to exclude a few of the selected members. Suppose there are 200 members called
SMC1 through SMC200, and you want to copy all of them except SMC30 through
SMC34.  You could use these statements:
<P>
<PRE>select smc:;
exclude smc30-smc34;</PRE>
<P>When you use both EXCLUDE and SELECT statements, the
EXCLUDE statements should specify only members that are specified by the SELECT
statements. However, excluding unselected members has no effect other than
to generate warning messages.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217445">FIRST Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553132">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>FIRST</B> '<I>model-control-statement</I> ';
</TD></TR></TABLE>The FIRST statement generates initial
control statements that invoke
a utility program or that are needed only once. The specified <B>model-control-statement </B> is reproduced, left-aligned, on a record that precedes all members
in the unloaded data set. You can use any number of FIRST statements. One
FIRST statement can specify one model control statement. Each model control
statement generates a record.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217446">LAST Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553134">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>LAST</B> '<I>model-control-statement</I> ';
</TD></TR></TABLE>The LAST statement generates final
control statements that terminate
a utility program or that are needed only once. The specified <B>model-control-statement</B> is reproduced, left-aligned, on a record that follows all members
in the unloaded data set. You can use any number of LAST statements. One LAST
statement can specify one model control statement. Each model control statement
generates a record.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217447">BEFORE Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553136">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>BEFORE</B>  '<I>model-control-statement</I>'
&lt;<I>options</I>&gt;;
</TD></TR></TABLE>The BEFORE statement generates a utility control statement before
each member. You can use any number of BEFORE statements. One BEFORE statement
can specify one model control statement.  Each <B>model-control-statement</B> that you specify is reproduced, left-aligned, on a record that precedes
each member in the unloaded data set.
<P>By default, PROC SOURCE generates control statements
for the IBM IEBUPDTE utility program before each member of an unloaded data
set. You can use the BEFORE and AFTER statements to override the default and
generate control statements for other utility programs.  To prevent PROC SOURCE
from generating these statements, use the BEFORE statement with no parameters.
<P>Options for the BEFORE and AFTER statements are the
same. A list of these options follows the description of the AFTER statement.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217448">AFTER Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553140">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>AFTER</B> '<I>model-control-statement</I>'
&lt;<I>options</I>&gt;;
</TD></TR></TABLE>The AFTER statement generates a utility control statement after each
member. You can use any number of AFTER statements. One AFTER statement can
specify one model control statement.  Each <B>model-control-statement</B>
that you specify is reproduced, left-aligned, on a record that follows each
member in the unloaded data set.
<P>By default, PROC SOURCE generates control statements
for the IBM IEBUPDTE utility program after each member of an unloaded data
set.  You can use the AFTER statement to override the default and generate
control statements for other utility programs.
<P>The following options are used in the BEFORE and AFTER
statements: 
<DL>
<DT><A name="z0553144">&#13;ALIAS</A></DT>
<DD>tells SAS to produce a record containing
the <B>model-control-statement</B> only for each defined alias.  (The
alias is placed into the record at the specified column, if any.)<P></DD>

<DT><B>column number</B></DT>
<DD>tells SAS to substitute the member name
in records that are generated by BEFORE and AFTER statements in an 8 byte
field beginning in this column. The beginning column can be any column from
1 to 73.  Aliases, as well as main member names, are substituted. The name
is left-aligned in the field unless the RIGHT option is specified, and it
is padded on the right with blanks unless the NOBLANK option is specified.<P></DD>

<DT><A name="z0553148">&#13;NOBLANK</A></DT>
<DD>is meaningful only if <B>column number</B> is specified. When the member name is substituted in records that
are generated by the BEFORE and AFTER statements, NOBLANK eliminates blanks
between the end of the member and any text that follows.  In the following
record, a member name precedes the text; NOBLANK has <B>not</B> been
specified:  



<PRE><I>name ,text text text</I></PRE>
<P>When NOBLANK is specified, the same record looks like
this:  



<PRE><I>name,text text text</I></PRE><P></DD>

<DT><A name="z0553151">&#13;RIGHT</A></DT>
<DD>is meaningful only if <B>column number</B> is specified.  When the member name is substituted in records that
are generated by the BEFORE and AFTER statements, RIGHT causes the member
name to be right-aligned in the specified field.  By default, the name is
left-aligned in an eight-column field.<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217449">Output</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553153">&#13;PROC SOURCE writes the following information to
the SAS log: </A>
<P>
<UL>

<LI>the contents of the entire PDS, if the PRINT option
is specified<P>

<LI>a listing of the member names in the PDS (unless
you specify NOPRINT)<P>

<LI>the number of records for each member (unless
you specify NOPRINT or NODATA)<P>

<LI>a summary of the attributes and contents of the
PDS.<P>
</UL>

<P>Even when PRINT is not specified, some records may still
be written to the log.  The signal NAME: or ENTRY: or AUTHOR: beginning in
column 5 of a record in the library starts the listing; the signal END beginning
in column 5 stops it. If you do not want SAS to list this subset of records,
specify the NOSUMMARY option.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217450">Example of Printing Selected Members from a PDS</A></FONT></B></TD></TR></TABLE>

<P><A name="z0553159">&#13;The following
example writes to the SAS log the
contents of the member ORANGES4 from the PDS USERID.TASTE.TEST:  


</A>
<PRE>proc source indd='userid.taste.test' print;
   select oranges4;
run;</PRE>
<P>The log is shown in <A href="#zocs-o10">Selecting a Member from a Source Statement Library</A>. 
<P>
<P>
<B><I><A name="zocs-o10">Selecting a Member from a Source Statement Library</A></I></B><BR>


<TABLE border="1" cellpadding="12" cellspacing="0" bgcolor="#FAFAFA">
<TR>
<TD><PRE> 19   proc source indd='userid.taste.test' print;
 20   select oranges4; run;
 ORANGES4
 data oranges;
    input variety $ flavor texture looks;
    total=flavor+texture+looks;
    datalines;
    navel 9 8 6
    temple 7 7 7
    valencia 8 9 9
    mandarin 5 7 8
    ;

 proc sort data=oranges;
    by descending total;

 proc print data=oranges;
    title 'Taste Test Result for Oranges';
 17 - RECORDS
 
 NOTE: INDD=SYS00158 data set is :
       Dsname=USERID.TASTE.TEST,
       Unit=3380,Volume=XXXXXX,Disp=SHR,Blksize=23055,
       Lrecl=259,Recfm=FB.
 
         3348      Members defined in source library.
            0      Aliases defined in source library.
            1      Members selected.
           17      Records read from source library.</PRE></TD></TR></TABLE>

<P>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217451">Example of Building and Submitting a Job to Assemble Programs</A></FONT></B></TD></TR></TABLE>

<P>The following PROC SOURCE program builds
and submits a job to compile assembler programs. It writes the output directly
to the internal reader so that the compile job can be executed.  



<PRE>filename out sysout=a pgm=intrdr lrecl=80
      recfm=f;
proc source indd='userid.asm.src' nodata
      outdd=out;
   first '//COMPILE JOB (0,ROOM),''DUMMY'',';
   first '// NOTIFY=,REGION=4M,TYPRUN=HOLD';
   first '/*JOBPARM FETCH';
   last  '//';
   before '//XXXXXXXX EXEC ASMHCL,' 3;
   before '// MAC2=''XXX.MACLIB'' ';
   before '//SYSIN DD DISP=SHR,';
   before '// DSN=USERID.ASM.SOURCE(XXXXXXXX)' 26 NOBLANK;
run;</PRE>


  
<P>The output that is written to the internal reader is
shown below.  Note that this output shows only the statements that are generated
by PROC SOURCE, before they are executed. 

<P>
<B><I>Building and Submitting a Job to Assemble Programs</I></B><BR>


<TABLE border="1" cellpadding="12" cellspacing="0" bgcolor="#FAFAFA">
<TR>
<TD><PRE> //COMPILE JOB (0,ROOM),'DUMMY',                                         
 // NOTIFY=,REGION=4M,TYPRUN=HOLD
 /*JOBPARM FETCH
 //OUT1601  EXEC ASMHCL,
 // MAC2='XXX.MACLIB'
 //SYSIN DD DISP=SHR,
 // DSN=USERID.ASM.SRC(OUT1601)
 //OUT1602  EXEC ASMHCL,
 // MAC2='XXX.MACLIB'
 //SYSIN DD DISP=SHR,
 // DSN=USERID.ASM.SRC(OUT1602)
 //OUT1603  EXEC ASMHCL,
 // MAC2='XXX.MACLIB'
 //SYSIN DD DISP=SHR,
 // DSN=USERID.ASM.SRC(OUT1603)
 //</PRE></TD></TR></TABLE>

<P>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217452">Example of Producing Directory Records</A></FONT></B></TD></TR></TABLE>

<P>The following PROC SOURCE program produces
directory records.  The subsequent DATA step extracts the ISPF statistics,
if any are present.  



<PRE>filename indd 'userid.sas.src' disp=shr;
filename out  '&amp;temp';
/* Build directory records. */
proc source indd=indd nodata noprint dirdd=out;

/* Read directory records and extract   */
/*      ISPF statistics.                */
data test;
infile out;
file print header=h;
input member $8. ttr pib3. ind pib1. @;
datalen = 2*mod(ind,32);
if (datalen = 30)
then do;
  input ver pib1. mod pib1. blank pib2.
        ccreate pib1.
         create pd3.
        cchanged pib1.
         changed pd3. hh pk1.
        mm pk1. size pib2. init pib2.
        modl pib2. userid $8.;
  yyyydddc = (ccreate * 100000) + 1900000 + create;
  jcreate = datejul(yyyydddc);
  yyyydddx = (cchanged * 100000) + 1900000 + changed;
  jchange = datejul(yyyydddx);

/* Print the results. */
  put @4 member $8.
      @15 jcreate yymmdd10.
      @27 jchange yymmdd10.
      @39 hh 2. ':' mm 2.
      @48 userid;
end;
return;
h:
put @4 'NAME '
    @15 'CREATED'
    @27 'CHANGED'
    @39 'TIME'
    @48 ' ID ';
put;
return;
run;</PRE>
<P>The following output shows the results. 

<P>
<B><I>Producing Directory Records</I></B><BR>


<TABLE border="1" cellpadding="12" cellspacing="0" bgcolor="#FAFAFA">
<TR>
<TD><PRE>                               The SAS System
   NAME       CREATED     CHANGED     TIME      ID

   OUT1601    1999-02-20  1999-02-20  10:50    USERID
   OUT1602    1999-02-20  1999-02-20  10:54    USERID
   OUT1603    1999-02-20  1999-02-20  10:59    USERID</PRE></TD></TR></TABLE>

<P>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217453">Example of Generating Control Cards for IEBCOPY</A></FONT></B></TD></TR></TABLE>

<P>This example first produces control statements
for the IBM utility program, IEBCOPY. Then IEBCOPY executes, copying selected
members.  



<PRE>//IEBPDS JOB (0,ROOM),'USERID',
//  NOTIFY=
/*JOBPARM FETCH
//   EXEC SAS
//IN DD DSN=XXX.SUBLIB,DISP=SHR
//OUT DD DSN=&amp;&amp;TEMP,SPACE=(CYL,(1,2)),
//       DISP=(,PASS),UNIT=DISK
//SYSIN DD *
   proc source indd=in outdd=out nodata  noprint;
   select hc:;
   select lm:;
   select sasextrn;
   first ' COPY INDD=IN,OUTDD=NEWPDS';
   before '  SELECT MEMBER=XXXXXXXX -----------'
      17;
   before '       S      M=XXXXXXXX ***ALIAS***'
      17 ALIAS;
//S1     EXEC PGM=IEBCOPY
//SYSPRINT DD SYSOUT=A
//IN     DD DSN=XXX.SUBLIB,DISP=SHR
//NEWPDS DD DSN=&amp;&amp;NEW,SPACE=(CYL,(20,10,20)),
//          UNIT=DISK
//SYSUT1 DD UNIT=DISK,SPACE=(CYL,(2,3))
//SYSUT2 DD UNIT=DISK,SPACE=(CYL,(2,3))
//SYSUT3 DD UNIT=DISK,SPACE=(CYL,(2,3))
//SYSIN  DD DSN=&amp;&amp;TEMP,DISP=(OLD,DELETE)</PRE>


  
<P><A href="#zocs-o13">Producing Control Statements for the IEBCOPY Utility</A>
shows what is written to the SAS log after PROC SOURCE is run. <A href="#zocs-o14">IEBCOPY Output: Selected Members Copied</A> shows the IEBCOPY output. 
<P>
<P>
<B><I><A name="zocs-o13">Producing Control Statements for the IEBCOPY Utility</A></I></B><BR>


<TABLE border="1" cellpadding="12" cellspacing="0" bgcolor="#FAFAFA">
<TR>
<TD><PRE> 1             proc source indd=in outdd=out nodata  noprint;
 2             select hc:;
 3             select lm:;
 4             select sasextrn;
 5             first ' COPY INDD=IN,OUTDD=NEWPDS';
 6             before '  SELECT MEMBER=XXXXXXXX -----------' 17;
 7             before '       S      M=XXXXXXXX ***ALIAS***' 17 ALIAS;
 
 NOTE: INDD=IN data set is :
       Dsname=USERID.DATASET,
       Unit=3380,Volume=XXXXXX,Disp=SHR,Blksize=6160,
       Lrecl=80,Recfm=FB.
 
 NOTE: OUTDD=OUT data set is :
       Dsname=SYS96052.T131013.RA000.IEBPDS.TEMP,
       Unit=3390,Volume=,Disp=NEW,Blksize=27920,
       Lrecl=80,Recfm=FB.
 
            9      Members defined in source library.
            0      Aliases defined in source library.
            6      Members selected.
            0      Records read from source library.</PRE></TD></TR></TABLE>

<P> 

<P>
<B><I><A name="zocs-o14">IEBCOPY Output: Selected Members Copied</A></I></B><BR>


<TABLE border="1" cellpadding="12" cellspacing="0" bgcolor="#FAFAFA">
<TR>
<TD><PRE>                     IEBCOPY MESSAGES AND CONTROL STATEMENTS
  COPY INDD=IN,OUTDD=NEWPDS
   SELECT MEMBER=HCMEM1   -----------
   SELECT MEMBER=HCMEM2   -----------
   SELECT MEMBER=HCMEM3   -----------
   SELECT MEMBER=LMMEM1   -----------
   SELECT MEMBER=LMMEM2   -----------
   SELECT MEMBER=SASEXTRN -----------
          .
          .
          .
 IEB167I FOLLOWING MEMBER(S) COPIED FROM INPUT DATA SET REFERENCED BY IN
 IEB154I HCMEM1   HAS BEEN SUCCESSFULLY COPIED
 IEB154I HCMEM2   HAS BEEN SUCCESSFULLY COPIED
 IEB154I HCMEM3   HAS BEEN SUCCESSFULLY COPIED
 IEB154I LMMEM1   HAS BEEN SUCCESSFULLY COPIED
 IEB154I LMMEM2   HAS BEEN SUCCESSFULLY COPIED
 IEB154I SASEXTRN HAS BEEN SUCCESSFULLY COPIED
 IEB144I THERE ARE 239 UNUSED TRACKS IN OUTPUT DATA SET REFERENCED BY NEWPDS
 IEB149I THERE ARE 8 UNUSED DIRECTORY BLOCKS IN OUTPUT DIRECTORY
 IEB147I END OF JOB - 0 WAS HIGHEST SEVERITY CODE</PRE></TD></TR></TABLE>

<P>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217454">References</A></FONT></B></TD></TR></TABLE>

<P> 
<P>
<UL>

<LI>IBM's <B>DFSMS/MVS:
Utilities</B><P>
</UL>


<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0217368.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zoc-sort.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0217455.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0217440">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>