<HTML>
<!-- This page produced Fri Jul  9 14:14:38 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>SAS/GRAPH Statements : PATTERN Statement </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0724351.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zodschap.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zbolchap.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS/GRAPH Software: Reference                                                                                             </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="zernchap">PATTERN Statement</A></FONT></H1>


<P><A name="z0750799">&#13;
The PATTERN statement defines the characteristics of patterns used in graphs. </A>
<DL>
<DT>Used by:</DT>
<DD>GCHART, GCONTOUR, GMAP, and GPLOT
procedures; SYMBOL statement; Annotate facility<P></DD>
</DL>

<P>Global
<P>Assigned by default
<BR><H3>Description</H3>


<P>PATTERN statements create PATTERN definitions
that define the color and type of area fill for patterns used in graphs. 
These are the procedures and the graphics areas that they create that use
PATTERN definitions: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>GCHART</TD>
<TD align="left">2D and 3D bars in bar charts, blocks in block charts, 2D and 3D pie slices
in pie charts, and star slices in star charts</TD></TR>

<TR align=left valign="top">
<TD>GCONTOUR</TD>
<TD align="left">contour levels in contour plots</TD></TR>

<TR align=left valign="top">
<TD>GMAP</TD>
<TD align="left">map areas in choropleth, block, and prism maps; blocks in block maps</TD></TR>

<TR align=left valign="top">
<TD>GPLOT</TD>
<TD align="left">areas beneath or between plotted lines.</TD></TR>
</TABLE>

<P>In addition, the SYMBOL statement and certain Annotate
facility functions and macros can use pattern specifications. For details
see <A href="zbolchap.htm">SYMBOL Statement</A>
and <A href="zatachap.htm">The Annotate Data Set</A>.
<P>You can use the PATTERN statement to control the fill
and color of a pattern, and whether the pattern is repeated. There are three
types of patterns: 
<P>
<UL>

<LI>bar and block patterns<P>

<LI>map and plot patterns<P>

<LI>pie and
star patterns.<P>
</UL>

<P>Pattern fills can be solid or empty, or composed of
parallel or crosshatched lines.  In addition, you can specify device-dependent
hardware patterns for rectangle, polygon, and pie fills on devices that support
hardware patterns.
<P>If you do not create PATTERN definitions, SAS/GRAPH software
generates them as needed and assigns them to your graphs by default.  Generally,
the default behavior is to rotate a solid pattern through the current colors
list. For details, see <A href="#zdefault">About Default Patterns</A>.
<BR><H3>Syntax</H3>


<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PATTERN</B>&lt;1...99&gt;
<BR>&lt;COLOR=<I>pattern-color</I>&gt;
<BR>&lt;REPEAT=<I>number-of-times</I>&gt;
<BR>&lt;VALUE=<I>bar/block-pattern</I>
     
<BR>| <I>map/plot-pattern</I>         
<BR>| <I>pie/star-pattern</I>         
<BR>|
<I>hardware-pattern</I>&gt;;
</TD></TR></TABLE>
<P><A name="z0750820">&#13;
</A>
<P>
<UL>

<LI><B>bar/block-pattern</B> can be one of these: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>EMPTY</TD></TR>
<TR valign="top"><TD></TD><TD>SOLID</TD></TR>
<TR valign="top"><TD></TD><TD><B>style</B>
&lt;<B>density</B>></TD></TR></TABLE><P>

<LI><B>map/plot-pattern</B> can be one of these: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>MEMPTY</TD></TR>
<TR valign="top"><TD></TD><TD>MSOLID</TD></TR>
<TR valign="top"><TD></TD><TD>M<B>density</B> &lt;<B>style</B>
&lt;<B>angle</B>>></TD></TR></TABLE><P>

<LI><B>pie/star-pattern</B> can be one of these: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>PEMPTY</TD></TR>
<TR valign="top"><TD></TD><TD>PSOLID</TD></TR>
<TR valign="top"><TD></TD><TD>P<B>density</B> &lt;<B>style</B>
&lt;<B>angle</B>>></TD></TR></TABLE><P>

<LI><B>hardware-pattern</B> has this form: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>HW<B>xxxnnn</B></TD></TR></TABLE><P>
</UL>

<BR><H3>Options</H3>


<P><A name="z0750835">&#13;
</A>
<DL>
<DT><A NAME="z0725561"></A><A name="z0750836">&#13; 
COLOR=<B>pattern-color</B>  </A>
<BR>C=<B>pattern-color</B></DT>
<DD>specifies the color of the fill. <B>Pattern-color</B> is any SAS/GRAPH color
name. See <A href="zlorchap.htm">SAS/GRAPH Colors</A>
for more information  on specifying colors.
<P>Using COLOR= with a null value cancels the color specified
in a previous PATTERN statement of the same number without affecting the values
of other options.
<P> COLOR= overrides the CPATTERN= graphics option.
<P>The CFILL= option in the PIE and STAR statements overrides
COLOR=. For details, see <A href="zart-pie.htm#zpie-pat">Controlling Slice Patterns and Colors</A>. <DL>
<DT><B><FONT color="FF00007">CAUTION:</FONT></B></DT><DD><B>Omitting COLOR= in a PATTERN statement may cause the PATTERN statement
to generate multiple PATTERN definitions.</B>
&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"></DD></DL> If no color is specified for a PATTERN statement, that
is, if neither COLOR= nor CPATTERN= is used, the PATTERN statement rotates
the specified fill through each color in the colors list before the next PATTERN
statement is used.  For details, see <A href="#zrn-sequ">Understanding Pattern Sequences</A>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z1ying">Working with PATTERN Statements</A></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z8n04-ex.htm">Example 7.  Using BY-group Processing to Generate a Series of Charts</A></TD>
</TABLE>
<P></DD>

<DT><A name="z0750845">&#13;
REPEAT=<B>number-of-times</B></A>
<BR>R=<B>number-of-times</B></DT>
<DD>specifies the number of times that
a PATTERN definition is applied before the next PATTERN definition is used.
 By default, REPEAT=1.
<P> The behavior of REPEAT= depends on the color specification: 
<P>
<UL>

<LI>If you use both COLOR= and REPEAT= in a
PATTERN
statement, the pattern is repeated the specified number of times in the specified
color. The fill can be either the default solid or a fill specified with VALUE=.<P>

<LI>If you use CPATTERN= in a GOPTIONS statement to
specify a single pattern color, and use REPEAT= either alone or with VALUE=
in a PATTERN statement, the resulting hatch pattern is repeated the specified
number of times.<P>

<LI>If you omit both COLOR= and CPATTERN=, and use
REPEAT= either alone (generates default solids) or with VALUE= in a PATTERN
statement, the resulting pattern is rotated through each color in the colors
list, and then the entire group generated by this cycle is repeated the number
of times specified in REPEAT=.  Thus, the total number of patterns produced
depends on the number of colors in the current colors list.<P>
</UL>

<P>Using REPEAT= with a null value cancels the repetition
specified in a previous PATTERN statement of the same number without affecting
the values of other options.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See
also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#zrn-sequ">Understanding Pattern Sequences</A></TD>
</TABLE>
<P></DD>

<DT><A NAME="z0725564"></A><A name="z0750854">&#13; VALUE=<B>bar/block-pattern</B> </A>
<BR>V=<B>bar/block-pattern</B></DT>
<DD>specifies patterns for: 
<P>
<UL>

<LI> bar charts produced by the HBAR, HBAR3D, VBAR,
and VBAR3D statements in the GCHART procedure including 2D and 3D bar shapes.<P>

<LI>the front surface of blocks in block charts produced
by the BLOCK statement in the GCHART procedure.<P>

<LI>the blocks in block maps produced by the BLOCK
statement in the GMAP procedure. (The map area from which the block rises
takes a map pattern as described on the<A href="#z0725557">VALUE=</A>option). See also
<A href="z7ment.htm#z1-pat">About Block Maps and Patterns</A>.<P>
</UL>

<P>Values for <B>bar/block-pattern</B> are

<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>EMPTY   
<BR>E</TD>
<TD align="left">an empty pattern.</TD></TR>

<TR align=left valign="top">
<TD>SOLID  
<BR> S</TD>
<TD align="left">a solid pattern.</TD></TR>

<TR align=left valign="top">
<TD><B>style</B>&lt;<B>density</B>></TD>
<TD align="left">a shaded pattern.<BR><B>Style</B> specifies the direction of the lines: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>L</TD>
<TD align="left">left-slanting lines.</TD></TR>

<TR align=left valign="top">
<TD>R</TD>
<TD align="left">right-slanting lines.</TD></TR>

<TR align=left valign="top">
<TD>X</TD>
<TD align="left">crosshatched lines.</TD></TR>
</TABLE>

<P><B>Density</B> specifies the density of the pattern's
shading: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>1...5</TD>
<TD align="left">1 produces the lightest shading and 5 produces the heaviest
shading.</TD></TR>
</TABLE>
</TD></TR>
</TABLE>

<P><A name="z0750878">&#13;</A><A href="#zal-fig8">Bar and Block Patterns</A>
shows all of the patterns available for bars and blocks. 
<P>
<B><I><A name="zal-fig8">Bar and Block Patterns</A></I></B><BR>


<P><IMG border="0" src="./images/01329115.gif" vspace="12" alt="[IMAGE]">
<P>
<P> If no valid patterns are
available, default bar and
block fill patterns are selected in this order: 
<OL START="1" type="1">
<LI> SOLID<P>

<LI> X1-
X5<P>

<LI> L1- L5<P>

<LI> R1- R5<P>
</OL>

<P>Each fill is used once with
every color in the colors
list unless a pattern color is specified.  The entire sequence is repeated
as many times as required to provide the necessary number of patterns. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If the V6COMP graphics option is in effect, or if color
is limited to a single color with the CPATTERN= or COLORS= graphics options,
the order is X1- X5, L1- L5, R1- R5, S, and E.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P></DD>
</DL>


<DL>
<DT><A NAME="z0725557"></A>VALUE=<B>map/plot-pattern</B>  
<BR>V=<B>map/plot-pattern</B></DT>
<DD>specifies patterns for: 
<P>
<UL>

<LI>contour levels in contour plots produced by the
GCONTOUR procedure<P>

<LI>map area surfaces in block, choropleth, and prism
maps produced by the  BLOCK, CHORO, AND PRISM statements in the GMAP procedure.<P>

<LI>areas under curves in plots produced by the AREAS=
option in the PLOT statement in the GPLOT procedure.<P>
</UL>

<P>Values for <B>map/plot-pattern</B> are

<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>MEMPTY   
<BR>ME</TD>
<TD align="left">an empty pattern. EMPTY or E are
also valid aliases, except when used with the map areas in block maps created
by the GMAP procedure.</TD></TR>

<TR align=left valign="top">
<TD>MSOLID   
<BR>MS</TD>
<TD align="left">a solid pattern. SOLID or S are also
valid aliases, except when used with the map areas in block maps created by
the GMAP procedure.</TD></TR>

<TR align=left valign="top">
<TD>M<B>density</B>&lt;<B>style</B>&lt;<B>angle</B>>></TD>
<TD align="left">    a
shaded pattern.  <BR><B>Density</B> specifies the density
of the pattern's shading: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>1...5</TD>
<TD align="left">1 produces the lightest shading and 5 produces the heaviest shading.</TD></TR>
</TABLE>

<P><B>Style</B> specifies the type
of the pattern
lines: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>N</TD>
<TD align="left">parallel lines (the default).</TD></TR>

<TR align=left valign="top">
<TD>X</TD>
<TD align="left">crosshatched lines.</TD></TR>
</TABLE>

<P><B>Angle</B> specifies the angle of the pattern
lines: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>0...360</TD>
<TD align="left">the degrees at which the parallel lines are drawn, measured from the horizontal.
 By default, <B>angle</B> is 0 (lines are horizontal).</TD></TR>
</TABLE>
</TD></TR>
</TABLE>

<P><A name="z0750911">&#13; </A><A href="#zal-fig9">Map and Plot Patterns</A>
shows some typical map and  plot patterns. 
<P>
<B><I><A name="zal-fig9">Map and Plot Patterns</A></I></B><BR>


<P><IMG border="0" src="./images/01329116.gif" vspace="12" alt="[IMAGE]">
<P>
<P> If no
valid patterns are available, default map and
plot fill patterns are selected in this order: 
<OL START="1" type="1">
<LI> MSOLID<P>

<LI>M2N0<P>

<LI>M2N90<P>

<LI> M2X45<P>

<LI> M4N0<P>

<LI>M4N90<P>

<LI>M4X90<P>
</OL>

<P>Each fill is used once with every color in the colors
list unless a pattern color is specified.  The entire sequence is repeated
as many times as required to provide the necessary number of patterns. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If the V6COMP graphics option is in effect, or if color
is limited to a single color with the CPATTERN= or COLORS= graphics options,
MSOLID is not used and the default fill list starts with M2N0.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P></DD>
</DL>


<DL>
<DT><A NAME="z0726164"></A>VALUE=<B>pie/star-pattern</B>   
<BR>V=<B>pie/star-pattern</B></DT>
<DD> specifies patterns for pie and star
charts produced by the PIE and STAR statements in the GCHART procedure. Values
for <B>pie/star-pattern</B> are 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>PEMPTY   
<BR>PE</TD>
<TD align="left">an empty pattern. EMPTY or E are
also valid aliases.</TD></TR>

<TR align=left valign="top">
<TD>PSOLID   
<BR>PS</TD>
<TD align="left"> a solid pattern. SOLID or S are
also valid aliases.</TD></TR>

<TR align=left valign="top">
<TD>P<B>density</B>&lt;<B>style</B>&lt;<B>angle</B>>></TD>
<TD align="left">     a shaded
pattern.  
<P><B>Density</B> specifies the density of the pattern's
shading: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>1...5</TD>
<TD align="left">1 produces the lightest shading and 5 produces the heaviest shading.</TD></TR>
</TABLE>

<P><B>Style</B> specifies the type
of the pattern
lines: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>N</TD>
<TD align="left">parallel lines (the default).</TD></TR>

<TR align=left valign="top">
<TD>X</TD>
<TD align="left">crosshatched lines.</TD></TR>
</TABLE>

<P><B>Angle</B> specifies the angle of the pattern
lines: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>0...360</TD>
<TD align="left">the angle of the lines, measured in degrees from perpendicular to the radius
of the slice.  By default, <B>angle</B> is 0.</TD></TR>
</TABLE>
</TD></TR>
</TABLE>

<P>The FILL= option in the PIE and STAR statements in the
GCHART procedure overrides VALUE=.
<P><A name="z0750944">&#13;
</A><A href="#zl-fig10">Pie and Star Patterns</A>
shows some typical pie and star patterns. 
<P>
<B><I><A name="zl-fig10">Pie and Star Patterns</A></I></B><BR>


<P><IMG border="0" src="./images/01329117.gif" vspace="12" alt="[IMAGE]">
<P>
<P> If no
valid patterns are available, default pie and
star fill patterns are selected in this order: 
<OL START="1" type="1">
<LI>PSOLID<P>

<LI>P2N0<P>

<LI>P2N90<P>

<LI> P2X45<P>

<LI> P4N0<P>

<LI>P4N90<P>

<LI>P4X90<P>
</OL>

<P>Each fill is used once with every color in the colors
list unless a pattern color is specified.  The entire sequence is repeated
as many times as required to provide the necessary number of patterns. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If the V6COMP graphics option is in effect, or if color
is limited to a single color with the CPATTERN= or COLORS= graphic options,
PSOLID is not used and the default fill list starts with P2N0.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If you use hatch patterns
and request a legend instead of slice labels, the patterns in the slices are
oriented to be visually equivalent to the legend.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P></DD>
</DL>
 
<DL>
<DT><A name="z0750957">&#13; VALUE=HW<B>xxxnnn</B></A></DT>
<DD>specifies a hardware pattern where 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>HW</TD>
<TD align="left">identifies the pattern as a hardware pattern. The pattern name must begin
with the characters HW.</TD></TR>

<TR align=left valign="top">
<TD><B>xxx</B></TD>
<TD align="left">the last two or three characters of the module name in the <B>Module</B> field in the Detail window of your device entry.  If the module
name has eight characters (SASGDPSL, for example), use the last three characters
(PSL).  If the module name has only seven characters (SASGDVT, for example),
use the last two characters (VT).</TD></TR>

<TR align=left valign="top">
<TD><B>nnn</B></TD>
<TD align="left">the number the driver uses to identify the device-dependent
pattern. Patterns and associated pattern numbers vary from device to device.
 See the documentation for your device for valid pattern numbers.  For a brief
description of some valid values for various devices, see <A href="#z-device">Specifying Device-Dependent Hardware Patterns</A>.</TD></TR>
</TABLE>

<P>If
you specify a hardware pattern for a device that
does not support hardware patterns, or if you specify an invalid pattern number,
a solid rectangle, polygon, or pie fill is substituted. A solid fill will
also be used in place of a hardware pattern in certain types of clipped polygons.
See the PCLIP and POLYGONCLIP options in <A href="z0713550.htm">Graphics Options and Device Parameters Dictionary</A> for more information on using hardware
patterns with clipped polygons.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See
also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z-device">Specifying Device-Dependent Hardware Patterns</A></TD>
</TABLE>
<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Using the PATTERN Statement</FONT></B></TD></TR></TABLE>

<P>PATTERN statements can be located anywhere in your SAS
program.  They are global and remain in effect until redefined, canceled,
or until the end of your SAS session.
<P> You can define up to 99 different PATTERN statements.
  A PATTERN statement without a number is treated as a PATTERN1 statement.
<P>PATTERN statements generate one or more PATTERN definitions,
depending on how the COLOR= and VALUE= options are used. For information on
 PATTERN definitions, see <A href="#z1ying">Working with PATTERN Statements</A>,
as well as the description of <A href="#z0725561">COLOR=</A>  and
<A href="#z0725557">VALUE=</A>.
<P>PATTERN definitions are generated in the order in which
the statements are numbered, regardless of gaps in the numbering or the statement's
position in the program. Although it is common practice, you do not have to
start with PATTERN1, and you do not have to use sequential statement numbers.
<P>PATTERN definitions are applied automatically to all
areas of the graphics output that require patterns. When assigning PATTERN
definitions, SAS/GRAPH starts with
the lowest-numbered definition with an appropriate fill specification or with
no fill specification.  It continues to use the specified patterns until all
valid PATTERN definitions have been used. Then, if more patterns are required, SAS/GRAPH returns
to the default pattern rotation, but continues to outline the areas in the
same color as the fill.
<BR><H3>Altering or Canceling PATTERN Statements</H3>


<P><A name="z0750972">&#13;
 PATTERN statements are additive.  If you define
a PATTERN statement and later submit another PATTERN statement with the same
number, the new PATTERN statement redefines or cancels only the options that
are included in the new statement.  Options not included in the new statement
are not changed and remain in effect. For example, assume you define PATTERN4
as  


</A>
<PRE>pattern4 value=x3 color=red repeat=2;</PRE>
<P>This statement cancels only REPEAT= without affecting
the rest of the definition:  



<PRE>pattern4 repeat=;</PRE>
<P>Add or change options in the same way.  This statement
changes the color of the pattern from red to blue:  



<PRE>pattern4 color=blue;</PRE>
<P>After all these modifications, PATTERN4 has these characteristics:
 



<PRE>pattern4 value=x3 color=blue;</PRE>
<P>Cancel individual PATTERN statements by defining a PATTERN
statement of the same number without options (a null statement):  



<PRE>pattern4;</PRE>
<P>Canceling one PATTERN statement does not affect any
other PATTERN definitions.  To cancel all current PATTERN statements, use
the RESET= option in a GOPTIONS statement:  



<PRE>goptions reset=pattern;</PRE>
<P>Specifying RESET=GLOBAL or RESET=ALL cancels all current
PATTERN definitions as well as other settings.
<P>To display a list of current PATTERN definitions in
the LOG window, use the GOPTIONS procedure with the PATTERN option:  



<PRE>proc goptions pattern nolist;
run;</PRE>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="zdefault">About Default Patterns</A></FONT></B></TD></TR></TABLE>

<P><A name="z0750980">&#13;
When
a procedure produces a graph that needs one or more patterns, SAS/GRAPH either </A>
<P>
<UL>

<LI>automatically generates the
appropriate default
patterns and outlines to fill the areas, or<P>

<LI>uses patterns, colors, and outlines that are defined
by PATTERN statements, graphics options, and procedure options.<P>
</UL>

<P>In order to understand how SAS/GRAPH
generates
and assigns patterns defined with PATTERN statements it is helpful to understand
how it generates and assigns default patterns. The following sections describe
the default pattern behavior for all procedures. See <A href="#z1ying">Working with PATTERN Statements</A> for details about
defining patterns.
<BR><H3><A name="z0724402">How Default Patterns and Outlines Are Generated</A></H3>


<P><A name="z0750984">&#13;
In general, SAS/GRAPH uses
default patterns when no PATTERN statements are defined. Typically, the default
pattern that SAS/GRAPH uses is a solid
fill that it rotates once through the colors list, skipping the foreground
color. By default, SAS/GRAPH also outlines
all areas in the foreground color. (Typically, the foreground color is the
first color in the device's colors list.)</A>
<P>Specifically, SAS/GRAPH uses
default patterns and outlines when you 
<P>
<UL>

<LI>do not specify <B>any</B> PATTERN statements,
and<P>

<LI>do not use the CPATTERN= graphics option, and<P>

<LI>do not use the COLORS= graphics options (that
is, you use the device's default colors list and it has more than one color),
and<P>

<LI>do not use the COUTLINE= option in the action
statement.<P>
</UL>

<P>If all of these conditions are true, then SAS/GRAPH

<P>
<UL>

<LI>selects the first default fill for the appropriate
pattern, which is always solid, and rotates it once through the colors list,
generating one solid pattern for each color.  If the first color in the device's
colors list is black (or white), SAS/GRAPH skips
that color and begins generating patterns with the next color. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;The one exception to the default solid pattern is the map
area pattern in a block map produced by the GMAP procedure, which uses a hatch
fill by default.  By default the map areas and their outlines use the first
color in the colors list, regardless of whether the list is the default device
list or one specified with COLORS= in the GOPTIONS statement.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P>

<LI>uses the foreground color to outline every patterned
area.<P>
</UL>

<P>For example, the default colors list for the PSCOLOR
device contains BLACK, RED, GREEN, BLUE, CYAN, MAGENTA, YELLOW, and GRAY.
Therefore, for this device, the first five default patterns are solid red,
solid green, solid blue, solid cyan, and solid magenta. These patterns are
all outlined in black, the first color in the colors list.
<P>If a procedure needs additional patterns, SAS/GRAPH selects
the next default pattern fill appropriate to the graph and rotates it through
the colors list, skipping the foreground color as before. SAS/GRAPH continues
in this fashion until it has generated enough patterns for the chart.
<BR><H3>Things That Affect Default Patterns</H3>


<P> Changing any of these conditions may
change or override the default behavior: 
<P>
<UL>

<LI> If you specify a colors list with the COLORS=
option in a GOPTIONS statement and the list contains more than one color, SAS/GRAPH rotates
the default fills, beginning with SOLID, through that list. In this case,
it uses every color, even if the foreground color is black (or white).  The
default outline color remains the foreground color.<P>

<LI> If you specify either COLORS=(<B>one-color</B>) or the CPATTERN= graphics option, the default fill
changes from SOLID
to the appropriate list of hatch patterns. SAS/GRAPH uses
the specified color to generate one pattern definition for each hatch pattern
in the list. The default outline color remains the foreground color.<P>

<LI>Whenever you specify PATTERN statements, whether
or not the procedure can use them, the default outline color for all patterns
changes from foreground to SAME. Therefore, when a procedure runs out of specified
patterns and returns to the default pattern rotation, the outline color is
SAME, not foreground.<P>
</UL>

<P>For a description of these graphics options, see
<A href="z0713550.htm">Graphics Options and Device Parameters Dictionary</A>.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z1ying">Working with PATTERN Statements</A></FONT></B></TD></TR></TABLE>

<P>With PATTERN statements, you can specify 
<P>
<UL>

<LI>the type of fill
(VALUE=)<P>

<LI>the color of the fill    (COLOR=)<P>

<LI>how many times to apply the statement before using
the next one   (REPEAT=).<P>
</UL>

<P>You can also use procedure options to specify the pattern
outline color and the CPATTERN= graphics option to specify a default color
for all patterns.
<P>Whether you use PATTERN statement options alone or with
each other affects the number and kind of patterns your PATTERN statements
generate. Depending on the options you use, you can explicitly specify every
pattern used by your graphs or you can let the PATTERN statement generate
a series of pattern definitions using either the colors list or the list of
default fills.
<BR><H3>Explicitly Specifying Patterns</H3>


<P><A name="z0751007">&#13; To explicitly specify all the patterns
in your graph, you need to do one of the following for every pattern your
graph requires: </A>
<P>
<UL>

<LI> Provide a PATTERN statement that uses the COLOR=
option to specify the pattern color, for example  



<PRE>pattern1 color=red;</PRE>
<P>By default, the fill type SOLID.<P>

<LI>Provide a PATTERN statement that uses both the
COLOR= option and the VALUE= option to specify the fill, for example  



<PRE>pattern1 color=blue value=r3;</PRE><P>
</UL>

<P>Including COLOR= in the PATTERN statement is the simplest
way to assure that you get exactly the patterns you want. When you use the
COLOR= option, the PATTERN statement generates exactly one PATTERN definition
for that statement. If you also use the REPEAT= option, the PATTERN definition
is repeated the specified number of times.
<BR><H3>Generating Multiple Pattern Definitions</H3>


<P><A name="z0751012">&#13;
 You can also use PATTERN statements to generate
multiple PATTERN definitions. To do this  use the VALUE= option to specify
the type of fill you want but omit the COLOR= option - for example  


</A>
<PRE>pattern1 value=r3;</PRE>
<P>In this case, the PATTERN statement rotates the R3 fill
through all the colors in the colors list. For more information on pattern
rotation, see <A href="#zrn-sequ">Understanding Pattern Sequences</A>.
<BR><H3>Selecting an Appropriate Pattern</H3>


<P><A name="z0751014">&#13; The type of fill you specify depends
on the type of graph you
are producing: </A>
<P>
<TABLE cellpadding="6" cellspacing="0" border="1">


<TR valign="bottom" bgcolor="#CCCCCC">
  <TH  align="LEFT" valign="BOTTOM" ><B>With... </B></TH>
  <TH  align="LEFT" valign="BOTTOM" ><B>Use... </B></TH>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">bar and block charts (PROC GCHART),   block maps (PROC
GMAP)</TD>
  
<TD  align="LEFT" valign="TOP"><A href="#z0725564">VALUE= bar/block-pattern</A><BR></TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">contour
plots (PROC GCONTOUR),     map area surfaces (PROC GMAP)    </TD>
  
<TD  align="LEFT" valign="TOP"><A href="#z0725557">VALUE=map/plot-pattern</A><BR></TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">pie and star charts (PROC
GCHART) </TD>
  
<TD  align="LEFT" valign="TOP"><A href="#z0726164">VALUE=pie/star-pattern</A><BR></TD>
</TR>

</TABLE>

<BR>

<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If you specify a fill that is
inappropriate for the type of graph you are generating (for example, if you
specify VALUE=L1 in a PATTERN statement for a choropleth map), SAS/GRAPH ignores
the PATTERN statement and continues searching for a valid pattern.  If it
does not find a definition with a valid fill specification, it uses default
patterns instead.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<BR><H3>Controlling Outline Colors</H3>


<P><A name="z0751024">&#13;Whenever you use PATTERN statements, the
default outline color
is the same as the fill color, for example, a blue bar has a blue outline.
The effect is the same as specifying COUTLINE=SAME.  Even when the procedure
runs out of user-defined patterns and generates default patterns, the outlines
continue to match the interior fill color.</A>
<P>To change the outline color of any pattern, whether
default or user-defined, use the COUTLINE= option in the action statement
that generates the chart.
<BR><H3><A name="zpattern">The Effect of the CPATTERN= Graphics Option</A></H3>


<P><A name="z0751026">&#13;
Although the CPATTERN= graphics option is used  most often
with default patterns, it does affect the PATTERN statement. With default
patterns (no PATTERN statements specified) it </A>
<P>
<UL>

<LI>specifies the color for all patterns<P>

<LI>causes default patterns to use
hatched fills instead
of the default SOLID.<P>
</UL>

<P>In conjunction with the PATTERN statement it does the
following: 
<P>
<UL>

<LI> With a PATTERN statement that only specifies
a fill (VALUE=), CPATTERN= determines the color of that fill. For example,
these statements produce two green, hatched patterns:  



<PRE>goptions cpattern=green;
pattern1 value=x3;
pattern2 value=x1;</PRE><P>

<LI>With a PATTERN statement that only specifies a
color (COLOR=), the COLOR= option overrides the   CPATTERN= color, but CPATTERN=
causes the fill to be hatched, not the default SOLID. For example, these statements
produce one red, hatched pattern:  



<PRE>goptions cpattern=green;
pattern1 color=red;</PRE><P>
</UL>

<P>See also the description of <A href="z1tern.htm">CPATTERN=</A>.
<BR><H3>Specifying Version 6 Patterns</H3>


<P><A name="z0751033">&#13; If you specify the V6COMP graphics
option, SAS/GRAPH generates
patterns by rotating the appropriate Version 6 default patterns through all
the colors in the colors list. With V6COMP, all patterns are outlined in the
same color as the fill.</A>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z-device">Specifying Device-Dependent Hardware Patterns</A></FONT></B></TD></TR></TABLE>

<P><A name="z0751034">&#13; You can specify device-dependent hardware patterns with the types
of device drivers described in this section.</A>
<BR><H3>GDDM Drivers</H3>


<P><A name="z0751035">&#13; GDDM drivers include several sets of hardware patterns.
These patterns include both predefined and user-defined (device-dependent)
fill patterns.  When you use a hardware pattern with a GDDM driver, specify
the name of the device-dependent pattern set you want the driver to use. This
name will be stored in the GPROLOG string in the device entry for the driver.
 Specify the name of the pattern set in either of these ways: </A>
<P>
<UL>

<LI>Use the GPROLOG= graphics option to assign the
pattern set name to the GPROLOG string.<P>

<LI>Enter the pattern set name in the Gprolog window
of the device entry for the GDDM device driver.<P>
</UL>

<P>If you do not specify a pattern set name, the device
uses a predefined pattern.
<P>Values for <B>nnn</B> for predefined patterns
are 1 through 16.  Values for <B>nnn</B> for device-dependent patterns
are 65 through 128.
<P>Information regarding both types of fill patterns can
be found in <B>GDDM Application Programming Guide</B>. For additional
information on specifying hardware patterns with GDDM drivers, see also the <B>GDDM Base Programming Reference</B>.
<BR><H3>TEK42xx Series Terminal Drivers</H3>


<P><A name="z0751041">&#13; TEK42xx series terminal
drivers support the predefined
fill patterns found in the Technical Reference Guide for each terminal.  These
drivers can also support user-defined fill patterns.  Values for <B>nnn</B> for these drivers are numbers less than 175.</A>
<BR><H3>HPLJxxxx Drivers</H3>


<P><A name="z0751042">&#13; HPLJxxxx drivers for the HP LaserJet support the
predefined
shading levels and predefined fill patterns for rectangle fill only.  These
patterns are documented in the appropriate HP LaserJet technical manual. Values
for <B>nnn</B> for shading levels are 001 through 008.  Values for fill
patterns are 009 through 014.</A>
<BR><H3>Metagraphics Drivers</H3>


<P><A name="z0751043">&#13; Metagraphics drivers can use the hardware
patterns supported
by the device for which they are written. When you specify hardware patterns
for a metagraphics driver, values of <B>nnn</B> can range from 0 through
999.</A>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="zrn-sequ">Understanding Pattern Sequences</A></FONT></B></TD></TR></TABLE>

<P><A name="z0751044">&#13; Pattern sequences are sets of PATTERN definitions that SAS/GRAPH automatically
generates when a PATTERN statement specifies a fill but not a color.  In this
case, the specified fill is used once with every color in the colors list.
 If REPEAT= is also used, the resulting PATTERN definitions are repeated the
specified number of times.</A>
<BR><H3>Generating Pattern Sequences</H3>


<P> SAS/GRAPH generates
pattern sequences when a PATTERN statement uses VALUE= to specify a fill and
all of the following conditions are also true: 
<P>
<UL>

<LI>the COLOR=  option is not used in  the PATTERN
statement<P>

<LI>the CPATTERN= graphics option is not used<P>

<LI>the colors list, either default or user-specified,
contains more than one color.<P>
</UL>

<P>In this case, the PATTERN statement rotates the fill
specified by VALUE= through every color in the colors list, generating one
PATTERN definition for every color in the list. After every color has been
used once, SAS/GRAPH goes to the next
PATTERN statement. For example, suppose you specified the following colors
list and PATTERN statements for bar/block patterns:  



<PRE>goptions colors=(blue red green) ctext=black;
pattern1 color=red   value=x3;
pattern2 value=r3;
pattern3 color=blue  value=l3;</PRE>
<P>Here, 


<CODE><B>PATTERN1</B></CODE> generates the first PATTERN definition. 


<CODE><B>PATTERN2</B></CODE> omits COLOR=, so the specified fill is rotated through all
three colors in the colors list before the PATTERN3 statement is used.  This
table shows the color and fill of the PATTERN definitions that would be generated
if nine patterns were required: 
<P>
<TABLE cellpadding="6" cellspacing="0" border="1">


<TR valign="bottom" bgcolor="#CCCCCC">
  <TH  align="LEFT" valign="BOTTOM" ><B>Definition   Number</B></TH>
  <TH  align="LEFT" valign="BOTTOM" ><B> Source </B></TH>
  <TH  align="LEFT" valign="BOTTOM" ><B>Characteristics: Color </B></TH>
  <TH  align="LEFT" valign="BOTTOM" ><B> Fill </B></TH>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">1   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN1   </TD>
  
<TD  align="LEFT" valign="TOP">red   </TD>
  
<TD  align="LEFT" valign="TOP">x3</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">2   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2</TD>
  
<TD  align="LEFT" valign="TOP">blue
  </TD>
  
<TD  align="LEFT" valign="TOP">r3</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">3   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2   </TD>
  
<TD  align="LEFT" valign="TOP">red    </TD>
  
<TD  align="LEFT" valign="TOP">r3</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">4   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2   </TD>
  
<TD  align="LEFT" valign="TOP">green   </TD>
  
<TD  align="LEFT" valign="TOP">r3</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">5   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN3    </TD>
  
<TD  align="LEFT" valign="TOP">blue   </TD>
  
<TD  align="LEFT" valign="TOP">l3</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">6   </TD>
  
<TD  align="LEFT" valign="TOP">first default   </TD>
  
<TD  align="LEFT" valign="TOP">blue   </TD>
  
<TD  align="LEFT" valign="TOP">solid</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">7   </TD>
  
<TD  align="LEFT" valign="TOP">first default   </TD>
  
<TD  align="LEFT" valign="TOP">red    </TD>
  
<TD  align="LEFT" valign="TOP">solid</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">8    </TD>
  
<TD  align="LEFT" valign="TOP">first default   </TD>
  
<TD  align="LEFT" valign="TOP">green   </TD>
  
<TD  align="LEFT" valign="TOP">solid</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">9    </TD>
  
<TD  align="LEFT" valign="TOP">second default   </TD>
  
<TD  align="LEFT" valign="TOP">blue </TD>
  
<TD  align="LEFT" valign="TOP">x1</TD>
</TR>

</TABLE>

<BR>
<P>Notice that after all the
PATTERN statements are exhausted,
the procedure begins using the default bar and block patterns, beginning with
SOLID.  Each fill from the default list is rotated through all three colors
in the colors list before the next default fill is used.
<BR><H3>Repeating Pattern Sequences</H3>


<P>If you use REPEAT= but not COLOR=, the
sequence generated by cycling the definition through the colors list is repeated
the number of times specified by REPEAT=. For example, these statements illustrate
the effect of REPEAT= on PATTERN statements both with and without explicit
color specifications:  



<PRE>goptions colors=(red blue green);
pattern1 color=gold repeat=2;
pattern2 value=x1 repeat=2;</PRE>
<P>Here, 


<CODE><B>PATTERN1</B></CODE> is used twice and 


<CODE><B>PATTERN2</B></CODE> cycles through the list of three colors and then repeats this cycle
a second time: 
<P>
<TABLE cellpadding="6" cellspacing="0" border="1">


<TR valign="bottom" bgcolor="#CCCCCC">
  <TH  align="LEFT" valign="BOTTOM" ><B>Sequence  Number</B></TH>
  <TH  align="LEFT" valign="BOTTOM" ><B> Source </B></TH>
  <TH  align="LEFT" valign="BOTTOM" ><B>Characteristics: Color </B></TH>
  <TH  align="LEFT" valign="BOTTOM" ><B> Fill </B></TH>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">1   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN1   </TD>
  
<TD  align="LEFT" valign="TOP">gold   </TD>
  
<TD  align="LEFT" valign="TOP">solid (first default)</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">2   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN1  </TD>
  
<TD  align="LEFT" valign="TOP">gold   </TD>
  
<TD  align="LEFT" valign="TOP">solid (first default)</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">3   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2   </TD>
  
<TD  align="LEFT" valign="TOP">red    </TD>
  
<TD  align="LEFT" valign="TOP">x1</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">4   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2   </TD>
  
<TD  align="LEFT" valign="TOP">blue    </TD>
  
<TD  align="LEFT" valign="TOP">x1</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">5   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2   </TD>
  
<TD  align="LEFT" valign="TOP">green</TD>
  
<TD  align="LEFT" valign="TOP">x1</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">6   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2   </TD>
  
<TD  align="LEFT" valign="TOP">red     </TD>
  
<TD  align="LEFT" valign="TOP">x1</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">7   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2   </TD>
  
<TD  align="LEFT" valign="TOP">blue    </TD>
  
<TD  align="LEFT" valign="TOP">x1</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  align="LEFT" valign="TOP">8   </TD>
  
<TD  align="LEFT" valign="TOP">PATTERN2   </TD>
  
<TD  align="LEFT" valign="TOP">green    </TD>
  
<TD  align="LEFT" valign="TOP">x1</TD>
</TR>

</TABLE>

<BR>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0724351.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zodschap.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zbolchap.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#zernchap">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>