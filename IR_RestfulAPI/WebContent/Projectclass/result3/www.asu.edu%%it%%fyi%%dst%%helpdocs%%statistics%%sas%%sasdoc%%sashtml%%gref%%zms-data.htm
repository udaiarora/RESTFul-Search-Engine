<HTML>
<!-- This page produced Fri Jul  9 14:14:38 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>SAS/GRAPH Programs : SAS Data Sets </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0696047.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zs-parts.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zengines.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS/GRAPH Software: Reference                                                                                             </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="zms-data">SAS Data Sets</A></FONT></H1>


<P> Many SAS/GRAPH procedures
use SAS data sets as input or output. When a SAS/GRAPH procedure
requires an input SAS data set, you usually specify the data set with the
DATA= option in the procedure statement, as shown in this example:  



<PRE>proc gplot data=reflib.stocks;</PRE>
<P>If you omit the DATA= option, the procedure uses the value of the SAS
system option _LAST_=.  The default for _LAST_= is the most recently created
SAS data set (either permanent or temporary) in the current SAS job or session.
<P>If you do not specify a data set and no data set has been created in
the current SAS session, an error occurs and the procedure stops.
<P>
Most of the procedures that read data sets or create output data sets accept
data set options. SAS data set options appear in parentheses after the data
set specification, as shown in this example:  



<PRE>proc gplot data=reflib.stocks(where=(year=1997));</PRE>
<P>For more information on SAS data sets and other data processing details,
see <B>SAS Language Reference: Concepts</B>. For a complete discussion of SAS data set options and SAS system
options, see <B>SAS Language Reference: Dictionary</B>.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Temporary and Permanent SAS Data Sets</FONT></B></TD></TR></TABLE>

<P>    SAS data sets are stored in
SAS libraries and can be
temporary or permanent.  You can specify a data set in either of two methods:
using a library reference, or using a file specification. A library reference
is specified without quotation marks in the form <I>libref.SAS-data-set-name</I>. A file specification must be enclosed in single quotation
marks and uses the file naming conventions of your operating environment.
<BR><H3>Using a Library Reference to Specify a Data Set</H3>


<P>Typically,
temporary SAS data sets are stored in the WORK data library and are referenced
with a one-level name. The WORK library is defined automatically at the beginning
of the SAS session and is automatically deleted at the end of the SAS session.
Procedures assume that SAS data sets that are specified with a one-level name
are to be read from, or written to, the WORK data library, unless you specify
a USER data library.  For example, this statement specifies a temporary data
set from the WORK library:  



<PRE>proc gplot data=stocks;</PRE>
<P>Typically, permanent SAS data sets have a two-level name of the form <B>libref.SAS-data-set-name</B> in which <B>libref</B> identifies a
storage location on your host system. A LIBNAME statement associates a libref
with the storage location. See also <A href="zs-parts.htm#zlibname">LIBNAME Statement</A>.  For example, these statements specify
a permanent data set:  



<PRE>libname reflib '<I>my-SAS-library</I>';
proc gplot data=reflib.stocks;</PRE>
<P>You can use a one-level name for permanent SAS data sets if you specify
a USER data library. In this case, the procedure assumes that data sets with
one-level names are in the USER data library instead of in the WORK data library.
You can assign a USER data library with a LIBNAME statement or the USER= SAS
system option. For example, these statements use a single-level name to specify
a permanent data set that is stored in the library identified as the USER
library:  



<PRE>options user='<I>my-SAS-library</I>';
proc gplot data=stocks;</PRE>
<BR><H3>Using a File Specification to Specify a Data Set</H3>


<P>To use a file specification for specifying a data set, enclose the file
specification in single quotation marks. The specification can be a filename,
or a path and filename. The specification must follow the file naming conventions
of your operating environment.
<P>For example, the following code creates a file named <B>mydata</B>
in the default storage location, which is the location where the SAS session
was started:



<PRE>data 'mydata';</PRE>
<P>The quotes are required for a file specification; if omitted, SAS treats
the specification as a library reference. In the above example, if the quotes
are omitted, SAS creates the data set in the temporary WORK catalog and identifies
it by the name WORK.MYDATA.
<P>To create the file in a location other than the default location, the
quoted file specification must include the full path to the desired location.
<P>You cannot use quoted file specifications for
<P>
<UL>

<LI>SAS catalog
names<P>

<LI>MDDB and FDB references<P>

<LI>PROC SQL<P>

<LI>the _LAST_= system option.<P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Data Set Requirements</FONT></B></TD></TR></TABLE>

<P>  SAS/GRAPH procedures
often have certain requirements for the input data sets they use.  Some procedures
may expect the input data set to be sorted in a certain way while others may
require the data set to contain certain variables or types of information.
If necessary, you can use DATA steps and base SAS procedures in your program
to manipulate the data appropriately. For specific requirements, see "About
the Input Data Set" in the "Concepts" section of the procedure chapter.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Automatic Data Set Locking</FONT></B></TD></TR></TABLE>

<P> All SAS/GRAPH procedures
that produce graphics output automatically lock the input data sets during
 processing.  By locking a data set, SAS/GRAPH software
prevents another user from updating the data at the same time you are using
it to produce a graph.  If data in a data set changes while you are using
it to draw a graph, unpredictable results can occur in the graph or your program
may end with errors.

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0696047.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zs-parts.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zengines.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#zms-data">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>