<HTML>
<!-- This page produced Tue Jul 20 10:24:46 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Buffer Class : Overview </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="zfer-doc.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z38ents.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zerattrs.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS/AF Software: Class Dictionary                                                                                         </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="zferover">Overview</A></FONT></H1>


<P> The Buffer
class is provided to allow remote objects to send and receive serialized data.
The buffer is implemented in C and is not directly accessible from SCL. The
_init method of the Buffer class creates the buffer and puts the pointer to
the buffer into a list item of pointer type on the BUFFER attribute. The Input
Buffer and Output Buffer subclasses are provided to allow access to the buffer
from SCL. Numeric types that are written to the buffer are written as a particular
number of bytes containing the numeric data, either in integer or floating
point format. Single characters and character strings are treated the same
way when written to the buffer. Two bytes containing the length of the string
(as an integer value) are written to the buffer followed by the characters
of the string. Lists are written to the buffer using a special list format.
Since there are no type specifiers for items placed in the buffer, it is up
to the writer and reader of the buffer to coordinate what is being written
and read. Reading an item with a different type than the type of the item
that was written can cause unpredictable results.
<P>
<DL>
<DT><B>Parent:</B></DT>
<DD><A href="zect-doc.htm">Object Class</A><P></DD>

<DT><B>Class:</B></DT>
<DD>sashelp.classes.Buffer.class<P></DD>
</DL>


<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="zfer-doc.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z38ents.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zerattrs.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#zferover">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>