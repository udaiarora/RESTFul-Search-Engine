<HTML>
<!-- This page produced Fri Jul  9 14:14:38 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>SAS/GRAPH Output : Storing Graphics Output in SAS Catalogs </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0696063.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zardcopy.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zt-gedit.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS/GRAPH Software: Reference                                                                                             </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="zatalogs">Storing Graphics Output in SAS Catalogs</A></FONT></H1>


<P><A name="z0748115">&#13;
   When you run a SAS/GRAPH procedure
that produces graphics output, a copy of the graphics output is always stored
in a SAS catalog.  A <B>catalog</B> is a type of SAS file in which you
can store different types of information, called <B>catalog entries</B>.
 Catalog entries of type GRSEG store graphics output. In addition, SAS/GRAPH procedures
create other types of catalog entries such as DEV, CMAP, FONT, and TEMPLATE.
You can store multiple catalog entries in one catalog.</A>
<P>You can use catalog entries to store graphics output
that you want to display again without having to rerun the program. Use the
GRAPH window, the GREPLAY procedure, or the SAS Explorer window to redisplay
graphics output stored in catalog entries.
<P><A name="z0748117">&#13;    SAS catalogs can be
either temporary
or permanent.  <B>Temporary catalogs</B> are erased at the end of each
SAS session and cannot be retrieved.  <B>Permanent catalogs</B> are
retained until you delete them. Therefore, they exist after the end of a SAS
session and can be used in later SAS sessions.</A>
<P>Unless you select another catalog, either temporary
or permanent, SAS/GRAPH procedures
always store a copy of your graph in the temporary catalog WORK.GSEG, regardless
of the other forms of graphics output that you choose.  By default, each graph
is <B>appended</B> to the catalog.  The graphs in WORK.GSEG are erased
when you end the SAS session.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Accessing Catalogs from Different Versions of SAS</FONT></B></TD></TR></TABLE>

<P><A name="z0748119">&#13; </A><DL>
<DT><B><FONT color="FF00007">CAUTION:</FONT></B></DT><DD><B>You can read Version 6 catalogs from Version 7 and Version 8, but
you cannot write to them unless you port them.</B>
&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"></DD></DL> In some cases you have to specify an engine to read
a Version 6 catalog from the current SAS version: 
<P>
<UL>

<LI>If you are running the current version and you
assign a libref that points to a library that contains only Version 6 catalogs,
the correct engine is automatically applied and you can view the entries.
However, you cannot write to the catalog without porting it.<P>

<LI>If you are running Version 7 or Version 8 and
you assign a libref that points to a library that contains both Version 6
and the current version  catalogs, the LIBNAME statement must specify the
SASEB engine to view the entries in the Version 6 catalog. Even with the engine
assigned, you cannot write to the catalog without porting it.<P>
</UL>

<P>For more information, see
<A href="zt-trans.htm#zt-cport">Transporting Catalogs across Operating Environments</A>.
<P>All Version 7 and Version 8 applications that support
catalog entries that also existed in Version 6 should be able to transparently
read those Version 6 catalog entries. That is, if a Version 7 or Version 8
user specifies the SASEB (Version 6 compatibility) engine on the LIBNAME statement,
the application should be able to read and process any Version 6 data that
the SASEB engine may return.
<P>The Version 7 and Version 8 compatibility engines also
support write access to Version 6 catalogs.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="ztcreate">Creating and Specifying Catalogs</A></FONT></B></TD></TR></TABLE>

<P><A name="z0748127">&#13; To
create or specify a catalog for graphics output, use the GOUT= option in a
PROC statement.  The general form is</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PROC</B> <I>procedure-name</I> GOUT=&lt;<I>libref.</I>&gt;
<I>catalog-name</I>;
</TD></TR></TABLE>
<DL>
<DT><B>procedure-name</B></DT>
<DD>is the graphics procedure you are running.<P></DD>

<DT>&lt;<B>libref.</B>><B>catalog-name</B></DT>
<DD>is the name of a catalog where you want
the output stored.  If the specified catalog already exists, the procedure
simply adds a catalog entry to the catalog.  If the catalog does not exist,
it is created.
<P>For a temporary catalog, specify the name of the catalog
and omit the libref.  (This is a <B>one-level name</B>.) The temporary
catalog is stored in the WORK library and erased when you end the SAS session.
<P>For a permanent catalog, specify both a libref and a
catalog name. (This is a <B>two-level name</B>.) <B>Libref</B>
must already be assigned to a SAS data library that contains or will contain
the catalog.  For more information on assigning a libref, see
<A href="zs-parts.htm#zlibname">LIBNAME Statement</A>.<P></DD>
</DL>

<P>When you run the procedure, the output is
automatically
appended to the end of the specified catalog. If the procedure produces multiple
graphics, then multiple entries are added to the catalog.
<P>If you want a catalog entry to replace <B>all</B>
of the existing entries in the catalog, you can use the following statement:
 



<PRE>goptions goutmode=replace;</PRE>


 <DL>
<DT><B><FONT color="FF00007">CAUTION:</FONT></B></DT><DD><B>Be careful using GOUTMODE=REPLACE.</B>
 GOUTMODE=REPLACE replaces <B>all</B>
existing entries in the output catalog. You cannot retrieve previous entries
once they have been replaced. See <A href="zoutmode.htm">GOUTMODE</A> for more information.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"></DD></DL>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="zrynames">Names and Descriptions of Catalog Entries</A></FONT></B></TD></TR></TABLE>

<P><A name="z0748137">&#13; SAS/GRAPH software always
assigns a name and a description to each catalog entry so you can identify
it.  By default, the names and descriptions are determined by the procedure.
 For example, a graph produced by the GCHART procedure would be assigned the
name GCHART and a description like PIE CHART OF MONTH.</A>
<P>By default, SAS/GRAPH appends
each new entry to the catalog. If you create more than one graph with a procedure
during a SAS session and the graphs are stored in the same catalog, SAS/GRAPH software
adds a number to the end of the name of subsequent catalog entries.  This
number makes the names unique within the catalog.  For example, if you create
three graphs with the GCHART procedure during the same SAS session, the catalog
entries are named GCHART, GCHART1, and GCHART2.  SAS/GRAPH software
uses this naming convention whether catalog entries are being stored in a
temporary or permanent catalog.
<P>You can supply a name and description when you create
the graph by using the NAME= and DESCRIPTION= options. If you create more
than one graph of the same name, SAS/GRAPH software
increments the specified name just as it does the default names.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Listing and Managing Catalog Entries</FONT></B></TD></TR></TABLE>

<P><A name="z0748140">&#13;  You can use the SAS Explorer
window or the PROC GREPLAY window to display a list of all of the entries
in a catalog.  To open the Explorer window for a specific catalog, use the
CAT command:</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>CAT</B> <I>libref.catalog-name</I>
</TD></TR></TABLE>
<P>To open the PROC GREPLAY window, submit the  PROC
GREPLAY
statement with or without a catalog specification. For details, see <A href="zlaychap.htm">The GREPLAY Procedure</A>.
<P>Either method lets you view
individual entries once
you have displayed the list. For more information, see <A href="zdisplay.htm">Displaying Graphics Output on Monitors or Terminals</A>.
<P>There are several ways to manage
catalogs and catalog
entries: 
<P>
<UL>

<LI>The GREPLAY procedure can rename, delete, copy,
or group graphics output that is stored in either temporary or permanent catalogs.<P>

<LI>The CATALOG procedure can copy or move an entire
catalog or selected entries within a catalog, and can rename or delete catalog
entries. For details, see <B>SAS Procedures Guide</B>.<P>
</UL>


<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0696063.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="zardcopy.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zt-gedit.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#zatalogs">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>