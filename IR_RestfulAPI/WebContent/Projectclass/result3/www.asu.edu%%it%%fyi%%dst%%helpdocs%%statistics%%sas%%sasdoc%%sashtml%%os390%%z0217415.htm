<HTML>
<!-- This page produced Thu Jul  8 15:57:47 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Procedures : PDSCOPY </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0217368.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0217407.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0217424.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">PDSCOPY</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0217415">PDSCOPY</A></FONT></H1>

<P><HR><BR><B>Copies partitioned data sets from disk to disk, disk to tape,
tape to tape, or tape to disk</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>OS/390 specifics:</B></TD>
<TD bgcolor="#CCCCCC" align="left">all
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0217415.htm#znid-184"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217415.htm#z0217416"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217415.htm#z0217417"><FONT size="2"><B>PROC PDSCOPY Statement</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0217415.htm#z0167145"><FONT size="2">Options</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217415.htm#z0217418"><FONT size="2"><B>EXCLUDE Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217415.htm#z0217419"><FONT size="2"><B>SELECT Statement</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217415.htm#z0217420"><FONT size="2"><B>Output Data Set</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217415.htm#z0217421"><FONT size="2"><B>Usage Notes</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217415.htm#z0217422"><FONT size="2"><B>Output</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0217415.htm#z0217423"><FONT size="2"><B>Example of Copying Members Using the PDSCOPY Procedure</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="znid-184">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PROC PDSCOPY</B> INDD=<I>file-specification </I>
 OUTDD=<I>file-specification </I> &lt;<I>options </I>&gt;;
<TABLE cellpadding="2" cellspacing="2">
<TR><TD width="24"></TD><TD>
<B>EXCLUDE</B> <I>member-name-1 </I> &lt;. . .
<I>member-name-n</I>&gt;;
</TD></TR></TABLE>
<TABLE cellpadding="2" cellspacing="2">
<TR><TD width="24"></TD><TD>
<B>SELECT</B> <I>member-name-1 </I> &lt;. . . <I>member-name-n</I>&gt;;
</TD></TR></TABLE>
</TD></TR></TABLE><A name="znid-185">&#13;</A>
<P><A name="z0552863">&#13; </A>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217416">Details</A></FONT></B></TD></TR></TABLE>

<P>The PDSCOPY procedure can be used to copy
an entire partitioned data set, or you can specify which members you want
to copy. This procedure cannot be used to copy extended partitioned data sets
(PDSEs). PROC PDSCOPY is useful for backing up source libraries and load module
libraries to tape. If you use PROC PDSCOPY to copy a PDS to tape, then you
must also use it if you want to copy that PDS back to <B>disk</B>. However,
you can use either PROC PDSCOPY or other copy utilities to copy that tape
to another <B>tape</B>.
<P>When libraries are moved between disks that have different
optimal block sizes, PROC PDSCOPY can be used to reblock the libraries. PROC
PDSCOPY handles overlay programs and alias names. It also sets up the RLD
count fields that are used by the FETCH program.
<P>When a PDS contains load modules, it generally requires
13% to 18% less disk space after being copied by PROC PDSCOPY, because PROC
PDSCOPY uses free space on a partially filled track to store records. The
linkage editor constructs records that do not fit on a partially used track.
<P>The PDSCOPY procedure does not copy scatter-loaded modules.
<P>If
errors are encountered during PDSCOPY processing,
the return code for the job step is set to 8.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217417">PROC PDSCOPY Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0552869">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PROC PDSCOPY</B> INDD=<I>file-specification</I>
OUTDD=<I>file-specification</I>
&lt;<I>options</I>&gt;;
</TD></TR></TABLE>
<DL>
<DT>INDD=<B>file-specification</B></DT>
<DD>specifies either the fileref or the physical
file name (enclosed in quotes) of the library to copy. INDD= is required.<P></DD>

<DT>OUTDD=<B>file-specification</B></DT>
<DD>specifies either the fileref or the physical
file name (enclosed in quotes) of the output partitioned data set. OUTDD=
is required.<P></DD>
</DL>

<BR><H3><A name="z0167145">Options</A></H3>


<P>Some of the options
that can appear in the PROC PDSCOPY statement apply to both source libraries
and load module libraries. Others apply only to load module libraries.  The
following options apply to both source libraries and load module libraries: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>ALIASMATCH=TTR</TD></TR>
<TR valign="top"><TD></TD><TD>BLKSIZE=</TD></TR>
<TR valign="top"><TD></TD><TD>INTAPE</TD></TR>
<TR valign="top"><TD></TD><TD>NEWMOD</TD></TR>
<TR valign="top"><TD></TD><TD>NOALIAS</TD></TR>
<TR valign="top"><TD></TD><TD>NOREPLACE</TD></TR>
<TR valign="top"><TD></TD><TD>OUTTAPE</TD></TR>
<TR valign="top"><TD></TD><TD>SHAREINPUT</TD></TR></TABLE>
<P>The
following options apply only to load module libraries: 



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>ALIASMATCH=BOTH|EITHER|NAME</TD></TR>
<TR valign="top"><TD></TD><TD>DC</TD></TR>
<TR valign="top"><TD></TD><TD>DCBS|NODCBS</TD></TR>
<TR valign="top"><TD></TD><TD>MAXBLOCK=</TD></TR>
<TR valign="top"><TD></TD><TD>NE</TD></TR>
<TR valign="top"><TD></TD><TD>NOTEST</TD></TR></TABLE>
<P>All
the options that can appear in the PROC PDSCOPY
statement are discussed in this section.  In the discussion, the term <B>member</B> refers to both source library members and to load modules. The
term <B>module</B> refers only to load modules. 
<DL>
<DT><A name="z0552892">&#13;ALIASMATCH=BOTH | EITHER | NAME | TTR</A></DT>
<DD>specifies how to match aliases with main
members to determine whether they represent the same member. 
<P>
<DL>
<DT>BOTH</DT>
<DD>specifies that both the TTR (relative track
and record) values and the names must match in order for a main module to
be considered a match.<P></DD>

<DT>EITHER</DT>
<DD>specifies that a match for either the TTR
value or the name is sufficient to identify the main module that corresponds
to an alias. If more than one main module directory entry matches, it is impossible
to predict which one will be used.<P></DD>

<DT>NAME</DT>
<DD>specifies that the main module name in the
directory entry for the alias (at offset 36) is compared with main module
names to find a match.  The alias is assumed to represent the same module
as the main module that has the matching name.  When you specify ALIASMATCH=NAME,
the TTR values do not need to match.
<P>A situation in which names match even though TTR values
do not match occurs when the main module is originally link edited specifying
the alias names, and then link edited again without specifying them. In this
case, the directory entries for the aliases still point to the old version
of the module (that is, to a back-level version). Because of this, you should
consider carefully whether to use the ALIASMATCH=NAME option or the NEWMOD
option.  ALIASMATCH=NAME updates the aliases to point to the current version
of the main module rather than to the back-level version.  The NEWMOD option
causes the older version of the module to copy.  Another alternative is to
use TTR matching and not to copy the aliases when they are, in fact, obsolete
names.<P></DD>

<DT>TTR</DT>
<DD>specifies that TTR values are compared.
TTR is the default. An alias is assumed to represent the main member that
has the same TTR value. If the TTR values match, then the directory entry
for the main member and the alias currently point to the same place in the
data set.
<P>For load modules, the most common situation in which
TTR values might match, but names may not match, occurs when the main module
was renamed (for example, by using ISPF option 3.1) after the aliases were
created. The alias directory entries may still contain the old main module
name.
<P>Whichever method you use, unmatched aliases are not
copied to the output file unless you specify the NEWMOD option (see <A href="#z0167149">NEWMOD</A>).
 Matched aliases in the output file always point to the main module to which
they were matched (that is, they have the same TTR values), even if the TTR
values were different in the input file (which might occur if ALIASMATCH=NAME
or ALIASMATCH=EITHER was used). When modules are matched using the TTR values
(that is, when TTR or EITHER was specified), the main module name in alias
directory entries is changed in the output file.<P></DD>
</DL>
<P></DD>

<DT><A name="z0552905">&#13;BLKSIZE=<B>block-size</B></A></DT>
<DD>specifies the maximum block size to use
for reblocking the copied load modules on the output device. If the BLKSIZE=
option is omitted, the default depends on the type of the output device and
on the data set type: 
<P>
<UL>

<LI>If output is to tape, the default is 32,760.<P>

<LI>If output is in tape (sequential) format on disk
(that is, when the OUTTAPE option is used), the default is either the device
track size or 32,760, whichever is less.<P>

<LI>If output is to disk, the default depends on the
device type. However, it is never greater than 18K unless you use the MAXBLOCK=
option (see <A href="#z0167144">MAXBLOCK</A>).  In addition, the default cannot exceed the device track
size or 32,760, whichever is less.<P>

<LI>Unless the NODCBS option (described later) is
specified and the output data set is a partitioned data set on disk, the default
value is reduced to the data set control block (DSCB) block size of the partitioned
data set, if that is smaller.<P>
</UL>

<P>For tape (sequential) format output, the specified block
size cannot be less than 1.125 times the maximum input device block size,
nor greater than 32,760. For disk output, the specified block size cannot
be less than 1,024.<P></DD>

<DT><A name="z0552912">&#13;DC</A></DT>
<DD>specifies that load modules that are marked
downward compatible (that is, modules that can be processed by linkage editors
that were used before MVS) are eligible for processing. After they are copied
by PROC PDSCOPY, the load modules are not marked DC in their directory entry
because PROC PDSCOPY does not produce downward compatible load modules nor
does it preserve their attributes.  If you do not specify the DC option and
you attempt to copy load modules marked DC, PROC PDSCOPY issues an error message.<P></DD>

<DT><A name="z0552914">&#13;DCBS | NODCBS</A></DT>
<DD>tells SAS whether to preserve the data control
block (DCB) characteristics of the output partitioned data set on disk. If
NODCBS is specified, the data control block (DCB) characteristics of the output
partitioned data set on disk can be overridden.  The default value is DCBS.
<P>If the NODCBS option is specified, PROC PDSCOPY changes
the DSCB (data set control block) block size of the output partitioned data
set to the maximum permissible block size for the device. Otherwise, the maximum
permissible value of the BLKSIZE= option is the current block size value from
the DSCB, and the DSCB block size is not changed.
<P>Using the NODCBS option may enable PROC PDSCOPY to block
output load modules more efficiently. However, changing the DSCB block size
could cause problems when the data set is moved, copied, or backed up by a
program other than PROC PDSCOPY, particularly if your installation has more
than one type of disk drive. Consult your systems staff before specifying
NODCBS.<P></DD>

<DT><A name="z0552918">&#13;INTAPE</A></DT>
<DD>specifies that the INDD= library is in tape
(sequential) format. The INTAPE option is assumed if a tape drive is allocated
to the input data set.<P></DD>

<DT><A name="z0552920">&#13; </A><A NAME="z0167144"></A>
MAXBLOCK=<B>block-size</B> | MAXBLK=<B>block-size</B></DT>
<DD>enables you to override the limitation of
18K on the block size of text records in the output library.  (The value of
BLKSIZE must be greater than or equal to the value of MAXBLOCK in order to
get text records at MAXBLOCK size.) If the value of MAXBLOCK is not specified,
then the maximum block size for text records is 18K; this is the largest text
block that can be handled by the FETCH program in many operating environments.
You can specify a block size greater than 18K for text records, but doing
so may cause copied modules to ABEND with an ABEND code of 0C4 or 106-E when
they are executed. You should use this parameter only if you are sure that
your operating environment (or TP monitor) FETCH program supports text blocks
that are larger than 18K.  CICS and OS/390 FETCH programs, for example, support
text blocks that are larger than 18K.<P></DD>

<DT><A name="z0552922">&#13;NE</A></DT>
<DD>specifies that the output library should
not contain records that are used in the link editing process.  Although programs
in the output library are executable, they cannot be reprocessed by the linkage
editor, nor can they be modified by the AMASPZAP program. Using the NE option
can reduce the amount of disk space that is required for the output library.<P></DD>

<DT><A name="z0552924">&#13; </A><A NAME="z0167149"></A>NEWMOD</DT>
<DD>specifies that aliases that do not match
a main member are to be copied as main members rather than being marked as
aliases in the output file. The directory entry in the output file is reformatted
to main member format. See the ALIASMATCH option for a description of how
aliases are matched with main members. If you do not specify the NEWMOD option,
unmatched aliases are not copied to the output file.<P></DD>

<DT><A name="z0552926">&#13;NOALIAS |
NOA</A></DT>
<DD>prevents automatic copying of all aliases
of each member that you have selected for copying.  Any aliases that you want
to copy must be named in the SELECT statement.  If you select only an alias
of a member, the member (that is, the main member name) is still automatically
copied, along with the selected alias.<P></DD>

<DT><A name="z0552928">&#13;NOREPLACE |
NOR</A></DT>
<DD>copies only members in the INDD= library
that are not found in the OUTDD= library; that is, members or aliases that
have the same name are not replaced.<P></DD>

<DT><A name="z0552930">&#13;NOTEST</A></DT>
<DD>deletes the symbol records produced by the
assembler TEST option from the copied load modules.  Using the NOTEST option
can reduce the amount of disk space that is required for the output library
by 10% to 20%.<P></DD>

<DT><A name="z0552932">&#13;OUTTAPE</A></DT>
<DD>specifies that the OUTDD= library is to
be in tape (sequential) format. The OUTTAPE option is assumed if a tape drive
is allocated to the output data set.<P></DD>

<DT><A name="z0552934">&#13;SHAREINPUT |
SHAREIN</A></DT>
<DD>specifies that the INDD= library is to be
shared with other jobs and TSO users. SHAREINPUT is the default for PDSCOPY
when the INDD= library is enqueued for shared control (DISP=SHR).  This means
that the INDD= library is shared with ISPF and the linkage editor rather than
being enqueued exclusively.  This makes it possible for more than one person
to use an INDD= library simultaneously.  (The OUTDD= library is always enqueued
for exclusive control against ISPF and the linkage editor; therefore, it cannot
be changed while PROC PDSCOPY is processing it.)<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217418">EXCLUDE Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0552936">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>EXCLUDE</B> <I>member-name-1 </I> &lt;. . .
<I>member-name-n</I>&gt;;
</TD></TR></TABLE>Use this statement if you want to exclude certain members from the
copying operation. The EXCLUDE statement is useful if you want to copy more
members than you want to exclude. All members that are not listed in EXCLUDE
statements are copied. You can specify as many EXCLUDE statements as necessary.
<P>If you follow a specification in the EXCLUDE statement
with a colon (:), then all members whose names begin with the characters preceding
the colon are excluded. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;You cannot use both the
SELECT statement and the EXCLUDE statement in one PROC PDSCOPY step.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217419">SELECT Statement</A></FONT></B></TD></TR></TABLE>

<P><A name="z0552940">&#13;</A>
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>SELECT</B> <I>member-name-1 </I> &lt;. . .
<I>member-name-n</I>&gt;;
</TD></TR></TABLE>Use this statement to specify the names of members to copy if you
do not want to copy the entire library. You can specify as many SELECT statements
as necessary.
<P>If you follow a specification in the SELECT statement
with a colon (:), then all members whose names begin with the characters preceding
the colon are copied.  In the following example all members whose names begin
with the characters FCS are copied:  



<PRE>select fcs:;</PRE>


 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;You cannot use both the SELECT statement and the EXCLUDE statement
in one PROC PDSCOPY step.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217420">Output Data Set</A></FONT></B></TD></TR></TABLE>

<P><A name="z0552944">&#13;The PDSCOPY procedure produces an output
partitioned data set on disk or on tape. The output data set contains copies
of the requested members of the input partitioned data set.</A>
<P>If you use PROC PDSCOPY to copy partitioned data sets
that contain source members, then the RECFM and LRECL of the output data set
must match those of the input data set.  If they differ, an error message
is displayed. The BLKSIZE values for the input and output data sets do not
have to be the same, however.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217421">Usage Notes</A></FONT></B></TD></TR></TABLE>

<P>If a member that you specified in a SELECT
statement does not exist, PROC PDSCOPY issues a warning message and continues
processing.
<P>PROC PDSCOPY enqueues the input and output data sets
using the SPFEDIT and SPFDSN QNAMEs.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217422">Output</A></FONT></B></TD></TR></TABLE>

<P><A name="z0552948">&#13;The PDSCOPY procedure writes the following information
to the SAS log: </A>
<P>
<UL>

<LI>INPUT and OUTPUT, the data set names and volume
serials of the input and output libraries<P>

<LI>MEMBER, a list of the members copied<P>

<LI>ALIAS, the members' aliases, if
any<P>

<LI>whether the copied members replaced others members
of the same name<P>

<LI>whether a selected member or alias was not copied
and a note explaining why not.<P>
</UL>

<P>If the output device is a disk, PROC PDSCOPY also writes
the following information next to each member name: 
<P>
<UL>

<LI>TRACKS, the size of the member, in tenths of tracks<P>

<LI>SIZE, the
number of bytes in the member that was
copied (in decimal notation).<P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0217423">Example of Copying Members Using the PDSCOPY Procedure</A></FONT></B></TD></TR></TABLE>

<P><A name="z0552957">&#13;The
following example copies all members and aliases
that start with the letters OUT. In this example, the alias must match the
main member both by name and by TTR in order for the alias to be copied.  


</A>
<PRE>filename old 'userid.mvs.output' disp=shr;
filename new 'userid.mvs.output2' disp=old;
proc pdscopy indd=old outdd=new aliasmatch=both
      shareinput;
   select  out:;
run;</PRE>
<P><A href="#zrocs-o9">PDSCOPY Procedure Example</A>
shows the results. 
<P>
<P>
<B><I><A name="zrocs-o9">PDSCOPY Procedure Example</A></I></B><BR>


<TABLE border="1" cellpadding="12" cellspacing="0" bgcolor="#FAFAFA">
<TR>
<TD><PRE> 1    filename old 'userid.mvs.output' disp=shr;
 2    filename new 'userid.mvs.output2' disp=shr;
 3
 4    proc pdscopy indd=old outdd=new aliasmatch=both shareinput;
 5       select out:;
 6    run;
     SAS PROC PDSCOPY VERSION 8.00   04/24/99

     INPUT  DSNAME=USERID.MVS.OUTPUT  VOL=SER=XXXXXX
     OUTPUT DSNAME=USERID.MVS.OUTPUT2  VOL=SER=XXXXXX

     MEMBER     TRACKS       SIZE
       ALIAS

     OUT1601     2.6        40019 replaced
     OUT1602    10.6       165519 replaced
     OUT1603    53.3       829081 replaced

     TRACKS USED    67.0
            UNUSED   8.0
            TOTAL   75.0
     EXTENTS         5</PRE></TD></TR></TABLE>

<P>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0217368.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0217407.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0217424.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0217415">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>