<HTML>
<!-- This page produced Tue Jun 22 10:41:23 EDT 1999
 -->
<!-- Used program version 1.117.1.1 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>UNIX: TCP/IP Access Method : SAS/SHARE </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0382046.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0382050.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z1265880.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">Communications Access Methods for SAS/CONNECT     and SAS/SHARE Software                                                  </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0382063">SAS/SHARE</A></FONT></H1>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Client Tasks</FONT></B></TD></TR></TABLE>

<DL>
<DT>User or
Applications Programmer</DT>
<DD>To prepare for accessing a SAS/SHARE server,
perform these tasks: 
<OL START="1" type="1">
<LI>Configure the server in the client SERVICES file.<P>

<LI>Set security for connecting
clients.<P>

<LI>Specify the TCP/IP access method.<P>

<LI>Specify a server name.<P>
</OL>
<P></DD>
</DL>

<BR><H3>Configuring the Server in the SERVICES File</H3>


<P>Each server must be defined as a service in the SERVICES file
on each host node from which a client session will access the server. This
file usually is located in the directory in which the TCP/IP software is installed.
See <A href="z0381743.htm">TCP/IP SERVICES File</A>
for information about editing the SERVICES file.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Setting Security for Connecting Clients</FONT></B></TD></TR></TABLE>

<P>Requiring connecting clients to supply a valid userid and password
enforces server security. At the client, set the preferred security method
for relaying a userid and password that are valid on the server host. For
details, see <A href="z0382047.htm#z1253492">Setting Security for SAS/CONNECT and SAS/SHARE</A>. 
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Specifying the TCP/IP Communications Access Method</FONT></B></TD></TR></TABLE>

<P>You
must specify the TCP/IP communications access method at the
client before you access a server.
<P>Use the following syntax to specify the TCP/IP access method at each
connecting client: 



<PRE>OPTIONS COMAMID=<I>access-method-id;</I></PRE>
<P>where COMAMID is an acronym for Communications Access Method Identification. <B>access-method-id</B> identifies the method that is used by the client to
communicate with the server. TCP (short for TCP/IP, which is an abbreviation
for Transmission Control Protocol/Internet Protocol), is an example of an <B>access-method-id</B>.
<P>Example: 



<PRE>options comamid=tcp;</PRE>
<P>The server is accessed using the TCP/IP access method.
<P>You may specify the COMAMID option in an OPTIONS statement, at a SAS
invocation, or in a SAS configuration file.
<P>Additionally, you may use the COMAUX1 option to designate an auxiliary
communications access method. See <A href="z0381371.htm#z1135748">SAS/CONNECT and SAS/SHARE: Supported Access Methods According to Host Release</A>
for the supported access methods by host. If the COMAMID method fails to access
a server, the second method is attempted. You can specify only one auxiliary
access method.
<P>The COMAUX option can be specified only at a SAS invocation or in a
SAS configuration file. The syntax for the COMAUX option follows: 



<PRE>-COMAUX1 <I>alternate-method</I></PRE>
<P>An example of configuration file entries for an UNIX client connecting
to an OS/390 server follows:



<PRE>-comamid tcp
-comaux1 appc</PRE>
<P>If the server cannot be reached using the TCP/IP access method, a second
attempt is made with the APPC access method.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Specifying a Server Name</FONT></B></TD></TR></TABLE>

<P>If the client and
server sessions are running on different network
nodes, you must include the TCP/IP node in the server identifier in the LIBNAME
and PROC OPERATE statements as follows: 



<PRE>SERVER=<I>node.server</I></PRE>
<P>This representation is known as a two-level server name.
<P><B>node </B>must be a valid TCP/IP node name. If the server and
the client sessions are running on the same node, you may omit the node name.
<P><B>server</B> can represent either a <B>server-id</B> or
a <B>port</B> number.
<P>
<UL>

<LI><B>server-id</B> must be identical to the service name specified
in the SERVICES file. See <A href="zervices.htm">Configuring the SERVICES File</A>
for more information on specifying the <B>server-id</B> in the SERVICES
file.<P>

<LI><B>port</B> is the location for passing data to and receiving
data from the server. The port number is specified with two preceding underscore
(_) characters. For example, you can specify the server port as 5000 using
the SERVER= option in a LIBNAME statement: 



<PRE>libname mylib '.' server=srvnode._ _5000;</PRE><P>
</UL>

<P>If the TCP/IP node name is not a valid SAS name, assign the name of
the server node to a SAS macro variable, then use the name of that macro variable
for <B>node</B> in the two-level server name.
<P>The access method evaluates the node name, in this order of precedence: 
<P>
<UL>

<LI>acceptable node
name<P>

<LI>SAS macro variable<P>

<LI>environment variable.<P>
</UL>

<P>The following example shows how to use a SAS macro variable
to relay
a server node name: 



<PRE>%let srvnode=mktserver.acme.com;
libname sales server=srvnode.server1;</PRE>


 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;Do not use an ampersand
(&amp;) in a two-level name. An ampersand causes the macro variable to be
resolved by the SAS parser prior to syntactic evaluation of the SERVER= option.
The access method evaluates the node name in a two-level server name.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>See <B>SAS Language Reference: Dictionary</B> for details about SAS naming rules. See
<B>SAS/SHARE User's Guide</B> for details
about the LIBNAME and PROC SERVER statements.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Client Example</FONT></B></TD></TR></TABLE>

<P>The following example illustrates the
statements that you specify
in a UNIX client SAS session to access a server with the TCP/IP access method: 



<PRE>options comamid=tcp;
libname sasdata 'edc/prog2/sasdata' user=_prompt_ server=rmtnode.share1;</PRE>
<P>The TCP/IP access method is declared. The LIBNAME statement specifies
the data library that is accessed through the server, which is specified by
the two-level server name RMTNODE.SHARE1, by means of a prompt for a username
and a password that are valid on the server.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Server Tasks</FONT></B></TD></TR></TABLE>

<P>
<DL>
<DT><B>Server
Administrator</B></DT>
<DD>To set up a secure server, perform the following tasks at
the server: 
<OL START="1" type="1">
<LI>Configure SAS/SHARE servers
in the<BR> 


<CODE><B>/etc/services</B></CODE> file.<P>

<LI>Set the TCPSEC variable for server security.<P>

<LI>Set the AUTHENCR variable to enforce client userid and password
encryption.<P>

<LI>Configure the authorization of users on remote hosts.<P>

<LI>Ensure that 


<CODE><B><I>!sasroot</I>/utilities/bin/sasauth</B></CODE> is owned by ROOT and that the "Set-user-id" bit is set
for the file (


<CODE><B>chmod 4755 <I>!sasroot</I>/utilities/bin/sasauth</B></CODE>).<P>

<LI>Ensure that 


<CODE><B><I>!sasroot</I>/utilities/bin/sasperm</B></CODE> is owned by ROOT and that the "Set-user-id" mode bit is
set for the file (


<CODE><B>chmod 4755 <I>!sasroot</I>/utilities/bin/sasperm</B></CODE>). <P>

<LI>Specify the TCP/IP access method.<P>

<LI>Specify the server name.<P>
</OL>

<P><B>Note:</B>&nbsp;&nbsp;&nbsp;Optional tasks apply to setting up
server security.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Configuring the Server in the /etc/services File</FONT></B></TD></TR></TABLE>

<P>Each server must be defined as a service in the<BR> 


<CODE><B>/etc/services </B></CODE> file on each remote host node from which a client session
will access the server. A typical entry follows: 



<PRE>sassrv2   5011/tcp  # SAS/SHARE server 2</PRE>
<P>See <A href="zervices.htm">Configuring the SERVICES File</A> for
information about editing the 


<CODE><B>/etc/services</B></CODE> file.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Setting Server Security</FONT></B></TD></TR></TABLE>

<P>You may use file permissions to restrict
a user's access to libraries and files through a server. A secured server
allows connections only from those clients that provide valid userids and
passwords for the host on which the server is running. A secured server uses
a validated userid and password pair to verify a user's authority to access
a SAS library or a SAS file.
<P>Requiring connecting clients to supply a valid userid and password enforces
server security. From a server session, set the TCPSEC variable to the value
_SECURE_. See <A href="z0382047.htm#zxtcpsec">Providing Client Identification in a pre-Version 8 Session</A>
for more information about setting this variable.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Enforcing Server Userid and Password Encryption</FONT></B></TD></TR></TABLE>

<P>As a security measure, you may set the AUTHENCR option to enforce
the encryption of userids and passwords when passed from the client to the
server. See <A href="z0382047.htm#zuthencr">SAS/SHARE Only Option</A>
for details about setting AUTHENCR.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Configuring User Authorization</FONT></B></TD></TR></TABLE>

<P>If SAS was installed from the root account, then it can be assumed that
this task has already been performed. Otherwise, a root user must configure
resources on the remote host on which a server runs in order to authenticate
a remote user's identity and to check the user's authority to access resources.
<P>Perform these tasks through the SAS Setup menu or by issuing the corresponding
UNIX commands at a shell prompt:
<P>From the root account, at the command line, initialize 


<CODE><B>!<I>SASROOT</I>/sassetup</B></CODE>,
and from the SAS Setup Primary Menu, select:
<PRE>Run setup Utilities -> Perform SAS System Configuration -> 
Configure User Authorization</PRE>
<P>where 


<CODE><B>!<I>SASROOT</I></B></CODE> is the directory where SAS was installed.
<P>Alternatively, issue these UNIX commands at a shell prompt:
<PRE>su root
cd !<I>SASROOT</I>/utilities/bin
chown root sasauth sasperm sastcpd objspawn
chmod 4755 sasauth sasperm sastcpd objspawn
exit</PRE>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Validating Client Userid and Password Pairs with the Authenticate Program</FONT></B></TD></TR></TABLE>

<P>
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;This feature applies to a server that is running
on a UNIX host only.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>You may use a built-in authentication program named 


<CODE><B>sasauth</B></CODE>, which is invoked automatically when
a client accesses a server that is running in secure mode. This program authenticates
userid and password pairs, which allow client access to the server.
<P>To secure a server, the server administrator sets the TCPSEC environment
variable to _SECURE_. See <A href="z0382047.htm#zxtcpsec">Providing Client Identification in a pre-Version 8 Session</A>
for information about TCPSEC.
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;For Version 6, the 


<CODE><B>authenticate</B></CODE> program is used to validate server userid and passwords.
See <A href="z0172899.htm">Authenticate Program</A>
for details about using this program.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Allowing Client Access to SAS Libraries or Files with the Permission Program</FONT></B></TD></TR></TABLE>

<P>
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;This feature applies to a server that is running
on a UNIX or a CMS host only.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>When presented with a validated userid, the server uses a default program
named 


<CODE><B>sasperm</B></CODE> to verify the following attributes:
<UL>

<LI>username<P>

<LI>file or directory path for a SAS library or file<P>

<LI>file or directory
access permissions (read or write).<P>
</UL>

<P>The 


<CODE><B>sasperm</B></CODE> program
determines whether the requesting user has access to the file or directory. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;For Version 6, the 


<CODE><B>permission</B></CODE> program enables clients to access SAS libraries or files.
See <A href="z0172891.htm">Permission Program</A>
for details about using this program.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Specifying the TCP/IP Access Method</FONT></B></TD></TR></TABLE>

<P>You must specify the
TCP/IP communications access method at the
server before a client can access it.
<P>Use the following syntax to specify the TCP/IP access method at the
server: 



<PRE>OPTIONS COMAMID=<I>access-method-id</I>;</PRE>
<P>where COMAMID is an acronym for Communications Access Method Identification. <B>access-method-id</B> identifies the method that is used by the server to
communicate with the client. TCP (short for TCP/IP, which is an abbreviation
for Transmission Control Protocol/Internet Protocol) is an example of an <B>access-method-id</B>.
<P>For a server that is running on a host on which only one communications
access method is available, use only the COMAMID option.
<P>Example: 



<PRE>options comamid=tcp;</PRE>
<P>The server will be available only to SAS/SHARE sessions
that use the TCP/IP access method. You may specify the COMAMID option in an
OPTIONS statement, on the SAS invocation, or in a SAS configuration file.
<P>However, if the host on which a server is running supports multiple
access methods, you may specify an auxiliary access method by which clients
may access the server. See <A href="z0381371.htm#z1135748">SAS/CONNECT and SAS/SHARE: Supported Access Methods According to Host Release</A>
for the supported access methods by host.
<P>All of the access methods initialize when the server initializes. The
activation of multiple access methods makes a server available to several
groups of clients, each using a different communications access method simultaneously.
<P>The COMAUX option can be specified only at a SAS invocation or in a
SAS configuration file. The syntax for the COMAUX option follows: 



<PRE>-COMAUX1 <I>alternate-method</I></PRE>
<P>An example of configuration file entries for a server that is running
on a CMS host follows: 



<PRE>-comamid tcp
-comaux1 appc</PRE>
<P>When the server starts, all of the communications access methods are
initialized. The server is simultaneously available to client sessions that
use the TCP/IP access method as well as to clients that use the APPC access
method.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Specifying a Server Name</FONT></B></TD></TR></TABLE>

<P>You must specify
the server name in the PROC SERVER statement.
Use the following syntax:



<PRE>SERVER=<I>server</I></PRE>
<P><B>server</B> can represent either a <B>server-id</B> or
a <B>port</B> number. 
<P>
<UL>

<LI><B>server-id</B> corresponds to the service that was configured
in the SERVICES file. See <A href="zervices.htm">Configuring the SERVICES File</A>
for more information.<P>

<LI><B>port</B> is the location for passing data to and receiving
data from the server. The port number is specified with two preceding underscore
(_) characters. For example, you can specify the server port as 5000 using
the SERVER= option in a LIBNAME statement: 



<PRE>libname mylib '.' server=srvnode._ _5000;</PRE><P>
</UL>

<P>The following example shows how to use a SAS macro variable to relay
a server node name: 



<PRE>%let srvnode=mktserver.acme.com;
libname sales server=server1;</PRE>
<P>See <B>SAS Language Reference: Dictionary</B> for details about SAS naming rules. See the <B>SAS/SHARE User's Guide</B> for
details about the PROC SERVER statement.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5">Server Example</FONT></B></TD></TR></TABLE>

<P>The following example illustrates the
statements that you specify
in the server configuration file on a UNIX host: 



<PRE>-set tcpsec _secure_
-set authencr required</PRE>
<P>The value _SECURE_ for the TCPSEC variable requires clients to supply
a userid and password that are valid on the server. The value REQUIRED for
AUTHENCR allows only encrypted userids and passwords from clients.
<P>The following example illustrates the statements that you specify in
a SAS session on the UNIX host at which you start a server: 



<PRE>options comamid=tcp;
proc server id=share1 authenticate=req;
run;</PRE>
<P>The TCP/IP access method is declared and the server SHARE1 is started
on the UNIX host. The additional options in the PROC SERVER statement allow
only validated clients to access the server.

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0382046.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0382050.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z1265880.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0382063">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>