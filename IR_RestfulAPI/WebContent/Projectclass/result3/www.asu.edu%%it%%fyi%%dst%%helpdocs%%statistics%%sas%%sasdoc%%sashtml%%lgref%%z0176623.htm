<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Statements : PUT, List </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0175758.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0174678.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">PUT, List</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0176623">PUT, List</A></FONT></H1>

<P><HR><BR><B>Writes variable values and the specified character strings in
the output line</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Valid:</B></TD>
<TD bgcolor="#CCCCCC" align="left">in a DATA step
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Category:</B></TD>
<TD bgcolor="#CCCCCC" align="left">File-handling
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Type:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Executable
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0176623.htm#zid-2572"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0176623.htm#zid-2573"><FONT size="2"><B>Arguments</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0176623.htm#z0223095"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0176623.htm#z0176627"><FONT size="2">Using List Output</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0176623.htm#z0177686"><FONT size="2">How List Output is Spaced</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0176623.htm#z0176685"><FONT size="2"><B>Comparisons</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0176623.htm#z0176622"><FONT size="2">How Modified List Output and Formatted Output Differ</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0176623.htm#z0223084"><FONT size="2"><B>Examples</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0176623.htm#z0176778"><FONT size="2">Example 1: Writing Values with List Output</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0176623.htm#z0176690"><FONT size="2">Example 2: Writing Character Strings and Variable Values</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0176623.htm#z0176625"><FONT size="2">Example 3: Writing Values with Modified List Output</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0176623.htm#z0223092"><FONT size="2"><B>See Also</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="zid-2572">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PUT </B> &lt;<I>pointer-control</I>&gt; <I>variable </I>
&lt;@ | @@&gt;;
</TD></TR></TABLE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PUT </B> &lt;<I>pointer-control</I>&gt;
&lt;<I>n</I>*&gt;<I>'character-string'</I> 
<BR>&lt;@ | @@&gt;; 
</TD></TR></TABLE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PUT </B>
&lt;<I>pointer-control</I>&gt; <I>variable</I> :  <I>format.</I>&lt;@ | @@&gt;;
</TD></TR></TABLE>
<BR><H3><A name="zid-2573">Arguments</A></H3>

<P><A name="z0855126">&#13;</A>
<DL>
<DT><B><B><I>pointer-control</I></B></B></DT>
<DD>moves the output pointer to a specified
line or column.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z0161869.htm#z0149798">Column Pointer Controls</A> and
<A href="z0161869.htm#z0150137">Line Pointer Controls</A></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176690">Writing Character Strings and Variable Values</A></TD>
</TABLE>
<P></DD>

<DT><B><B><I>variable</I></B></B></DT>
<DD>names the variable whose value is written.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176778">Writing Values with List Output</A></TD>
</TABLE>
<P></DD>

<DT><B><B><I>n</I></B>*</B></DT>
<DD>specifies to repeat <B><I>n</I></B>
times the subsequent character string.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Example:</B></TD>
<TD align="left" bgcolor="#F5F5F5">This statement writes
a line of 132 underscores:



<PRE>put 132*'_';</PRE>


 </TD>
</TABLE>
<P></DD>

<DT><B>'<B><I>character-string</I></B>'</B></DT>
<DD>specifies a string of text, enclosed in
quotation marks, to write.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Interaction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">When insufficient
space remains on the current line to write the entire text string, SAS withholds
the entire string and writes the current line. Then it writes the text string
on a new line, starting in column 1. For more information, see <A href="z0161869.htm#z0162156">When the Pointer Goes Past the End of a Line</A>.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">To avoid misinterpretation,
always put a space after a closing quotation mark in a PUT statement. </TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you follow a quotation
mark with X, SAS interprets the text string as a hexadecimal constant.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See Also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0177686">How List Output is Spaced</A></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176690">Writing Character Strings and Variable Values</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0855144">&#13;:</A></B></DT>
<DD>allows you to specifiy a format that the
PUT statement uses to write the variable value. All leading and trailing blanks
are still deleted, and each value is followed by a single blank.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Requirement:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You must specify
a format.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176622">How Modified List Output and Formatted Output Differ</A></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176625">Writing Values with Modified List Output</A></TD>
</TABLE>
<P></DD>

<DT><B><B><I>format.</I></B></B></DT>
<DD>specifies a format to use when the data
values are written.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can specify either a
SAS format or a user-written format. See <A href="z0309859.htm">Formats</A>. </TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176625">Writing Values with Modified List Output</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0855153">&#13;@ | @@</A></B></DT>
<DD>holds an output line for the execution of
the next PUT statement even across iterations of the DATA step. These line-hold
specifiers are called <I><B>trailing @</B></I> and <I><B>double trailing @</B></I>.  
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The trailing @ or
double-trailing @  must be the last item in the PUT statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z0161869.htm#z0162610">Using Line-hold Specifiers</A></TD>
</TABLE>
<P></DD>
</DL>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0223095">Details</A></FONT></B></TD></TR></TABLE>

<BR><H3><A name="z0176627">Using List Output</A></H3>


<P>With list
output, you list the names of the variables whose values you want written,
or you specify a character string in quotation marks. The PUT statement writes
a variable value, inserts a single blank, and then writes the next value.
Missing values for numeric variables are written as a single period. Character
values are left-aligned in the field; leading and trailing blanks are removed.
To include blanks (in addition to the blank inserted after each value), use
formatted or column output instead of list output.
<P>There are two types of list output:
<P>
<UL>

<LI>simple list
output<P>

<LI>modified list output.<P>
</UL>

<P>Modified list output increases the versatility of the
PUT statement because you can specify a format to control how the variable
values are written. See <A href="#z0176625">Writing Values with Modified List Output</A>.
<BR><H3><A name="z0177686">How List Output is Spaced</A></H3>


<P>List output uses different spacing methods when it writes variable values
and character strings. When a variable is written with list output, SAS automatically
inserts a blank space. The output pointer stops at the second column that
follows the variable value. However, when a character string is written, SAS
does not automatically insert a blank space. The output pointer stops at the
column that immediately follows the last character in the string.
<P>To avoid spacing problems when both character strings
and variable values are written, you may want to use a blank space as the
last character in a character string. When a character string that provides
punctuation follows a variable value, you need to move the output pointer
backward. This prevents an unwanted space from appearing in the output line.
See <A href="#z0176690">Writing Character Strings and Variable Values</A>.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0176685">Comparisons</A></FONT></B></TD></TR></TABLE>

<BR><H3><A name="z0176622">How Modified List Output and Formatted Output Differ</A></H3>


<P>List output and formatted output use different methods
to determine how far to move the pointer after a variable value is written.
Therefore, modified list output, which uses formats, and formatted output
produce different results in the output lines. Modified list output writes
the value, inserts a blank space, and moves the pointer to the next column.
Formatted output moves the pointer the length of the format, even if the value
does not fill that length. The pointer moves to the next column; an intervening
blank is not inserted.
<P>The following DATA step uses modified list output to
write each output line:  



<PRE>data _null_;
   input x y;
   put x : comma10.2 y : 7.2;
   datalines;
2353.20 7.10
6231 121
;</PRE>
<P>These lines are written to the SAS log:



<PRE>----+----1----+----2
2,353.20 7.10
6,231.00 121.00</PRE> 
<P>In comparison, the following example uses formatted
output:  



<PRE>put x comma10.2 y 7.2;</PRE>
<P>These lines are written to the SAS log, with the values
aligned in columns: 



<PRE>----+----1----+----2
 12,353.20   7.10
  6,231.00 121.00</PRE> 
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0223084">Examples</A></FONT></B></TD></TR></TABLE>

<BR><H3> <A name="z0176778">Example 1: Writing Values with List Output</A> </H3>


<P>This DATA step uses a PUT statement with list output
to write variable values to the SAS log:  



<PRE>data _null_;
   input name $ 1-10 sex $ 12 age 15-16;
   put name sex age;
   datalines;
Joseph     M  13
Mitchel    M  14
Sue Ellen  F  11
;</PRE>
<P>These lines are written to the log:



<PRE>----+----1----+----2----+----3----+----4
Joseph M 13
Mitchel M 14
Sue Ellen F 11</PRE>By default, the values of the character variable NAME
are left-aligned in the field.
<BR><H3> <A name="z0176690">Example 2: Writing Character Strings and Variable Values</A> </H3>


<P>This PUT statement adds a space to the end of a character
string and moves the output pointer backward to prevent an unwanted space
from appearing in the output line after the variable STARTWGHT:  



<PRE>data _null_;
   input idno name $ startwght;
   put name 'weighs ' startwght +(-1) '.';
   datalines;
032 David 180
049 Amelia 145
219 Alan 210
;</PRE>
<P>These lines are written to the SAS log:  



<PRE>David weighs 180.
Amelia weighs 145.
Alan weighs 210.</PRE>


The blank space at the end of the character string
changes the pointer position. This space separates the character string from
the value of the variable that follows. The +(-1) pointer control  moves the
pointer backward to remove the unwanted blank that occurs between the value
of STARTWGHT and the period.  
<BR><H3> <A name="z0176625">Example 3: Writing Values with Modified List Output</A> </H3>


<P>This DATA step uses modified list output to write several
variable values in the output line:  



<PRE>data _null_;
   input salesrep : $10. tot : comma6. 
         date : date9.;
   put 'Week of ' date : worddate15. 
       salesrep : $12. 'sales were ' 
       tot : dollar9.  + (-1) '.';
   datalines;
Wilson 15,300 12OCT1999
Hoffman 9,600 12OCT1999
;</PRE>
<P>These lines appear in the SAS log:  



<PRE>Week of Oct 12, 1999 Wilson sales were $15,300.
Week of Oct 12, 1999 Hoffman sales were $9,600.</PRE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><FONT size="5"><A name="z0223092">See Also</A></FONT>
</FONT></B></TD></TR></TABLE>
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>Statements:
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD><A href="z0161869.htm">PUT</A></TD></TR>
<TR valign="top"><TD></TD><TD><A href="z0175758.htm">PUT, Formatted</A></TD></TR></TABLE></TD></TR></TABLE>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0175758.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0174678.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0176623">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>