<HTML>
<!-- This page produced Tue Jul  6 11:09:12 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>The SAS Interface to REXX : Overview </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0425910.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z-remote.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0606456.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">SAS Companion for the CMS Environment                                                                                     </FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0606455">Overview</A></FONT></H1>


<P><A name="z0596168">&#13;
REXX is a general purpose, high-level procedural language that is well known
for combining powerful programming features with ease of use. REXX is also
well known for its strengths as a macro language, most commonly with XEDIT.
The SAS REXX macro facility enables you to use REXX as a macro language with
SAS.  This expands the programming possibilities available to you with SAS
under CMS.</A>
<P>The REXX macro facility can be used to do the following
things that the SAS macro facility can do: 
<P>
<UL>

<LI>dynamically create and submit SAS statements<P>

<LI>communicate information between
SAS steps<P>

<LI>route messages to the SAS log<P>

<LI>issue commands to CMS<P>

<LI>pass information
between SAS and CMS using GLOBALV
variables.<P>
</UL>

<P>You can also use the REXX macro facility to 
<P>
<UL>

<LI>pass information between SAS and CMS using
REXX
variables<P>

<LI>temporarily transfer control from an executing
macro back to an interactive SAS session<P>

<LI>create pseudo SAS windowing environment commands<P>

<LI>transfer control to a CMS
application (for example,
XEDIT or FILELIST), and invoke SAS commands from within them.<P>
</UL>

<P>To use the SAS REXX macro facility, write a REXX macro
program and submit it from within a SAS session.  A SAS REXX macro (SASMACRO)
is a REXX program with a filetype of SASMACRO and a filename that you choose.
 A SASMACRO can contain SAS statements in addition to REXX code.  When a SASMACRO
is running, any instruction that REXX interprets as an external command is
submitted to SAS for execution.  For example, the following program, TRYIT
SASMACRO (a version of which is shipped with SAS), submits a DATA step and
a PROC step to SAS:   

<PRE>   /* TRYIT SASMACRO - a SAS REXX macro        */
   /* process arguments, establish defaults    */
parse arg dname argname .
if dname = '' then dname = 'a'
if argname = '' then argname = 'x'

   /* Pass a DATA step and PROC step into SAS  */
'data' dname';' argname'=1; run;'
'proc contents; run;'

exit     /* Return to SAS                      */</PRE>
<P>To run a SASMACRO, submit its CMS filename and any arguments
as if it were a SAS statement. This effectively makes the SASMACRO an extension
of the SAS language. A statement that invokes a SASMACRO may be placed anywhere
in a SAS program. When SAS encounters a statement that it does not recognize,
it passes the statement to the SAS REXX macro facility for execution. If there
is no SASMACRO by the specified name, SAS flags the statement as invalid and
prints an error message in the log. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;A SASMACRO cannot have a name that is the same as a valid SAS
statement or its abbreviation.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>To invoke the TRYIT SASMACRO example with two arguments, submit the
following statement to SAS:   

<PRE>TRYIT A B;</PRE>
  This creates SAS data
set A that contains one observation with one variable B, which has a value
of 1.
<P>A SASMACRO is invoked when SAS encounters it, just as
any other global SAS statement in that location would be. A SASMACRO that
is invoked within a DATA step is executed only one time, when the DATA step
is compiled. It is not executed for each observation in the DATA step. Any
SAS statements that are submitted from the SASMACRO are processed before subsequent
statements are processed in the  SAS program that invokes the SASMACRO.

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0425910.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z-remote.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0606456.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0606455">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>