<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Statements : FILE, ODS </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0171874.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0211297.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">FILE, ODS</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0631259">FILE, ODS</A></FONT></H1>

<P><HR><BR><B>Defines the structure of the data component that holds the results
of the DATA step and binds that component to a template to produce an output
object. ODS sends this object to all open ODS destinations, each of which
formats the object appropriately. Also controls what happens when the PUT
statement tries to write past the end of a line. </B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Valid:</B></TD>
<TD bgcolor="#CCCCCC" align="left">in a DATA step
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Category:</B></TD>
<TD bgcolor="#CCCCCC" align="left">File-handling
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Type:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Executable
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Requirement:</B></TD>
<TD bgcolor="#CCCCCC" align="left">If you use the ODS option, you must use
the fileref PRINT in the FILE statement. 
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Restriction:</B></TD>
<TD bgcolor="#CCCCCC" align="left">The DELIMITER= and DSD options have no effect
on the ODS option. You cannot use _FILE_=, FILEVAR=, HEADER=, or PAD with
the ODS option. 
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0631259.htm#zid-2339"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0631259.htm#z0630245"><FONT size="2"><B>Arguments</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0631259.htm#z0630597"><FONT size="2"><B>Options</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0631259.htm#z0630800"><FONT size="2"><B>ODS Suboptions</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0631259.htm#z0630116"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0631259.htm#z0631215"><FONT size="2"><B>See Also</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="zid-2339">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>FILE</B> PRINT
&lt;ODS&lt;=(<I>ODS-option(s)</I>)&gt;&gt;&lt;<I>overflow-control</I>&gt;&lt;N=1 |
<I>pagesize</I>&gt;; 
</TD></TR></TABLE><A name="zid-2340">&#13;</A>
<P>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0630245">Arguments</A></FONT></B></TD></TR></TABLE>

<P>
<DL>
<DT>PRINT</DT>
<DD>is a reserved fileref that directs the output
that is produced by any PUT statements to procedure output.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You must use PRINT
in a FILE statement that uses the ODS option.</TD>
</TABLE>
<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0630597">Options</A></FONT></B></TD></TR></TABLE>

<P>
<DL>
<DT>N=1 | PAGESIZE</DT>
<DD>specifies the number of lines that are available
to the output pointer in the current iteration of the DATA step. 
<P>
<DL>
<DT>1</DT>
<DD>specifies that the buffer can hold only
one line at a time. Any code that moves the pointer to a new line causes SAS
to write the contents of the buffer to the data component. Once the data are
in the data component, you cannot alter them with the PUT statement.<P></DD>

<DT>PAGESIZE</DT>
<DD>specifies that the buffer can hold the whole
page at once. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Alias:</B></TD>
<TD align="left" bgcolor="#F5F5F5">PS</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>

<DT>ODS&lt;=(<I>ODS-suboptions</I>)></DT>
<DD>defines the structure of the data component
that holds the results of the DATA step and binds that component to a template
to produce an output object. ODS sends this object to all open ODS destinations,
each of which formats the object appropriately. For information on the ODS-suboptions,
see <A href="#z0630800">ODS Suboptions</A>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you do not specify
any suboptions, the DATA step uses a default template (base.datastep.table)
that is stored in the SASHELP data library. This template defines two generic
columns: one for character variables, and one for numeric variables. ODS associates
each variable in the DATA step with one of these columns and displays the
variables in the order in which they are defined in the DATA step.
<P>Without suboptions, the default template uses the variable's
label as its column header. If no label exists, the template uses the variable's
name as the column header.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You must use the
fileref PRINT with the ODS option.</TD>
</TABLE>
<P></DD>

<DT><I>overflow-control</I></DT>
<DD>determines what the PUT statement does when
pointer controls tell it to write past the last column in the buffer. <I>Overflow-control</I> is one of the following:

<P>
<DL>
<DT>DROPOVER</DT>
<DD>does not write items that are directed to
columns beyond the last column in the buffer. A message in the log at the
end of the DATA step informs you if data were not written to the buffer.<P></DD>

<DT>FLOWOVER</DT>
<DD>moves the pointer to a new line when an
item is directed to a column beyond the last column in the buffer, writes
the next item in the first column of the new line, and continues to process
the PUT statement.<P></DD>

<DT>STOPOVER</DT>
<DD>stops processing the DATA step immediately
if a PUT statement attempts to write to a column beyond the last column in
the buffer. SAS discards the data item, writes the portion of the line that
was built before the error occurred, and issues an error message.<P></DD>
</DL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">FLOWOVER</TD>
</TABLE>
<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0630800">ODS Suboptions</A></FONT></B></TD></TR></TABLE>

<P>You can use any combination of the following
suboptions with the ODS= option in the FILE statement:
<P>
<TABLE cellpadding="6" cellspacing="0" border="1">


<TR valign="bottom" bgcolor="#CCCCCC">
  <TH  colspan="2" align="LEFT" valign="TOP" ><B>To do this...</B></TH>
  <TH  align="LEFT" valign="TOP" ><B>Use this suboption</B></TH>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">Specify one or more columns for the data component</TD>
  
<TD  align="LEFT" valign="TOP">COLUMNS= or VARIABLES=</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">Specify default values for column attributes that exist
in the template but that get their values from the data component</TD>
  
<TD  align="LEFT" valign="TOP">DYNAMIC=</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">Assert that all column definitions in the template can
or cannot be used by more than one variable</TD>
  
<TD  align="LEFT" valign="TOP">GENERIC=</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">Specify a column header to use for any column that does
not have a column header specified in the COLUMNS= or VARIABLES= suboption</TD>
  
<TD  align="LEFT" valign="TOP">LABEL=</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">Specify a name for the output object that the DATA step
produces</TD>
  
<TD  align="LEFT" valign="TOP">OBJECT=</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">Specify a label for the output object that the DATA
step produces</TD>
  
<TD  align="LEFT" valign="TOP">OBJECTLABEL=</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">Specify the template to use with the data component
to produce the output object</TD>
  
<TD  align="LEFT" valign="TOP">TEMPLATE=</TD>
</TR>

</TABLE>

<BR>
<DL>
<DT>COLUMNS=(<I>column-specification(s)</I>)</DT>
<DD>specifies one or more columns for the data
component. Each <I>column-specification</I> associates
a DATA step variable with a column that is defined in the template. The order
of the columns in the data component is determined by their order in the COLUMNS=
suboption.
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;By default, the order of the columns
in the output object is determined by their order in the template, not by
their order in the data component. You can override this order by using the
ORDER_DATA option in the PROC TEMPLATE step that creates the template. The
default DATA step template uses this option.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>Each <I>column-specification</I>
has this general
form:
<P><B>column-name</B>&lt;=<B>variable-name</B>>&lt;(<B>attribute(s)</B>)>
<P>
<DL>
<DT><I>column-name</I></DT>
<DD>is the name of a column. This name must
match a name that is defined in the template that you use.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>column-name</I> must conform to the rules for SAS variable names. The first
character must be a letter or an underscore. Subsequent characters can be
letters, numbers, or underscores.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use list notation
(for example, <B><CODE><FONT size="+1">score1</FONT></CODE></B>-<B><CODE><FONT size="+1">score5</FONT></CODE></B>) to specify a range of column
names.</TD>
</TABLE>
<P></DD>

<DT><B>variable-name</B> </DT>
<DD>specifies a variable in the DATA step to
place in the specified column.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you omit <I>variable-name</I>, ODS looks for a DATA step variable named <I>column-name</I> to place
in the specified column. If no such variable
exists, ODS returns an error.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use list notation
(for example, <B><CODE><FONT size="+1">score1</FONT></CODE></B>-<B><CODE><FONT size="+1">score5</FONT></CODE></B>) to specify a range of variable
names.</TD>
</TABLE>
<P></DD>

<DT><A NAME="z0631327"></A><B>attribute</B></DT>
<DD>assigns a characteristic, such as a label
or a format, to a particular column in the data component. These individual
specifications override any attributes that are set, in the DATA step, for
the entire data component. You assign attributes with the following suboptions.
<P>
<DL>
<DT>DYNAMIC=<B>dynamic-specification(s)</B></DT>
<DD>specifies a value for a column attribute
that exists in the template but that gets its value from the data component.
For details, see the discussion of
<A href="#z0631281">DYNAMIC=</A>.<P></DD>

<DT>FORMAT=<B>format-name</B></DT>
<DD>specifies a format for this particular column.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">ODS uses the first of
these formats for the variable that it finds:
<P>
<UL>

<LI>a format that is specified in a column definition
in a template.<P>

<LI>a format that is specified in the FORMAT= column
attribute<P>

<LI>a format that is specified in a FORMAT statement<P>

<LI>the default format ($<I>w</I>.
for character variables; <I>BEST12</I>. for numeric
variables)<P>
</UL>
</TD>
</TABLE>
<P></DD>

<DT>GENERIC=ON|OFF</DT>
<DD>asserts that the DATA step does or does
not use this column definition for multiple variables. For details, see
<A href="#z0631288">GENERIC=</A>.<P></DD>

<DT>LABEL='<I>column-label</I>'</DT>
<DD>specifies a label for this particular column.
For details, see <A href="#z0631294">LABEL= </A>.<P></DD>
</DL>
 <P></DD>
</DL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you do not specify
COLUMNS= or VARIABLES=, the order of columns in the data component matches
the order of the corresponding variables in the program data vector.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use only
one COLUMNS= suboption in a FILE statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Interaction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use either
the COLUMNS= suboption or the VARIABLES= suboption to associate variables
with columns. However, you cannot use both suboptions in the same FILE
statement.</TD>
</TABLE>
<P></DD>

<DT><A NAME="z0631281"></A>DYNAMIC=(<B>dynamic-specification(s)</B>)</DT>
<DD>specifies default values for dynamic attributes
values. Columns that do not contain their own DYNAMIC= specifications use
these. 
<P>A dynamic attribute value is defined in the template.
Its name serves as a placeholder for the value that is supplied to the data
component with the DYNAMIC= suboption. When ODS creates the output object
from the template and the data component, it substitutes the appropriate value
from the data component for the value's name in the template. 
<P>Each <I>dynamic-specification</I>
has the following form:
<P><B>dynamic-value-name</B>&lt;=<B>variable-name</B> |
<B>constant</B>>
<P>
<DL>
<DT><B>dynamic-value-name</B> </DT>
<DD>is the name that the template gives to a
dynamic attribute value.<P></DD>

<DT><B>variable-name</B> </DT>
<DD>specifies a variable whose value is assigned
to <I>dynamic-value-name</I> and passed to ODS to substitute
for the placeholder in the template when it creates the output object.<P></DD>

<DT><B>constant</B> </DT>
<DD>specifies a constant to assign to <I>dynamic-value-name</I> and to pass to ODS to substitute for the
placeholder in the template when it creates the output object. <P></DD>
</DL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you omit <I>variable-name</I> and <I>constant</I>, then
the DATA step looks for a variable name that matches '<I>dynamic-value-name</I>'.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">By default, DYNAMIC= applies
to all columns in the data component. You can override this specification
for an individual column by specifying DYNAMIC= as an attribute for that column
in the COLUMNS= or the VARIABLES= suboption.</TD>
</TABLE>
<P></DD>

<DT><A NAME="z0631288"></A>GENERIC=ON | OFF</DT>
<DD>asserts that the DATA step does or does
not use all column definitions for multiple variables.
<P>
<DL>
<DT>ON</DT>
<DD>asserts that the DATA step uses all column
definitions for multiple variables.<P></DD>

<DT>OFF</DT>
<DD>asserts that the DATA step uses no column
definitions for multiple variables.<P></DD>
</DL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">OFF</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Interaction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you do not specify
a template (see <A href="#z0631303">TEMPLATE= </A>), GENERIC= is set to ON.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">To have ODS recognize
the column names as a match, the GENERIC= specification must match the GENERIC=
specification in the template that you are using.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">By default, GENERIC= applies
to all columns in the data component. You can override this specification
for an individual column by specifying GENERIC= as an attribute for that column
in the COLUMNS= or the VARIABLES=
suboption.</TD>
</TABLE>
<P></DD>

<DT><A NAME="z0631294"></A>LABEL='<I>column-label</I>'</DT>
<DD>specifies a label for any column that does
not have a label specified in the COLUMNS= or VARIABLES= suboption.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">ODS uses for the column
header the first of these labels that it finds:
<P>
<UL>

<LI>a label that is specified with HEADER= for a particular
column in the template.<P>

<LI>a label that is specified for a particular column
with LABEL= in the COLUMNS= or VARIABLES= suboption.<P>

<LI>a label that is specified with LABEL= in the ODS=
option.<P>

<LI>a label that is assigned with the LABEL statement
in the DATA step.<P>

<LI>If no label is specified, the contents of the
template determines whether the column header contains the variable name or
is
blank.<P>
</UL>
</TD>
</TABLE>
<P></DD>

<DT><A NAME="z0631313"></A>OBJECT=<I>object-name</I></DT>
<DD>specifies a name for the output object. 
<P>The Results window and the
HTML contents file both contain a description of and a link to each output
object. The description contains the first of these items that ODS finds:
<P>
<UL>

<LI>the object's label (see
<A href="#z0631308">OBJECTLABEL= </A>)<P>

<LI>the current title if it is not the default title, "The
SAS System"<P>

<LI>the object's name<P>

<LI>the string <B><CODE><FONT size="+1">FilePrint<B>#</B></FONT></CODE></B>,
where <B>#</B> increases by 1 for each DATA step that you run in the
current SAS process without specifying an object name or an object label.<P>
</UL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>Object-name</I> must conform to the rules for SAS variable names. For information
on these rules, see "Appendix 1: Rules for Words and Names in the SAS
Language" in <B>SAS Language Reference:
Dictionary</B>.</TD>
</TABLE>
<P></DD>

<DT><A NAME="z0631308"></A>OBJECTLABEL='<I>object-label</I>'</DT>
<DD>specifies a label for the output object. 
<P>The Results window and the
HTML contents file both contain a description of and a link to each output
object. The description contains the first of these items that ODS finds: 
<P>
<UL>

<LI>the object's label<P>

<LI>the current title if
it is not the default title, "The
SAS System"<P>

<LI>the object's name (see the discussion of
<A href="#z0631313">OBJECT=</A>).<P>

<LI>the string <B><CODE><FONT size="+1">FilePrint<B>#</B></FONT></CODE></B>,
where <B>#</B> increases by 1 for each DATA step that you run in the
current SAS process without specifying an object name or an object
label.<P>
</UL>
<P></DD>

<DT><A NAME="z0631303"></A>TEMPLATE='<I>template-name</I>'</DT>
<DD>specifies the template to use with the data
component to produce the output object.
<P>
<DL>
<DT><B>template-name</B></DT>
<DD>is the path to the template. SAS stores
a template as an item in an item store. By default, ODS first looks for <I>template-name</I> in SASUSER.TEMPLAT. If it doesn't find the template
there, it looks in SASHELP.TMPLMST. You can change the locations that it searches
with the ODS PATH statement.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The default template
(base.datastep.table) that is stored in the SASUSER SAS data library.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Interaction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">When you use the
default template, GENERIC= is set to on for all columns in the data component.
(See
<A href="#z0631288">GENERIC=</A>).</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>

<DT>VARIABLES=(<I>variable-specification(s)</I>)</DT>
<DD>specifies one or more columns for the data
component of the output object. Each <I>variable-specification</I> associates a DATA step variable with a column that is defined
in the template.
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;By default, the order of the columns
in the output object is determined by their order in the template, not by
their order in the data component. You can override this order by using the
ORDER_DATA option in the PROC TEMPLATE step that creates the template. The
default DATA step template uses this option. &nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P>Each <I>variable-specification</I>
has this general
form:
<P><B>variable-name</B>&lt;=<B>column-name</B>>&lt;(<B>attribute(s)</B>)>
<P>
<DL>
<DT><I>variable-name</I></DT>
<DD>specifies a variable in the DATA step to
place in the specified column. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use list notation
(for example, <B><CODE><FONT size="+1">score1</FONT></CODE></B>-<B><CODE><FONT size="+1">score5</FONT></CODE></B>) to specify a range of variable
names.</TD>
</TABLE>
<P></DD>

<DT><I>column-name</I> </DT>
<DD>is the name of a column. This name must
match a name that is defined in the template. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you omit <I>column-name</I>, ODS looks for a column in the template that is
named <I>variable-name</I> and places the variable in
that column. If no such column exists, ODS returns an error.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>Column-name</I> must match a column name in the template that you are using.
It must also conform to the rules for SAS variable names. For information
on these rules, see "Appendix 1: Rules for Words and Names in the SAS
Language" in <B>SAS Language Reference: Dictionary</B>.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use list notation
(for example, <B><CODE><FONT size="+1">score1</FONT></CODE></B>-<B><CODE><FONT size="+1">score5</FONT></CODE></B>) to specify a range of column
names.</TD>
</TABLE>
<P></DD>

<DT><I>attribute</I></DT>
<DD>assigns a characteristic, such as a label
or a format, to a particular column in the data component. These individual
specifications override any attributes that are set, in the DATA step, for
the entire data component. You assign attributes just as you do in the COLUMNS=
suboption (see the discussion of <A href="#z0631327">attributes </A>). <P></DD>
</DL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use only
one VARIABLES= suboption in a FILE statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Interaction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can use either
the COLUMNS= suboption or the VARIABLES= suboption to associate variables
with columns. However, you cannot use both suboptions in the same FILE statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">VARIABLES= is primarily
for use with the default DATA step template. When you are using the default
template, the DATA step can map variables to the appropriate column in the
template so you don't need to specify a column name.</TD>
</TABLE>
<P></DD>
</DL>
 

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0630116">Details</A></FONT></B></TD></TR></TABLE>

<P>Within the DATA
step, the ODS option in the FILE statement and the _ODS_ option in the PUT
statement provide connections with the Output Delivery System (ODS). You use
both of these connections to route the results of a DATA step to ODS. By default,
when the DATA step uses ODS, ODS writes output objects to the procedure output
and places links to them in the Results folder. You can use global ODS statements
to write to other ODS destinations.
<P>The FILE and PUT statements interact in the following
way:
<P>
<UL>

<LI>The ODS option in the FILE statement defines the
structure of the data component that holds the results of the DATA step.<P>

<LI>The _ODS_ option in the PUT statement writes values
(as specified by the ODS option in the FILE statement) into a special buffer.
 This buffer is written to the data component.<P>

<LI>The ODS option in the FILE statement binds the
data component to a template to produce an output object. ODS sends this object
to all open ODS destinations, each of which formats the object appropriately.<P>
</UL>

<P>The ODS destinations are controlled by the global ODS
statements. You can use an existing template or create your own with the TEMPLATE.
procedure.
<P>For details on using the Output Delivery System, see <B>The Complete Guide to the SAS Output Delivery    
System</B>.
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><FONT size="5"><A name="z0631215">See Also</A></FONT>
</FONT></B></TD></TR></TABLE>
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>Statements:
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD><A href="z0171874.htm">FILE</A></TD></TR>
<TR valign="top"><TD></TD><TD><A href="z0631236.htm">PUT, _ODS_</A></TD></TR></TABLE></TD></TR></TABLE>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0171874.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0211297.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0631259">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>