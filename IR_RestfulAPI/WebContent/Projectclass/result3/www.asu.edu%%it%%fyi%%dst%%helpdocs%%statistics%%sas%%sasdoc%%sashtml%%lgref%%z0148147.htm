<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Statements : INPUT, Named </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0144370.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0202978.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">INPUT, Named</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0148147">INPUT, Named</A></FONT></H1>

<P><HR><BR><B>Reads data values that appear after a variable name that is followed
by an equal sign and assigns them to corresponding SAS variables</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Valid:</B></TD>
<TD bgcolor="#CCCCCC" align="left">in a DATA step
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Category:</B></TD>
<TD bgcolor="#CCCCCC" align="left">File-handling
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Type:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Executable
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0148147.htm#zid-2420"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0148147.htm#zid-2421"><FONT size="2"><B>Arguments</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0148147.htm#z0289815"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0148147.htm#z0289816"><FONT size="2">When to Use Named Input</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0148147.htm#z0289818"><FONT size="2">Restrictions</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0148147.htm#z0289821"><FONT size="2"><B>Examples</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0148147.htm#z0148284"><FONT size="2">Example 1: Using Named Input with Another Input Style</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0148147.htm#z0148299"><FONT size="2">Example 2: Reading Character Variables with Embedded Blanks</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0148147.htm#z0289825"><FONT size="2"><B>See Also</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="zid-2420">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>INPUT</B> &lt;<I>pointer-control</I>&gt;
<I>variable</I>= &lt;$&gt; &lt;@ |
@@&gt;;
</TD></TR></TABLE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>INPUT</B> &lt;<I>pointer-control</I>&gt; <I>variable</I>=  <I>informat.</I> &lt;@ |
@@&gt;;
</TD></TR></TABLE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>INPUT</B> <I>variable</I>= &lt;$&gt; <I>start-column</I> &lt;--
<I>end-column</I>&gt; 
<BR>&lt;.<I>decimals</I>&gt; &lt;@ | @@&gt;;
</TD></TR></TABLE>
<BR><H3><A name="zid-2421">Arguments</A></H3>

<P><A name="z0854026">&#13;</A>
<DL>
<DT><B><B><I>pointer-control</I></B></B></DT>
<DD>moves the input pointer to a specified line
or column in the input buffer.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z0146292.htm#z0146301">Column Pointer Controls</A> and
<A href="z0146292.htm#z0146303">Line Pointer Controls</A></TD>
</TABLE>
<P></DD>

<DT><B><B><I>variable</I></B>=</B></DT>
<DD>names a variable whose value  is  read by
the INPUT statement. In the input data record, the field has the form



<PRE><B><I>variable</I></B>=<B><I>value</I></B></PRE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0148284">Using Named Input with Another Input Style</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0854033">&#13;$</A></B></DT>
<DD>indicates to store a variable value as a
character value rather than as a numeric value.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If the variable is previously
defined as character, $  is not required.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0148284">Using Named Input with Another Input Style</A></TD>
</TABLE>
<P></DD>

<DT><B><B><I>informat.</I></B></B></DT>
<DD>specifies an informat that indicates the
data type of the input values, but not how the values are read.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Use the INFORMAT statement
to associate an informat with a variable.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z0309877.htm"> Informats</A> </TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0148284">Using Named Input with Another Input Style</A></TD>
</TABLE>
<P></DD>

<DT><B><B><I>start-column</I></B></B></DT>
<DD>specifies the column that the INPUT statement
uses to begin scanning in the input data records for the variable. The variable
name does not have to begin here.<P></DD>

<DT><B>-- <B><I>end-column</I></B></B></DT>
<DD>determines the default length of the variable.<P></DD>

<DT><B><A name="z0854046">&#13;@</A></B></DT>
<DD>holds an input record for the execution
of the next INPUT statement within the same iteration of the DATA step. This
line-hold specifier is called <I><B>trailing @</B></I>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The trailing @ must
be the last item in the INPUT statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The trailing @ prevents
the next INPUT statement from automatically releasing the current input record
and reading the next record into the input buffer. It is useful when you need
to read from a record multiple times. </TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z0146292.htm#z0146300">Using Line-Hold Specifiers</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0854051">&#13;@@</A></B></DT>
<DD>holds an input record for the execution
of the next INPUT statement across iterations of the DATA step. This line-hold
specifier is called <I><B>double trailing @</B></I>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The double trailing
@ must be the last item in the INPUT statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The  double trailing @ is
useful when each input line contains values for several observations.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z0146292.htm#z0146300">Using Line-Hold Specifiers</A></TD>
</TABLE>
<P></DD>
</DL>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0289815">Details</A></FONT></B></TD></TR></TABLE>

<BR><H3><A name="z0289816">When to Use Named Input</A></H3>


<P>Named input reads the input data records that contain a variable name followed
by an equal sign and a value for the variable.  The INPUT statement reads
the input data record at the current location of the input pointer. If the
input data records contain data values at the start of the record that the
INPUT statement cannot read with named input, use another input style to read
them. However, once the INPUT statement starts to read named input, SAS expects
that all the remaining values are in this form. See <A href="#z0148284">Using Named Input with Another Input Style</A>. 
<P>You do not have to specify the variables in
the INPUT
statement in the same order that they occur in the data records. Also, you
do not have to specify a variable for each field in the record. However, if
you do not specify a variable in the INPUT statement that another statement
uses (for example, ATTRIB, FORMAT, INFORMAT, LENGTH statement) and it occurs
in the input data record, the INPUT statement automatically reads the value.
SAS writes a note to the log that the variable is uninitialized.
<P>When you do not specify a variable for all the named
input data values, SAS sets _ERROR_ to 1 and writes a note to the log. For
example,   



<PRE>data list;
   input name=$ age=;
   datalines;
name=John age=34  gender=M
;</PRE>


The note  written to the log states that GENDER is not defined and
_ERROR_ is set to 1.
<BR><H3><A name="z0289818">Restrictions</A></H3>


<P>
<P>
<UL>

<LI>Once you start to read with named input, you cannot
switch to another input style or use pointer controls. All the remaining values
in the input data record must be in the form <I>variable=value</I>. SAS treats the values that are not in named input form as
invalid data.<P>

<LI>If named input values continue after the end of
the current input line, use a slash (/) at the end of the input line. This
tells SAS to move the pointer to the next line and to continue to read with
named input. For example, 



<PRE>input name=$ age=;</PRE>


can read this input
data record:  



<PRE>name=John /
   age=34</PRE><P>

<LI>If you use named input to read character values
that contain embedded blanks, put two blanks before and after the data value,
as you would with list input. See <A href="#z0148299">Reading Character Variables with Embedded Blanks</A>.<P>

<LI>You cannot reference an array with an asterisk
or an expression subscript.<P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0289821">Examples</A></FONT></B></TD></TR></TABLE>

<BR><H3> <A name="z0148284">Example 1: Using Named Input with Another Input Style</A> </H3>


<P>This DATA step uses list input and named input to read input
data records:



<PRE>options yearcutoff= 1920;

data list;
   input id name=$20. gender=$;
   informat dob ddmmyy8.;
   datalines;
4798  gender=m name=COLIN age=23 dob=16/02/75
2653 name=MICHELE age=46 gender=f
;</PRE>


The INPUT statement uses list input to read the first variable, ID.
The remaining variables  NAME, GENDER, and DOB are read with named input.
These variables are not read in order. The $20. informat with NAME= prevents
the INPUT statement from truncating  the character value to a length of eight.
The INPUT statement reads the DOB= field because the INFORMAT statement refers
to this variable. It skips the AGE= field altogether. SAS writes notes to
the log  that DOB is uninitialized, AGE is not defined, and  _ERROR_ is set
to 1. 
<BR><H3> <A name="z0148299">Example 2: Reading Character Variables with Embedded Blanks</A> </H3>


<P>This DATA step reads character variables that contain
embedded blanks with named input:



<PRE>data list2;
   informat header $30. name $15.;
   input header= name=;
   datalines;
header=  age=60 AND UP  name=PHILIP
;</PRE>


Two spaces  precede and follow the value of the variable HEADER, which
is 


<CODE><B>AGE=60 AND UP</B></CODE>. The field also contains an equal sign.  
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><FONT size="5"><A name="z0289825">See Also</A></FONT>
</FONT></B></TD></TR></TABLE>
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>Statement:
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD><A href="z0146292.htm">INPUT</A></TD></TR></TABLE></TD></TR></TABLE>

<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0144370.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0202978.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0148147">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>