<HTML>
<HEAD>
<TITLE>PROC LP Statement</TITLE>
<LINK REL="STYLESHEET" TYPE="text/css" HREF="../sas.css">
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<A NAME="lp_3b00">&#13;</A>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A NAME="topofpage" HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect7.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect9.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
</TR>
</TABLE>
<TABLE BGCOLOR="#CCCC99" WIDTH="100%" CELLPADDING=4>
<TR>
  <TD VALIGN=MIDDLE CLASS="chaphead"><I><FONT SIZE="2">The LP Procedure</FONT></I></TD>
</TR>
</TABLE><BR>
<P><!--End of Navigation Panel-->
<H2>PROC LP Statement</H2>
<A NAME="idxlp70264">&#13;</A><A NAME="idxlp70265">&#13;</A><A NAME="idxlp70266">&#13;</A><DL><DD><B CLASS="ssbeleven">PROC LP</B> <I CLASS="ssieleven"> options <SPAN CLASS="ssbeleven"><B>;</B></SPAN></I></DL><BR>This statement invokes the procedure.
The following options can appear in the PROC LP statement.
<BR><BR><H3><I><A NAME="lp_3ba0">Data Set Options</A></I></H3>
<A NAME="idxlp70267">&#13;</A><A NAME="idxlp70268">&#13;</A><A NAME="idxlp70269">&#13;</A><A NAME="idxlp70270">&#13;</A><A NAME="idxlp70271">&#13;</A><A NAME="idxlp70272">&#13;</A><DL>
<DT CLASS="ssbten"><A NAME="lp_3baa"><B CLASS="ssbten">ACTIVEIN=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70024">&#13;</A><A NAME="idxlp70025">&#13;</A><A NAME="idxlp70026">&#13;</A>names the SAS data set containing the active nodes in
a branch and bound tree that is to be used to restart
an integer program.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bab"><B CLASS="ssbten">ACTIVEOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70027">&#13;</A><A NAME="idxlp70028">&#13;</A><A NAME="idxlp70029">&#13;</A>names the SAS data set in which to save the current
branch and bound tree of active nodes.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bac"><B CLASS="ssbten">DATA=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70030">&#13;</A><A NAME="idxlp70031">&#13;</A><A NAME="idxlp70032">&#13;</A>names the SAS data set containing the problem
data. If the DATA= option is not specified, PROC LP uses the
most recently created SAS data set.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bad"><B CLASS="ssbten">DUALOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70033">&#13;</A><A NAME="idxlp70034">&#13;</A><A NAME="idxlp70035">&#13;</A>names the SAS data set that contains
the current dual solution (shadow prices) 
on termination of PROC LP. This data set
contains the current dual solution only if PROC LP terminates
successfully.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bae"><B CLASS="ssbten">PRIMALIN=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70036">&#13;</A><A NAME="idxlp70037">&#13;</A><A NAME="idxlp70038">&#13;</A>names the SAS data set that contains a feasible solution
to the problem defined by the DATA= data set.
The data set specified in the PRIMALIN= option should have
the same format as a data set saved using the PRIMALOUT= option.
Specifying the PRIMALIN= option is particularly useful for continuing
iteration on a problem previously attempted.
It is also useful for performing sensitivity analysis
on a previously solved problem.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3baf"><B CLASS="ssbten">PRIMALOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70039">&#13;</A><A NAME="idxlp70040">&#13;</A><A NAME="idxlp70041">&#13;</A>names the SAS data set that contains
the current primal solution 
when PROC LP terminates.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bag"><B CLASS="ssbten">SPARSEDATA</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70042">&#13;</A><A NAME="idxlp70043">&#13;</A><A NAME="idxlp70044">&#13;</A>tells PROC LP that the data are in the sparse input format.
If this option is not specified,
PROC LP assumes that the data are
in the dense input format.
<BR><BR>See the <A HREF="sect27.htm#lp_4b00">Sparse Data Input Format</A>
for information about the sparse input format.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bah"><B CLASS="ssbten">TABLEAUOUT=<SPAN CLASS="ssiten"><I>SAS-data-set</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70045">&#13;</A><A NAME="idxlp70046">&#13;</A><A NAME="idxlp70047">&#13;</A>names the SAS data set in which to save the final tableau.
<BR><BR></DD>
</DL>
<H3><I><A NAME="lp_3bb0">Display Control Options</A></I></H3>
<A NAME="idxlp70273">&#13;</A><A NAME="idxlp70274">&#13;</A><DL>
<DT CLASS="ssbten"><A NAME="lp_3bba"><B CLASS="ssbten">FLOW</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70048">&#13;</A><A NAME="idxlp70049">&#13;</A><A NAME="idxlp70050">&#13;</A>requests that a journal (the Iteration Log)
of pivot information be displayed at each
PRINTFREQ= iteration. This includes the names
of the variables entering and leaving the basis, the reduced
cost of the entering variable, and the current objective value.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbb"><B CLASS="ssbten">FUZZ=<SPAN CLASS="ssiten"><I>e</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70051">&#13;</A><A NAME="idxlp70052">&#13;</A><A NAME="idxlp70053">&#13;</A>displays all numbers within <SPAN CLASS="ssiten"><I>e</I></SPAN> of zero as
zeros. The default value is <SPAN CLASS="mathfont">1E-10</SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbc"><B CLASS="ssbten">NOFLOW</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70054">&#13;</A><A NAME="idxlp70055">&#13;</A><A NAME="idxlp70056">&#13;</A>is the inverse of the FLOW option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbd"><B CLASS="ssbten">NOPARAPRINT</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70057">&#13;</A><A NAME="idxlp70058">&#13;</A><A NAME="idxlp70059">&#13;</A>is the inverse of the PARAPRINT option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbe"><B CLASS="ssbten">NOPRINT</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70060">&#13;</A><A NAME="idxlp70061">&#13;</A><A NAME="idxlp70062">&#13;</A>suppresses the display of the Variable, Constraint,
and Sensitivity Analysis summaries.
This option is equivalent to the PRINTLEVEL=<SPAN CLASS="ssiten"><I>0</I></SPAN> option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbf"><B CLASS="ssbten">NOTABLEAUPRINT</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70063">&#13;</A><A NAME="idxlp70064">&#13;</A><A NAME="idxlp70065">&#13;</A>is the inverse of the TABLEAUPRINT option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbg"><B CLASS="ssbten">PARAPRINT</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70066">&#13;</A><A NAME="idxlp70067">&#13;</A><A NAME="idxlp70068">&#13;</A>indicates that the solution be displayed at each pivot when
performing parametric programming.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbh"><B CLASS="ssbten">PRINT</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70069">&#13;</A><A NAME="idxlp70070">&#13;</A><A NAME="idxlp70071">&#13;</A>is the inverse of the NOPRINT option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbi"><B CLASS="ssbten">PRINTFREQ=<SPAN CLASS="ssiten"><I>m</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70072">&#13;</A><A NAME="idxlp70073">&#13;</A><A NAME="idxlp70074">&#13;</A>indicates that after every <I>m</I>th iteration, a
line in the (Integer) Iteration Log be displayed.
The default value is 1.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbj"><B CLASS="ssbten">PRINTLEVEL=<SPAN CLASS="ssiten"><I>i</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70075">&#13;</A><A NAME="idxlp70076">&#13;</A><A NAME="idxlp70077">&#13;</A>indicates the amount of displaying that the procedure should perform.
<DL>
<DT>PRINTLEVEL=-2
<DD>only messages to the SAS log are displayed.
<DT>PRINTLEVEL=-1
<DD>is equivalent to NOPRINT unless the problem
is infeasible. If it is infeasible, the infeasible rows are displayed
in the Constraint Summary along with the Infeasible Information
Summary. 
<DT>PRINTLEVEL=0
<DD>is identical to NOPRINT. 
<DT>PRINTLEVEL=1
<DD>all output is displayed.
</DL>
The default value is 1.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bbk"><B CLASS="ssbten">TABLEAUPRINT</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70078">&#13;</A><A NAME="idxlp70079">&#13;</A><A NAME="idxlp70080">&#13;</A>indicates that the final tableau be displayed.
<BR><BR></DD>
</DL>
<H3><I><A NAME="lp_3bc0">Interactive Control Options</A></I></H3>
<DL>
<DT CLASS="ssbten"><A NAME="lp_3bca"><B CLASS="ssbten">ENDPAUSE</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70081">&#13;</A><A NAME="idxlp70082">&#13;</A><A NAME="idxlp70083">&#13;</A>requests that PROC LP pause before displaying the solution.
When this pause occurs, you can enter the RESET, SHOW,
PRINT, RUN, and QUIT statements.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bcb"><B CLASS="ssbten">FEASIBLEPAUSE</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70084">&#13;</A><A NAME="idxlp70085">&#13;</A><A NAME="idxlp70086">&#13;</A>requests that PROC LP pause after a feasible (not necessarily
integer feasible) solution has been found.  At a pause,
you can enter RESET, SHOW, PRINT, PIVOT, RUN, and QUIT
statements.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bcc"><B CLASS="ssbten">IFEASIBLEPAUSE=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70087">&#13;</A><A NAME="idxlp70088">&#13;</A><A NAME="idxlp70089">&#13;</A>requests that PROC LP pause
after every IFEASIBLEPAUSE= integer feasible solutions.
At a pause, you can enter RESET, SHOW, PRINT, IPIVOT, PIVOT,
RUN, and QUIT statements. The default value is 99999999.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bcd"><B CLASS="ssbten">IPAUSE=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70090">&#13;</A><A NAME="idxlp70091">&#13;</A><A NAME="idxlp70092">&#13;</A>requests that PROC LP pause after every
<SPAN CLASS="ssiten"><I>n</I></SPAN> integer iterations. 
At a pause, you can enter the RESET, SHOW, PRINT, IPIVOT,
PIVOT, RUN, and QUIT statements.  The default value is 99999999.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bce"><B CLASS="ssbten">NOENDPAUSE</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70093">&#13;</A><A NAME="idxlp70094">&#13;</A><A NAME="idxlp70095">&#13;</A>is the inverse of the ENDPAUSE option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bcf"><B CLASS="ssbten">NOFEASIBLEPAUSE</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70096">&#13;</A><A NAME="idxlp70097">&#13;</A><A NAME="idxlp70098">&#13;</A>is the inverse of the FEASIBLEPAUSE option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bcg"><B CLASS="ssbten">PAUSE=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70099">&#13;</A><A NAME="idxlp70100">&#13;</A><A NAME="idxlp70101">&#13;</A>requests that PROC LP pause after every <SPAN CLASS="ssiten"><I>n</I></SPAN> iterations.
At a pause, you can enter the RESET, SHOW, PRINT, IPIVOT, 
PIVOT, RUN, and QUIT statements. The default value is 99999999.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bch"><B CLASS="ssbten">PROXIMITYPAUSE=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70102">&#13;</A><A NAME="idxlp70103">&#13;</A><A NAME="idxlp70104">&#13;</A>This option causes the procedure to pause if at least one integer feasible
solution has been found and the objective value of the current best integer
solution can be determined to be within <SPAN CLASS="ssiten"><I>r</I></SPAN> units of the 
optimal integer solution.
This distance, called proximity, is also displayed on the
Integer Iteration Log.
Note that the proximity is calculated using the minimum (maximum if the
problem is maximization)
objective value among the nodes that remain to be explored in the
branch and bound tree as a bound on the value of the optimal integer
solution. 
Following the first PROXIMITYPAUSE= pause, in order to avoid a pause
at every iteration thereafter, it is recommended that you reduce this
measure through the use of a RESET statement. 
Otherwise, if any other option
or statement that causes the procedure to pause is used while the
PROXIMITYPAUSE= option is in effect, pause interferences may occur.
When this pause occurs,
you can enter RESET, SHOW, PRINT, IPIVOT, PIVOT, RUN,
and QUIT statements.  The default value is 0.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bci"><B CLASS="ssbten">READPAUSE</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70105">&#13;</A><A NAME="idxlp70106">&#13;</A><A NAME="idxlp70107">&#13;</A>requests that PROC LP pause after the data have been read and the
initial basis inverted.  When this pause occurs,
you can enter RESET, SHOW, PRINT, IPIVOT, PIVOT, RUN,
or QUIT statements.
<BR><BR></DD>
</DL>
<H3><I><A NAME="lp_3bd0">Preprocessing Control Options</A></I></H3>
<DL>
<DT CLASS="ssbten"><A NAME="lp_3bda"><B CLASS="ssbten">NOPREPROCESS</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70108">&#13;</A><A NAME="idxlp70109">&#13;</A><A NAME="idxlp70110">&#13;</A>is the inverse of the PREPROCESS option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bdb"><B CLASS="ssbten">PREPROCESS</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70111">&#13;</A><A NAME="idxlp70112">&#13;</A><A NAME="idxlp70113">&#13;</A>perform preprocessing techniques.
<BR><BR>See the <A HREF="sect33.htm#lp_4h00">Preprocessing</A>
for further discussion.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bdc"><B CLASS="ssbten">PEPSILON=<SPAN CLASS="ssiten"><I>e</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70114">&#13;</A><A NAME="idxlp70115">&#13;</A><A NAME="idxlp70116">&#13;</A>specifies a positive number close to zero.
This value is an error tolerance in the preprocessing.
If the value is too small, any marginal changes 
may cause the preprocessing to repeat itself.
However, if the value is too large, it may alter the 
optimal solution or falsely claim that the problem is
infeasible. 
The default value is <SPAN CLASS="mathfont">1E-8</SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bdd"><B CLASS="ssbten">PMAXIT=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70117">&#13;</A><A NAME="idxlp70118">&#13;</A><A NAME="idxlp70119">&#13;</A>performs at most <SPAN CLASS="ssiten"><I>n</I></SPAN> preprocessings.  Preprocessing
repeats itself if it improves some bounds or fixes some variables.
However when a problem is large and dense, each preprocessing may take a
significant amount of CPU time.  This option limits the number of
preprocessings PROC LP performs.  
It can also reduce the build-up of round-off errors. 
The default value is 100.
<BR><BR></DD>
</DL>
<H3><I><A NAME="lp_3be0">Branch and Bound Algorithm Control Options</A></I></H3>
<DL>
<DT CLASS="ssbten"><A NAME="lp_3bea"><B CLASS="ssbten">AUTO, AUTO(<SPAN CLASS="ssiten"><I>m,n</I></SPAN>)</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70120">&#13;</A><A NAME="idxlp70121">&#13;</A><A NAME="idxlp70122">&#13;</A>This option automatically sets and adjusts the value of 
the CONTROL= option.  Initially, it sets CONTROL=0.70 concentrating
on finding an integer feasible solution or an upper bound.  
When an upper bound is found, it sets 
CONTROL=0.5 concentrating on efficiency and lower
bound improvement.  When the number of active problems
exceeds <SPAN CLASS="mathfont"><I>m</I></SPAN>, it starts to increase the value
of CONTROL= gradually to keep the size of active problems 
under control.
When total active problems exceed <SPAN CLASS="mathfont"><I>n</I></SPAN>, CONTROL=1 will
keep the active problems from further growing.  You can
alter the automatic process by resetting the
value of CONTROL= interactively.
<BR><BR>The default values of <SPAN CLASS="mathfont"><I>m</I></SPAN> and <SPAN CLASS="mathfont"><I>n</I></SPAN> are 20000 and 250000,
respectively.  You can change the two values according
to your computer's space and memory capacities.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3beb"><B CLASS="ssbten">BACKTRACK=<SPAN CLASS="ssiten"><I>rule</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70123">&#13;</A><A NAME="idxlp70124">&#13;</A><A NAME="idxlp70125">&#13;</A>specifies the rule used to choose the next active problem
when backtracking is required.
One of the following can be specified:
<UL>
<LI> BACKTRACK=<SPAN CLASS="ssiten"><I>LIFO</I></SPAN>
<LI> BACKTRACK=<SPAN CLASS="ssiten"><I>FIFO</I></SPAN>
<LI> BACKTRACK=<SPAN CLASS="ssiten"><I>OBJ</I></SPAN>
<LI> BACKTRACK=<SPAN CLASS="ssiten"><I>PROJECT</I></SPAN>
<LI> BACKTRACK=<SPAN CLASS="ssiten"><I>PSEUDOC</I></SPAN>
<LI> BACKTRACK=<SPAN CLASS="ssiten"><I>ERROR</I></SPAN>
</UL>
The default value is <SPAN CLASS="ssiten"><I>OBJ</I></SPAN>.
<BR><BR>See the <A HREF="sect34.htm#lp_4i00">Integer Programming</A>
for further discussion.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bec"><B CLASS="ssbten">BINFST</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70126">&#13;</A><A NAME="idxlp70127">&#13;</A><A NAME="idxlp70128">&#13;</A>requests that PROC LP branch on binary variables first
when integer and binary variables present.
The reasoning behind this is that
a subproblem will usually be fathomed or found integer 
feasible after less than 20% of its variables have been fixed.
Considering binary variables first attempts to reduce the size
of the branch and bound tree. It is a heuristic technique.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bed"><B CLASS="ssbten">CANSELECT=<SPAN CLASS="ssiten"><I>rule</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70129">&#13;</A><A NAME="idxlp70130">&#13;</A><A NAME="idxlp70131">&#13;</A>specifies the rule used to choose the next active problem
when backtracking is not required or used.
One of the following can be specified:
<UL>
<LI> CANSELECT=<SPAN CLASS="ssiten"><I>LIFO</I></SPAN>
<LI> CANSELECT=<SPAN CLASS="ssiten"><I>FIFO</I></SPAN>
<LI> CANSELECT=<SPAN CLASS="ssiten"><I>OBJ</I></SPAN>
<LI> CANSELECT=<SPAN CLASS="ssiten"><I>PROJECT</I></SPAN>
<LI> CANSELECT=<SPAN CLASS="ssiten"><I>PSEUDOC</I></SPAN>
<LI> CANSELECT=<SPAN CLASS="ssiten"><I>ERROR</I></SPAN>
</UL>
The default value is <SPAN CLASS="ssiten"><I>LIFO</I></SPAN>.
<BR><BR>See the <A HREF="sect34.htm#lp_4i00">Integer Programming</A>
for further discussion.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bee"><B CLASS="ssbten">CONTROL=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70132">&#13;</A><A NAME="idxlp70133">&#13;</A><A NAME="idxlp70134">&#13;</A>specifies a number between 0 and 1.  This option combines
several rules used to choose the next active problem.  
It takes into consideration of three factors, efficiency,
improving lower and upper bounds.  When <SPAN CLASS="mathfont"><I>r</I></SPAN> is close to 0,
PROC LP concentrates on improving lower bound (upper bound
for maximization). However, the efficiency per integer 
iteration is usually the worst.  When <SPAN CLASS="mathfont"><I>r</I></SPAN> is close to 1, PROC LP
concentrates on improving upper bound (lower bound for
maximization).  In addition, the growth of active problems will be 
controlled and stopped at <SPAN CLASS="mathfont"><I>r</I>=1</SPAN>. When its value is around 0.5, 
PROC LP will be in the most efficient state in terms of CPU time 
and integer number of iterations.  CONTROL= option can be automatically 
adjusted when the AUTO option is applied.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bef"><B CLASS="ssbten">DELTAIT=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70135">&#13;</A><A NAME="idxlp70136">&#13;</A><A NAME="idxlp70137">&#13;</A>This option is used to modify the exploration of the
branch and bound tree.
If more than <SPAN CLASS="ssiten"><I>r</I></SPAN> integer iterations have
occurred since the last integer solution was found, then
the procedure uses the backtrack strategy
in choosing the next node to be explored.
The default value is 3 times the number of integer variables.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3beg"><B CLASS="ssbten">DOBJECTIVE=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70138">&#13;</A><A NAME="idxlp70139">&#13;</A><A NAME="idxlp70140">&#13;</A>specifies that PROC LP should discard active nodes 
that cannot lead to an integer solution with the objective
at least as small (or as large for maximizations) as
the objective of the
relaxed problem plus (minus) <SPAN CLASS="ssiten"><I>r</I></SPAN>. The default value is
<IMG WIDTH="36" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq7.gif"
 ALT="+\infty">.<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3beh"><B CLASS="ssbten">IEPSILON=<SPAN CLASS="ssiten"><I>e</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70141">&#13;</A><A NAME="idxlp70142">&#13;</A><A NAME="idxlp70143">&#13;</A>requests that PROC LP
consider an integer variable as having
an integer value if its value is within <SPAN CLASS="ssiten"><I>e</I></SPAN> 
units of an integer.
The default value is <SPAN CLASS="mathfont">1E-7</SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bei"><B CLASS="ssbten">IMAXIT=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70144">&#13;</A><A NAME="idxlp70145">&#13;</A><A NAME="idxlp70146">&#13;</A>performs at most <SPAN CLASS="ssiten"><I>n</I></SPAN> integer iterations.
The default value is 100.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bej"><B CLASS="ssbten">IOBJECTIVE=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70147">&#13;</A><A NAME="idxlp70148">&#13;</A><A NAME="idxlp70149">&#13;</A>specifies that PROC LP should discard active nodes unless
the node could lead to an integer solution with the objective
smaller (or larger for maximizations) than <SPAN CLASS="ssiten"><I>r</I></SPAN>.
The default value is <IMG WIDTH="36" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq7.gif"
 ALT="+\infty"> for minimization (<IMG WIDTH="36" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq8.gif"
 ALT="-\infty">for maximization).
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bek"><B CLASS="ssbten">LIFOTYPE=<SPAN CLASS="ssiten"><I>i</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70150">&#13;</A><A NAME="idxlp70151">&#13;</A><A NAME="idxlp70152">&#13;</A>specifies the order in which to add the two of the newly branched 
active nodes to the LIFO list.
<DL>
<DT>LIFOTYPE=0
<DD>add the node with minimum penalty first
<DT>LIFOTYPE=1
<DD>add the node with maximum penalty first
<DT>LIFOTYPE=2
<DD>add the node resulting from adding
<IMG WIDTH="120" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq9.gif"
 ALT="x_i \geq \lceil x^{opt}(k)_i\rceil"> first
<DT>LIFOTYPE=3
<DD>add the node resulting from adding
<IMG WIDTH="120" HEIGHT="35" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq10.gif"
 ALT="x_i \leq \lfloor x^{opt}(k)_i\rfloor"> first
</DL><BR>The default value is 0.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bel"><B CLASS="ssbten">NOAUTO</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70153">&#13;</A><A NAME="idxlp70154">&#13;</A><A NAME="idxlp70155">&#13;</A>turn off AUTO option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bem"><B CLASS="ssbten">NOBINFST</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70156">&#13;</A><A NAME="idxlp70157">&#13;</A><A NAME="idxlp70158">&#13;</A>turn off BINFST option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3ben"><B CLASS="ssbten">NOPOSTPROCESS</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70159">&#13;</A><A NAME="idxlp70160">&#13;</A><A NAME="idxlp70161">&#13;</A>do not perform postprocesing.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3beo"><B CLASS="ssbten">PENALTYDEPTH=<SPAN CLASS="ssiten"><I>m</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70162">&#13;</A><A NAME="idxlp70163">&#13;</A><A NAME="idxlp70164">&#13;</A>requests that PROC LP
examine <SPAN CLASS="ssiten"><I>m</I></SPAN> variables as branching candidates
when VARSELECT=<SPAN CLASS="ssiten"><I>PENALTY</I></SPAN>. If the PENALTYDEPTH= option
is not specified when VARSELECT=<SPAN CLASS="ssiten"><I>PENALTY</I></SPAN>, then
all of the variables are considered branching candidates.
The default value is the number of integer variables.
<BR><BR>See the <A HREF="sect34.htm#lp_4i00">Integer Programming</A>
for further discussion.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bep"><B CLASS="ssbten">POBJECTIVE=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70165">&#13;</A><A NAME="idxlp70166">&#13;</A><A NAME="idxlp70167">&#13;</A>specifies that PROC LP should discard active nodes that cannot
lead to an integer solution with objective
at least as small as <IMG WIDTH="67" HEIGHT="33" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq11.gif"
 ALT="o+| o|x"> POBJECTIVE=
(at least as large as <IMG WIDTH="67" HEIGHT="33" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq12.gif"
 ALT="o-| o|x"> POBJECTIVE= for maximizations)
where <SPAN CLASS="mathfont"><I>o</I></SPAN> is the objective of
the relaxed noninteger constrained problem.
The default value is <IMG WIDTH="36" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq7.gif"
 ALT="+\infty">.<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3beq"><B CLASS="ssbten">POSTPROCESS</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70168">&#13;</A><A NAME="idxlp70169">&#13;</A><A NAME="idxlp70170">&#13;</A>attempts to fix binary variables globally based on the 
relationships among the reduced cost and objective
value of the relaxed problem and the objective
value of current best integer feasible solution.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3ber"><B CLASS="ssbten">PWOBJECTIVE=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70171">&#13;</A><A NAME="idxlp70172">&#13;</A><A NAME="idxlp70173">&#13;</A>This option gives a percentage for use in the
automatic update of the WOBJECTIVE= option.
If the WOBJECTIVE= option is not specified in PROC LP, then when an
integer feasible solution is found, the value of the option 
is updated to be <SPAN CLASS="mathfont"><I>b</I>+<I>q</I>&times;<I>r</I></SPAN> where <SPAN CLASS="mathfont"><I>b</I></SPAN> is the best bound on the value
of the optimal integer solution and <SPAN CLASS="mathfont"><I>q</I></SPAN> is the current proximity.
Note that for maximizations, <SPAN CLASS="mathfont"><I>b</I>-<I>q</I>&times;<I>r</I></SPAN> is used.
The default value is 0.95.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bes"><B CLASS="ssbten">TREETYPE=<SPAN CLASS="ssiten"><I>i</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70174">&#13;</A><A NAME="idxlp70175">&#13;</A><A NAME="idxlp70176">&#13;</A>specifies a data compression algorithm.
<DL>
<DT>TREETYPE=0
<DD>no data compression
<DT>TREETYPE=1
<DD>Huffman coding compression routines
<DT>TREETYPE=2
<DD>adaptive Huffman coding compression routines
<DT>TREETYPE=3
<DD>adaptive arithmetic coding compression routines 
</DL><BR>For IP or MIP problems, the basis and bounds information 
of each active node is saved to a utility file.  
When the number of active nodes increases, 
the size of the utility file becomes larger and larger.  
If PROC LP runs into a disk problem, like &#34;disk full ...&#34;
or &#34;writing failure ...&#34;, you can use this option to 
compress the utility file.  For more information on the data 
compression routines, refer to Nelton (1992).
The default value is 0.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bet"><B CLASS="ssbten">VARSELECT=<SPAN CLASS="ssiten"><I>rule</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70177">&#13;</A><A NAME="idxlp70178">&#13;</A><A NAME="idxlp70179">&#13;</A>specifies the rule used to choose the branching variable
on an integer iteration.
<UL>
<LI> VARSELECT=<SPAN CLASS="ssiten"><I>CLOSE</I></SPAN>
<LI> VARSELECT=<SPAN CLASS="ssiten"><I>PRIOR</I></SPAN>
<LI> VARSELECT=<SPAN CLASS="ssiten"><I>PSEUDOC</I></SPAN>
<LI> VARSELECT=<SPAN CLASS="ssiten"><I>FAR</I></SPAN>
<LI> VARSELECT=<SPAN CLASS="ssiten"><I>PRICE</I></SPAN>
<LI> VARSELECT=<SPAN CLASS="ssiten"><I>PENALTY</I></SPAN> 
</UL>
The default value is <SPAN CLASS="ssiten"><I>FAR</I></SPAN>.
<BR><BR>See the <A HREF="sect34.htm#lp_4i00">Integer Programming</A>
for further discussion.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3beu"><B CLASS="ssbten">WOBJECTIVE=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70180">&#13;</A><A NAME="idxlp70181">&#13;</A><A NAME="idxlp70182">&#13;</A>specifies that PROC LP should delay examination of active
nodes that cannot lead to an integer solution with
objective at least as small
(as large for maximizations) as <SPAN CLASS="ssiten"><I>r</I></SPAN>, until all
other active nodes have been explored.
The default value is  <IMG WIDTH="36" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq7.gif"
 ALT="+\infty"> for minimization
(<IMG WIDTH="36" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq8.gif"
 ALT="-\infty"> for maximization).
<BR><BR></DD>
</DL>
<H3><I><A NAME="lp_3bf0">Sensitivity/Parametric/Ranging Control Options</A></I></H3>
<DL>
<DT CLASS="ssbten"><A NAME="lp_3bfa"><B CLASS="ssbten">NORANGEPRICE</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70183">&#13;</A><A NAME="idxlp70184">&#13;</A><A NAME="idxlp70185">&#13;</A>is the inverse of the RANGEPRICE option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bfb"><B CLASS="ssbten">NORANGERHS</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70186">&#13;</A><A NAME="idxlp70187">&#13;</A><A NAME="idxlp70188">&#13;</A>is the inverse of the RANGERHS option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bfc"><B CLASS="ssbten">PRICEPHI=<SPAN CLASS="ssiten"><I><IMG WIDTH="17" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="images/lp7eq13.gif"
 ALT="\Phi"></I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70189">&#13;</A><A NAME="idxlp70190">&#13;</A><A NAME="idxlp70191">&#13;</A>specifies the limit for parametric programming when perturbing
the price vector.
<BR><BR>See the <A HREF="sect37.htm#lp_4l00">Parametric Programming</A>
for further discussion.
See <A HREF="sect50.htm">Example 3.5</A> for an illustration of this option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bfd"><B CLASS="ssbten">RANGEPRICE</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70192">&#13;</A><A NAME="idxlp70193">&#13;</A><A NAME="idxlp70194">&#13;</A>indicates that range analysis is to be performed on the
price coefficients.
<BR><BR>See the <A HREF="sect37.htm#lp_4l00">Range Analysis</A>
for further discussion.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bfe"><B CLASS="ssbten">RANGERHS</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70195">&#13;</A><A NAME="idxlp70196">&#13;</A><A NAME="idxlp70197">&#13;</A>indicates that range analysis is to be performed on the
right-hand-side vector.
<BR><BR>See the <A HREF="sect37.htm#lp_4l00">Range Analysis</A>
for further discussion.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bff"><B CLASS="ssbten">RHSPHI=<SPAN CLASS="ssiten"><I><IMG WIDTH="17" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="images/lp7eq13.gif"
 ALT="\Phi"></I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70198">&#13;</A><A NAME="idxlp70199">&#13;</A><A NAME="idxlp70200">&#13;</A>specifies the limit for parametric programming when perturbing
the right-hand-side vector.
<BR><BR>See the <A HREF="sect37.htm#lp_4l00">Parametric Programming</A>
for further discussion.
<BR><BR></DD>
</DL>
<H3><I><A NAME="lp_3bg0">Simplex Algorithm Control Options</A></I></H3>
<DL>
<DT CLASS="ssbten"><A NAME="lp_3bga"><B CLASS="ssbten">DEVEX</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70201">&#13;</A><A NAME="idxlp70202">&#13;</A><A NAME="idxlp70203">&#13;</A>indicates that the devex method of weighting the reduced costs
be used in pricing (Harris 1975).
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgb"><B CLASS="ssbten">EPSILON=<SPAN CLASS="ssiten"><I>e</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70204">&#13;</A><A NAME="idxlp70205">&#13;</A><A NAME="idxlp70206">&#13;</A>specifies a positive number close to zero. It is used in
the following instances:
<BR><BR>During phase&#160;1, if the sum of the basic artificial variables is
within <SPAN CLASS="ssiten"><I>e</I></SPAN> of zero, the current solution is considered
feasible. If this sum is not exactly zero, then there are
artificial variables within <SPAN CLASS="ssiten"><I>e</I></SPAN> of zero in the current
solution.  In this case, a note is displayed on the SAS log.
<BR><BR>During phase&#160;1, if all reduced costs are
<IMG WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq14.gif"
 ALT="\leq"> <SPAN CLASS="ssiten"><I>e</I></SPAN> for nonbasic variables at their lower bounds and
<IMG WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq15.gif"
 ALT="\geq"> <SPAN CLASS="ssiten"><I>e</I></SPAN> for nonbasic variables at their upper bounds
and the sum of infeasibilities is greater than <SPAN CLASS="ssiten"><I>e</I></SPAN>,
then the problem is considered infeasible.
If the maximum reduced cost
is within <SPAN CLASS="ssiten"><I>e</I></SPAN> of zero, a note is displayed on the SAS log.
<BR><BR>During phase&#160;2, if all reduced costs are <IMG WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq14.gif"
 ALT="\leq"> <SPAN CLASS="ssiten"><I>e</I></SPAN> for
nonbasic variables at their lower bounds and <IMG WIDTH="18" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq15.gif"
 ALT="\geq"> <SPAN CLASS="ssiten"><I>e</I></SPAN> for
nonbasic variables at their upper bounds, then the
current solution is considered optimal.
<BR><BR>During phases 1, 2, and 3, the EPSILON= option is also used to test
if the denominator is different from zero before performing
the ratio test to determine which basic variable should leave
the basis.
<BR><BR>The default value <SPAN CLASS="mathfont">1E-8</SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgc"><B CLASS="ssbten">GOALPROGRAM</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70207">&#13;</A><A NAME="idxlp70208">&#13;</A><A NAME="idxlp70209">&#13;</A>specifies that multiple objectives in the input data set are
to be treated as sequential objectives in a goal-programming model.
The value of the right-hand-side variable in the objective
row gives the priority of the objective.  Lower numbers have
higher priority.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgd"><B CLASS="ssbten">INFINITY=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70210">&#13;</A><A NAME="idxlp70211">&#13;</A><A NAME="idxlp70212">&#13;</A>specifies the largest number PROC LP uses in computation.
The INFINITY= option is used to determine when a problem
has an unbounded variable value.  The default value is
the largest double precision number.
<A HREF="footnode.htm#1672"><SUP>*</SUP></A>
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bge"><B CLASS="ssbten">INVFREQ=<SPAN CLASS="ssiten"><I>m</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70213">&#13;</A><A NAME="idxlp70214">&#13;</A><A NAME="idxlp70215">&#13;</A>reinverts the current basis matrix after
<SPAN CLASS="ssiten"><I>m</I></SPAN> major and minor iterations. 
The default value is 100.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgf"><B CLASS="ssbten">INVTOL=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70216">&#13;</A><A NAME="idxlp70217">&#13;</A><A NAME="idxlp70218">&#13;</A>reinverts the current basis matrix if the largest element
in absolute value in the decomposed basis matrix is greater than
<SPAN CLASS="ssiten"><I>r</I></SPAN>.
If after reinversion this condition still holds, then
the value of the INVTOL= option is increased by a factor of 10 and
a note indicating this modification is displayed on the SAS log.
When <SPAN CLASS="ssiten"><I>r</I></SPAN> is frequently exceeded, 
this may be an indication of a numerically unstable problem.
The default value is 1000.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgg"><B CLASS="ssbten">MAXIT=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70219">&#13;</A><A NAME="idxlp70220">&#13;</A><A NAME="idxlp70221">&#13;</A>simultaneously sets the values of the 
MAXIT1=, MAXIT2=, MAXIT3=, and IMAXIT= options.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgh"><B CLASS="ssbten">MAXIT1=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70222">&#13;</A><A NAME="idxlp70223">&#13;</A><A NAME="idxlp70224">&#13;</A>performs at most <SPAN CLASS="ssiten"><I>n</I></SPAN> <IMG WIDTH="32" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq16.gif"
 ALT="\geq 0"> phase&#160;1 iterations. 
The default value is 100.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgi"><B CLASS="ssbten">MAXIT2=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70225">&#13;</A><A NAME="idxlp70226">&#13;</A><A NAME="idxlp70227">&#13;</A>performs at most <SPAN CLASS="ssiten"><I>n</I></SPAN> <IMG WIDTH="32" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq16.gif"
 ALT="\geq 0"> phase&#160;2
iterations. If MAXIT2=0, then only phase&#160;1 is entered so that on
successful termination PROC LP will have found a feasible, but not
necessarily optimal, solution.
The default value is 100.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgj"><B CLASS="ssbten">MAXIT3=<SPAN CLASS="ssiten"><I>n</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70228">&#13;</A><A NAME="idxlp70229">&#13;</A><A NAME="idxlp70230">&#13;</A>performs at most <SPAN CLASS="ssiten"><I>n</I></SPAN> <IMG WIDTH="32" HEIGHT="30" ALIGN="MIDDLE" BORDER="0"
 SRC="images/lp7eq16.gif"
 ALT="\geq 0"> phase&#160;3
iterations. All dual pivots are counted as phase&#160;3 pivots.
The default value is 99999999.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgk"><B CLASS="ssbten">NODEVEX</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70231">&#13;</A><A NAME="idxlp70232">&#13;</A><A NAME="idxlp70233">&#13;</A>is the inverse of the DEVEX option.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgl"><B CLASS="ssbten">PARARESTORE</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70234">&#13;</A><A NAME="idxlp70235">&#13;</A><A NAME="idxlp70236">&#13;</A>indicates that following a parametric programming analysis,
PROC LP should restore the basis.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgm"><B CLASS="ssbten">PHASEMIX=r</B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70237">&#13;</A><A NAME="idxlp70238">&#13;</A><A NAME="idxlp70239">&#13;</A>specifies a number between 0 and 1.  When the number is
positive, PROC LP tries to improve the objective function
of phase&#160;2 during phase&#160;1.  The PHASEMIX= option is a weight factor of
the phase&#160;2 objective function in phase&#160;1.
The default value is 0.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgn"><B CLASS="ssbten">PRICETYPE=<SPAN CLASS="ssiten"><I>pricetype</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70240">&#13;</A><A NAME="idxlp70241">&#13;</A><A NAME="idxlp70242">&#13;</A>specifies the type of multiple pricing to be performed.
If this option is specified and the PRICE= option is not
specified, then PRICE= is assumed to be 10.
<UL>
<LI> PRICETYPE=<SPAN CLASS="ssiten"><I>COMPLETE</I></SPAN>
<LI> PRICETYPE=<SPAN CLASS="ssiten"><I>DYNAMIC</I></SPAN>
<LI> PRICETYPE=<SPAN CLASS="ssiten"><I>NONE</I></SPAN>
<LI> PRICETYPE=<SPAN CLASS="ssiten"><I>PARTIAL</I></SPAN>
</UL>
The default value is <SPAN CLASS="ssiten"><I>PARTIAL</I></SPAN>.
See the <A HREF="sect31.htm#lp_4f00">Pricing</A> 
for a description of this process.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgo"><B CLASS="ssbten">PRICE=<SPAN CLASS="ssiten"><I>m</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70243">&#13;</A><A NAME="idxlp70244">&#13;</A><A NAME="idxlp70245">&#13;</A>specifies the number of columns
to subset when multiple pricing 
is used in selecting the column to enter the basis (Greenberg 1978).
The type of suboptimization used is determined by the
PRICETYPE= option.
See the <A HREF="sect31.htm#lp_4f00">Pricing</A> 
for a description of this process.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgp"><B CLASS="ssbten">RANDOMPRICEMULT=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70246">&#13;</A><A NAME="idxlp70247">&#13;</A><A NAME="idxlp70248">&#13;</A>specifies a number between 0 and 1.
This option sets a limit, in phase&#160;1, on the number
of iterations when PROC LP will randomly pick the entering variables.  
The limit equals <SPAN CLASS="ssiten"><I>r</I></SPAN> times the number of nonbasic
variables, or the number of basic variables, which ever is
smaller.  
The default value of the RANDOMPRICEMULT= option is 0.01.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgq"><B CLASS="ssbten">REPSILON=<SPAN CLASS="ssiten"><I>e</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70249">&#13;</A><A NAME="idxlp70250">&#13;</A><A NAME="idxlp70251">&#13;</A>specifies a positive number close to zero. 
The REPSILON= option is used in the ratio test to determine which basic
variable is to leave the basis.
The default value is <SPAN CLASS="mathfont">1E-10</SPAN>.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgr"><B CLASS="ssbten">SCALE=<SPAN CLASS="ssiten"><I>scale</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70252">&#13;</A><A NAME="idxlp70253">&#13;</A><A NAME="idxlp70254">&#13;</A>specifies the type of scaling to be used.
<UL>
<LI> SCALE=<SPAN CLASS="ssiten"><I>NONE</I></SPAN>
<LI> SCALE=<SPAN CLASS="ssiten"><I>COLUMN</I></SPAN>
<LI> SCALE=<SPAN CLASS="ssiten"><I>ROW</I></SPAN>
<LI> SCALE=<SPAN CLASS="ssiten"><I>BOTH</I></SPAN>
</UL>
The default value is <SPAN CLASS="ssiten"><I>NONE</I></SPAN>.
See the <A HREF="sect32.htm#lp_4g00">Scaling</A>
for further discussion.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgs"><B CLASS="ssbten">SMALL=<SPAN CLASS="ssiten"><I>e</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70255">&#13;</A><A NAME="idxlp70256">&#13;</A><A NAME="idxlp70257">&#13;</A>specifies a positive number close to zero.
Any element in a matrix with a value less than <SPAN CLASS="ssiten"><I>e</I></SPAN>
is set to zero.  The default value is machine dependent.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgt"><B CLASS="ssbten">TIME=<SPAN CLASS="ssiten"><I>t</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70258">&#13;</A><A NAME="idxlp70259">&#13;</A><A NAME="idxlp70260">&#13;</A>checks at each iteration to see if <SPAN CLASS="ssiten"><I>t</I></SPAN> seconds
have elapsed since PROC LP began.  
If more than <SPAN CLASS="ssiten"><I>t</I></SPAN> seconds have elapsed,
the procedure pauses and displayed the current solution.
The default value is 120 seconds.
<BR><BR></DD><DT CLASS="ssbten"><A NAME="lp_3bgu"><B CLASS="ssbten">U=<SPAN CLASS="ssiten"><I>r</I></SPAN></B></A></DT>
<DD CLASS="sasop"><A NAME="idxlp70261">&#13;</A><A NAME="idxlp70262">&#13;</A><A NAME="idxlp70263">&#13;</A>enables PROC LP to control the choice of pivots during LU
decomposition and updating the basis matrix.  The variable <SPAN CLASS="ssiten"><I>r</I></SPAN>
should take values between EPSILON and 1.0 because small values
of <SPAN CLASS="ssiten"><I>r</I></SPAN> bias the algorithm toward maintaining sparsity at
the expense of numerical stability and vice versa.  The more sparse
the decomposed basis is, the less time each iteration takes.
The default value is 0.1.
<BR><BR></DD>
</DL><P>
<!--Navigation Panel-->
<TABLE BORDER="0" CELLPADDING="0">
<TR VALIGN="TOP">
  <TD ALIGN="CENTER">
  <A HREF="index.htm">
  <IMG BORDER="0" SRC="../../common/images/cont1.gif" ALT="Chapter Contents" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Chapter Contents</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect7.htm"><IMG BORDER="0" SRC="../../common/images/prev1.gif" ALT="Previous" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Previous</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="sect9.htm"><IMG BORDER="0" SRC="../../common/images/next1.gif" ALT="Next" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Next</FONT></A></TD>
  <TD ALIGN=CENTER>
  <A HREF="#topofpage">
  <IMG BORDER="0" SRC="../../common/images/top1.gif" ALT="Top" WIDTH="99" HEIGHT="16"><BR><FONT SIZE="-2">Top</FONT></A></TD>
</TR>
</TABLE>
<P><!--End of Navigation Panel-->
<P><FONT SIZE="1"><A HREF="../../common/images/copyrite.htm">Copyright &copy; 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>
