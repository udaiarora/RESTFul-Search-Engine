<HTML>
<!-- This page produced Fri Jul  9 14:14:38 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>The GFONT Procedure : PROC GFONT Statement </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z1chap.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z3ntax.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zng-font.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">The GFONT Procedure</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="zatement">PROC GFONT Statement</A></FONT></H1>

<HR>
<B>The PROC GFONT statement can either create user-defined fonts
or display existing software fonts. Therefore, it names the font to be created
or displayed. If the procedure creates a font it names the input data set.
Optionally, the procedure modifies the design and appearance of the fonts
that you create or display, and specifies a destination catalog for graphics
output.</B><P>
<A name="z0262710">&#13;</A>
<BR><H3><A name="z0262711">Syntax</A></H3>


<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PROC GFONT</B> NAME=<I>font-name</I>
<BR><I>mode</I>
<BR>
&lt;<I>display-option(s)</I>&gt;
<BR>&lt;<I>creation-option(s)</I>&gt;;
</TD></TR></TABLE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B></B>
</TD></TR></TABLE>
<P><A name="z0690099">&#13;  </A>
<P>
<UL>

<LI>
<P><I>mode</I> must be one of
the following:
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>
<P>DATA=<I>font-data-set</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>NOBUILD</TD></TR></TABLE><P>

<LI>
<P><I>display-option(s)</I>
can be one or more
of the following: 
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>
<P>CTEXT=<I>text-color</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>GOUT=&lt;<I>libref</I>.><I>output-catalog</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>HEIGHT=<I>character-height</I>&lt;<I>units</I>></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>NOKEYMAP</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>NOROMAN</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>NOROMHEX</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>REFCOL=<I>reference-line-color</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>REFLINES</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>ROMCOL=<I>code-color</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>ROMFONT=<I>font</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>ROMHEX</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>ROMHT=<I>height</I>&lt;<I>units</I>></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>SHOWALL</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>SHOWROMAN</TD></TR></TABLE><P>

<LI>
<P><I>creation-option(s)</I>
can be one or
more of the following: 
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>
<P>BASELINE=<I>y</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>CAPLINE=<I>y</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>CHARSPACETYPE=DATA | FIXED |
NONE | UNIFORM</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>CODELEN=1 |
2</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>FILLED</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>KERNDATA=<I>kern-data-set</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>MWIDTH=<I>character-width</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>NODISPLAY</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>NOKEYMAP</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>RESOL=1...4</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>ROMHEX</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>SHOWROMAN</TD></TR>
<TR valign="top"><TD></TD><TD>
<P>SPACEDATA=<I>space-data-set</I></TD></TR>
<TR valign="top"><TD></TD><TD>
<P>UNIFORM</TD></TR></TABLE><P>
</UL>
For
more detail on using the GFONT syntax, see <A href="#z0264900">Displaying Fonts: Required Arguments, Options</A> and
<A href="#z0265066">Creating Fonts: Required Arguments, Options </A>.<H1><FONT size="5"><A name="z0264900">Displaying Fonts: Required Arguments, Options</A></FONT></H1>

<HR>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>

</TD></TR></TABLE>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0264792">Required Arguments for Displaying Fonts</A></FONT></B></TD></TR></TABLE>
<P><A name="z0690137">&#13; </A>
<DL>
<DT><B><A name="z0690138">&#13;  NAME=<B><I>font-name</I></B> </A>
<BR>N=<B><I>font-name</I></B></B></DT>
<DD>specifies the font to be displayed. <I><B>Font-name</B></I> can be the name of a SAS software font or a font you previously
created.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See
also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="zontchap.htm">SAS/GRAPH Fonts</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690142">&#13;   NOBUILD   </A>
<BR>NB</B></DT>
<DD>specifies that the GFONT procedure is to
display an existing font.  The NOBUILD argument tells the procedure that no
font is being generated and not to look for an input data set.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n01-ex.htm">Displaying Fonts and Character Codes</A></TD>
</TABLE>
<P></DD>
</DL>

<P>To
display a user-generated font, you must define libref
GFONT0. See <A href="z1epts.htm#z-gfont0">About the Libref GFONT0</A>
for details.
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0264796">Options for Displaying Fonts</A></FONT></B></TD></TR></TABLE>
<P><A name="z0690147">&#13;</A>
<P>Options that can be used for either font display or
font creation are described here and in <A href="#z0266532">Options for Creating Fonts</A>.
<P>Options that display a font can be used when you create
a font if you also display it (that is, the NODISPLAY option is not used in
the PROC GFONT statement).  However, none of the display options affect the
design and appearance of the stored font except the NOKEYMAP, SHOWROMAN, and
ROMHEX options.
<P>When the syntax of an option includes <B>units</B>,
use one of these: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>CELLS</TD>
<TD align="left">character cells</TD></TR>

<TR align=left valign="top">
<TD>CM</TD>
<TD align="left">centimeters</TD></TR>

<TR align=left valign="top">
<TD>IN</TD>
<TD align="left">inches</TD></TR>

<TR align=left valign="top">
<TD>PCT</TD>
<TD align="left">percentage of the graphics output
area</TD></TR>

<TR align=left valign="top">
<TD>PT</TD>
<TD align="left">points</TD></TR>
</TABLE>

<P>If you omit <B>units</B>, a unit specification
is searched for in this order: 
<OL START="1" type="1">
<LI>the value of GUNIT= in a GOPTIONS statement<P>

<LI>the default unit,
CELLS.<P>
</OL>
 
<DL>
<DT><B><A name="z0690164">&#13;  
CTEXT=<B><I>text-color</I></B>   </A>
<BR>CT=<B><I>text-color</I></B></B></DT>
<DD>specifies a color for the body of the characters.
 If you do not use the CTEXT= option, a color specification is searched for
in the following order: 
<OL START="1" type="1">
<LI>the CTEXT= option in a GOPTIONS statement<P>

<LI>the default, the first color in the
colors list.<P>
</OL>
The CTEXT= value is not stored as part of the font.
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n02-ex.htm">Creating Figures for a Symbol Font</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690171">&#13;  GOUT=&lt;<B><I>libref</I></B>.><B><I>output-catalog</I></B></A></B></DT>
<DD>specifies the SAS catalog in which to save
the graphics output produced by the display of the font.  The GOUT option
is ignored if you use the NODISPLAY option in the PROC GFONT statement. You
can use the GREPLAY procedure to view the output that is stored in the catalog.
 If you omit the libref,  SAS/GRAPH looks
for the catalog in the temporary library called WORK and creates the catalog
if it does not exist.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See
also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="zatalogs.htm">Storing Graphics Output in SAS Catalogs</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690175">&#13;  HEIGHT=<B><I>character-height</I></B>&lt;<B><I>units</I></B>> </A>
<BR>H=<B><I>character-height</I></B>&lt;<B><I>units</I></B>></B></DT>
<DD>specifies the height of the font characters
in number of units, <I><B>n</B></I>. Height is measured from the minimum font
measurement to the capline.  By default, HEIGHT=2.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n01-ex.htm">Displaying Fonts and Character Codes</A></TD>
</TABLE>
<P></DD>

<DT><B><A NAME="z0266425"></A><A name="z0690179">&#13;  NOKEYMAP</A></B></DT>
<DD>specifies that the current key map is ignored
when displaying the font and its character codes or hexadecimal values.  If
you do not use the NOKEYMAP option when you display a font, the current key
map remains in effect.  If any characters in the font are not available through
the current key map, they are not displayed and a warning is issued in the
SAS log.  This happens when the key map is asymmetrical, that is, not all
characters in the font are mapped into the current key map.
<P>Displaying a font using the NOKEYMAP option enables
you to see all of the characters in the font, including those that are not
mapped into your current key map. Note that only those characters that are
mapped into your current key map are available (that is, those that are displayed
when you display the font without the NOKEYMAP option).
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="zontchap.htm">SAS/GRAPH Fonts</A>  
<A href="zmapchap.htm">The GKEYMAP Procedure</A> and the <A href="#z0266083">NOKEYMAP option</A> for Creating
Fonts</TD>
</TABLE>
<P></DD>

<DT><B><A NAME="z0266073"></A><A name="z0690183">&#13;  NOROMAN 
 </A>
<BR>NR</B></DT>
<DD>turns off the automatic display of character
codes that are produced when you use the SHOWROMAN option during font
creation.<P></DD>

<DT><B><A NAME="zoromhex"></A><A name="z0690186">&#13; 
NOROMHEX   </A>
<BR>NOHEX </B></DT>
<DD>turns off the automatic display of hexadecimal
values that are produced when you use the ROMHEX option during font creation.<P></DD>

<DT><B><A name="z0690189">&#13;   REFCOL=<B><I>reference-line-color</I></B></A></B></DT>
<DD>specifies a color for reference lines. By
default, the first color in the colors list is used.<P></DD>

<DT><B><A name="z0690191">&#13; 
REFLINES</A></B></DT>
<DD>draws reference lines around each displayed
character.  Vertical reference lines show the width of the character.  Horizontal
reference lines show the font maximum and the font minimum, as well as the
baseline and the capline.  See <A href="z1epts.htm#znt-fig2">Parts of a Font</A>
for an illustration of the placement of reference lines.<P></DD>

<DT><B><A name="z0690193">&#13;  ROMCOL=<B><I>code-color</I></B>   </A>
<BR>RC=<B><I>code-color</I></B></B></DT>
<DD>specifies the color of the character codes
or hexadecimal values that are displayed with the SHOWROMAN and ROMHEX options.
 If you do not use the ROMCOL= option, a color specification is searched for
in the following order: 
<OL START="1" type="1">
<LI>the CTEXT= option in a GOPTIONS statement<P>

<LI>the default, the first color in the
colors list.<P>
</OL>

<P>The ROMCOL= value is not stored as part of the font.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n01-ex.htm">Displaying Fonts and Character Codes</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690200">&#13; ROMFONT=<B><I>font</I></B>   </A>
<BR>RF=<B><I>font</I></B></B></DT>
<DD>specifies the font for character codes and
hexadecimal values that are displayed by the SHOWROMAN and ROMHEX options.
If you do not use the ROMFONT= option, a font specification is searched for
in the following order: 
<OL START="1" type="1">
<LI>the FTEXT= option in a GOPTIONS statement<P>

<LI>the default hardware font,
NONE.<P>
</OL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n01-ex.htm">Displaying Fonts and Character Codes</A></TD>
</TABLE>
<P></DD>

<DT><B><A NAME="z0265990"></A><A name="z0690206">&#13; ROMHEX   </A>
<BR>HEX</B></DT>
<DD>displays hexadecimal values below the font
characters.  If you use both the ROMHEX and SHOWROMAN options, both the character
codes and the hexadecimal values are displayed.  You also can use the ROMHEX
option when you create a font.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5">the <A href="#z0266094">ROMHEX
option</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690210">&#13; 
ROMHT=<B><I>height</I></B>&lt;<B><I>units</I></B>>   </A>
<BR>RH=<B><I>height</I></B>&lt;<B><I>units </I></B>></B></DT>
<DD>specifies the height of the character codes
and the hexadecimal values that are displayed with the SHOWROMAN and ROMHEX
options in number of units, <I><B>n</B></I>.  If you do not use the ROMHT=
option, a height specification is searched for in the following order: 
<OL START="1" type="1">
<LI>the HTEXT= option in a GOPTIONS
statement<P>

<LI>the default, ROMHT=1.<P>
</OL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n01-ex.htm">Displaying Fonts and Character Codes</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690216">&#13; SHOWALL</A></B></DT>
<DD>displays the font with a space for every
possible character position whether or not a font character exists for that
position. The characters that are displayed are those available under your
current key map, unless you use the NOKEYMAP option.  The SHOWALL option usually
is used in conjunction with the ROMHEX option, in which case all possible
hexadecimal values are displayed.  If, under your current key map, a font
character is available for a position, it displays above the hexadecimal value.
 If no character is available for a position, the space above the hexadecimal
value is blank.  You can use the SHOWALL option to show where undefined character
positions fall in the font.<P></DD>

<DT><B><A NAME="zowroman"></A><A name="z0690218">&#13;  SHOWROMAN   </A>
<BR>SR</B></DT>
<DD>displays character codes below the font
characters even if they are not displayed automatically with the font.  If
you use both the SHOWROMAN and ROMHEX options, both the character codes and
the hexadecimal values are displayed.  You can also use the SHOWROMAN option
when you create a font.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"> the <A href="#z0266223">SHOWROMAN option</A> for Creating
Fonts.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n01-ex.htm">Displaying Fonts and Character Codes</A></TD>
</TABLE>
<P></DD>
</DL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0262713">Details</A></FONT></B></TD></TR></TABLE>

<P><A name="z0690223">&#13;   To display a font, you must
specify the
name of the font with the NAME= argument and include the NOBUILD argument.
 For example, to display the Weather font with character codes that are displayed
in the Swiss font, use the following statement:  


</A>
<PRE>proc gfont name=weather nobuild romfont=swiss;</PRE><H1><FONT size="5"><A name="z0265066">Creating Fonts: Required Arguments, Options </A></FONT></H1>

<HR>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>

</TD></TR></TABLE>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="znid-736">Required Arguments for Creating Fonts</A></FONT></B></TD></TR></TABLE>
<P><A name="z0690224">&#13;
</A>
<DL>
<DT><B><A name="z0690225">&#13;  NAME=<B><I>font-name</I></B> </A>
<BR>N=<B><I>font-name</I></B></B></DT>
<DD>assigns a name to the font that you create. <I><B>Font-name</B></I> is the name of a catalog entry and must be a valid SAS name
of no more than eight characters. Do not use the name of an Institute-supplied
font or NONE for the name of a font.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n02-ex.htm">Creating Figures for a Symbol Font</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690229">&#13;  DATA=<B><I>font-data-set</I></B></A></B></DT>
<DD>specifies the SAS data set that the GFONT
procedure uses to build the font. The data set must be sorted by the variables
CHAR and SEGMENT.  By default, the procedure uses the most recently created
data set as the font data set.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="zms-data.htm">SAS Data Sets</A></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n02-ex.htm">Creating Figures for a Symbol Font</A></TD>
</TABLE>
<P></DD>
</DL>

<P>When
you create a font, you must define the libref GFONT0.
 See <A href="z1epts.htm#z-gfont0">About the Libref GFONT0</A>
for details. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;If a user-generated font has the
same name as an Institute-supplied font and if the libref GFONT0 has been
defined, the user-generated font is used because GFONT0 is searched first.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR>
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0266532">Options for Creating Fonts</A></FONT></B></TD></TR></TABLE>
<P><A name="z0690236">&#13;
</A>
<P>Options that can be used for either font display or
font creation are described here and in <A href="#z0264796">Options for Displaying Fonts</A>.
<P>Options that display a font can be used when you create
a font if you also display it (that is, the NODISPLAY option is not used in
the PROC GFONT statement).  However, none of the display options affect the
design and appearance of the stored font except the NOKEYMAP, SHOWROMAN, and
ROMHEX options.
<P><A name="z0690239">&#13; 
When the syntax of an option includes <B>units</B>, use one of these: </A>
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD><A name="z0690240">&#13;
  
 CELLS</A></TD>
<TD align="left">character cells</TD></TR>

<TR align=left valign="top">
<TD>CM</TD>
<TD align="left">centimeters</TD></TR>

<TR align=left valign="top">
<TD>IN</TD>
<TD align="left">inches</TD></TR>

<TR align=left valign="top">
<TD>PCT</TD>
<TD align="left">percentage of the graphics output
area</TD></TR>

<TR align=left valign="top">
<TD>PT</TD>
<TD align="left">points</TD></TR>
</TABLE>

<P>If you omit <B>units</B>, a unit specification
is searched for in this order: 
<OL START="1" type="1">
<LI>the value of GUNIT= in a GOPTIONS statement<P>

<LI>the default unit,
CELLS.<P>
</OL>
 
<DL>
<DT><B><A name="z0690253">&#13;  BASELINE=<B><I>y</I></B> </A>
<BR>B=<B><I>y</I></B></B></DT>
<DD>specifies the vertical coordinate in the
font data set that is the baseline of the characters. The baseline is the
line upon which the letters rest.  If you do not use the BASELINE= option,
the GFONT procedure uses the lowest vertical coordinate of the first character
in the font data set.<P></DD>

<DT><B><A name="z0690256">&#13;  CAPLINE=<B><I>y</I></B> </A>
<BR>C=<B><I>y</I></B></B></DT>
<DD> specifies the vertical coordinate in the
font data set that is the capline of the characters.  The capline is the highest
point of normal Roman capitals.  If you do not use the CAPLINE= option, the
GFONT procedure uses the highest vertical coordinate in the font data set,
in which case the capline and the font maximum are the same.  See <A href="z1epts.htm#znt-fig2">Parts of a Font</A> for an illustration
of capline and font maximum.
<P>If you use the CAPLINE= option, then when the GFONT
procedure calculates the height of a character, any parts of the character
that project above the capline are ignored in the calculation.
<P>You can use this option to prevent an accented capital
like A from being shortened to accommodate the accent. For example, if you
do not use the CAPLINE= option, the capline and the font maximum are the same
and the A is shortened to make room for the accent below the capline. However,
if CAPLINE= is used, the top of the letter A is at the capline, and the accent
is drawn above the capline and below the font maximum.<P></DD>

<DT><B><A NAME="z0266076"></A><A name="z0690261">&#13;  CHARSPACETYPE=DATA | FIXED | NONE | UNIFORM
  </A>
<BR>CSP=DATA | FIXED | NONE | UNIFORM </B></DT>
<DD>specifies the type of intercharacter spacing.
 The following are valid values: 
<P>
<DL>
<DT><A name="z0690264">&#13;
 DATA</A></DT>
<DD>specifies that the first observation for
each character sets the width of that character.  When CHARSPACETYPE=DATA,
the PTYPE variable is required, and the observation that specifies the width
of the character must have a PTYPE value of W.  See <A href="zng-font.htm#zata-set">The Font Data Set</A> for
details on the PTYPE variable.
<P>Intercharacter spacing is included in the character's
width.  For example, if the first observation for the letter A specifies a
character width of 10 units and the A itself occupies only 8 units, the remaining
2 units serve as intercharacter spacing. 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp;The character
can extend beyond the width that you specified in the first observation if
desired.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P></DD>

<DT><A name="z0690268">&#13; FIXED</A></DT>
<DD>adds a fixed amount of space between characters
based on the font size. The width of the individual character is determined
by the data that generate the character.<P></DD>

<DT><A name="z0690270">&#13;
NONE</A></DT>
<DD>specifies that no space is added between
characters.  The width of the individual character is determined by the data
that generate the character.  This type of spacing is useful for script fonts
in which the characters should appear connected.<P></DD>

<DT><A name="z0690272">&#13;
UNIFORM</A></DT>
<DD>specifies that the amount of space that
is used for each character is uniform rather than proportional. This means
that each character occupies the same amount of space. For example, in uniform
spacing the letters m and i occupy the same amount of space, whereas in proportional
spacing m occupies more space than i. In uniform spacing, the character is
always centered in the space and a fixed space is added between characters.
<P>When UNIFORM is specified, the amount of space that
is used for each character is one of the following: 
<P>
<UL>

<LI>by default, the width of the widest character
in the font.<P>

<LI>the width specified by the MWIDTH= option.  See
the <A href="#z0266079">MWIDTH=
option</A> for details.<P>
</UL>

<P> Specifying CHARSPACETYPE=UNIFORM is the same as using
the UNIFORM option.<P></DD>
</DL>
 
<P><B>Note:</B>&nbsp;&nbsp;&nbsp; By default,
CHARSPACETYPE=FIXED.&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"><BR><P></DD>

<DT><B><A name="z0690279">&#13;  CODELEN=1 | 2</A></B></DT>
<DD>specifies the length in bytes of the CHAR
variable. By default, CODELEN=1. To specify double-byte character sets for
languages such as Chinese, Japanese, or Korean, use CODELEN=2.  If you specify
a double-byte character set, you cannot specify kerning or space adjustment
with the KERNDATA= or SPACEDATA= options.<P></DD>

<DT><B><A name="z0690281">&#13;  FILLED </A>
<BR>F</B></DT>
<DD>specifies that the characters in a user-generated
polygon font are filled.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n02-ex.htm">Creating Figures for a Symbol Font</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690285">&#13;  KERNDATA=<B><I>kern-data-set</I></B>  </A>
<BR>KERN=<B><I>kern-data-set</I></B></B></DT>
<DD>specifies the SAS data set that contains
kerning information.  When the KERNDATA= option is used during font creation,
the data that are contained in the kern data set are applied to the font and
stored with it.  You cannot specify kerning for a double-byte character set
that is created by using the option CODELEN=2.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See
also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="zng-font.htm#z1-set">The Kern Data Set</A></TD>
</TABLE>
<P></DD>

<DT><B><A NAME="z0266079"></A><A name="z0690289">&#13;  MWIDTH=<B><I>character-width</I></B></A></B></DT>
<DD>specifies the width of a character in a
uniform font, where <I><B>character-width</B></I> is the number of font units.
 The MWIDTH= option is only valid when you specify uniform spacing by using
the UNIFORM option or when you specify CHARSPACETYPE=UNIFORM.  If you do not
use MWIDTH=, the default is the width of the widest character in the font
(usually the letter m).
<P>Typically, you use the MWIDTH= option to tighten the
spacing between characters. To do this, specify a smaller value (narrower
width) for <I><B>character-width</B></I>.  <A href="#znt-fig5">Using the MWIDTH= Option to Modify Spacing</A> shows the effect of decreasing the space
that is allowed for uniformly spaced characters. 
<P>
<P>
<B><I><A name="znt-fig5">Using the MWIDTH= Option to Modify Spacing</A></I></B><BR>


<P><IMG border="0" src="./images/01329292.gif" vspace="12" alt="[IMAGE]">
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5">the <A href="#z0266076">CHARSPACETYPE= option</A> and
the <A href="#z0266464">UNIFORM
option</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690294">&#13;  NODISPLAY </A>
<BR> ND</B></DT>
<DD>specifies that the GFONT procedure is not
to display the font that it is creating.<P></DD>

<DT><B><A NAME="z0266083"></A><A name="z0690297">&#13;  NOKEYMAP       </A></B></DT>
<DD> specifies that the current key map is ignored
when you generate and use the font that is being created, and that the character
codes you enter are not mapped in any way before being displayed.  As a result,
the generated font is <I><B>never</B></I> affected by any setting of the KEYMAP=
graphics option. <DL>
<DT><B><FONT color="FF00007">CAUTION:</FONT></B></DT><DD><B>Fonts generated with the NOKEYMAP option
are never affected by any setting of the KEYMAP= graphics option.</B>
&nbsp;&nbsp;<IMG border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom"></DD></DL> 
<P>By default, the NOKEYMAP option is <I><B>not</B></I>
used; in which case, when you build a font, the current key map is applied
to the values in the CHAR variable.
<P>However, your current key map may not be symmetrical;
that is, two or more input character codes may be mapped to the same output
character. For example, if A is mapped to B, then both A and B map to B, but
nothing maps to A.  In this case, more than one code in your input data set
can map to the same character in the resulting font. For example, if A and
B are values of CHAR, both map to B.  If this happens, a message that indicates
the problem characters is displayed in the SAS log.  To solve this problem,
you can do one of the following: 
<P>
<UL>

<LI>change the character code of one of the characters<P>

<LI>eliminate one of the
characters<P>

<LI>use the NOKEYMAP option.<P>
</UL>

<P>When you use the NOKEYMAP option, your font works correctly
only if the end user's host or controller encoding is the same as the encoding
used to create the input data set.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5">the <A href="#z0266425">NOKEYMAP option</A> for Displaying
Fonts and <A href="zmapchap.htm">The GKEYMAP Procedure</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690307">&#13;  RESOL=1...4   </A>
<BR> R=1...4</B></DT>
<DD>controls the resolution of the fonts by
specifying the number of bytes (1 through 4) for storing coordinates in the
font. The GFONT procedure provides three resolution levels (RESOL=3 produces
the same resolution level as RESOL=4).  By default, RESOL=1.
<P>The higher the number, the closer together the points
that define the character can be spaced.  A high value specifies a denser
set of points for each character so that the characters approximate smooth
curved lines at very large sizes.  RESOL=2 works well for most applications;
RESOL=3 or 4 may be too dense to be practical.
<P> The table below shows the resolution number and the
maximum number of distinct points that can be defined horizontally or vertically. 
<P>
<TABLE cellpadding="6" cellspacing="0" border="0">


<TR valign="bottom" bgcolor="#CCCCCC">
  <TH  colspan="2" align="LEFT" valign="BOTTOM" ><B>Resolution </B></TH>
  <TH  align="LEFT" valign="BOTTOM" ><B>Number of Distinct Points  </B></TH>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">2   </TD>
  
<TD  align="LEFT" valign="TOP">32,766</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">3   </TD>
  
<TD  align="LEFT" valign="TOP">2,147,483,646</TD>
</TR>


<TR valign="top" bgcolor="#FFFFFF">
  
<TD  colspan="2" align="LEFT" valign="TOP">4   </TD>
  
<TD  align="LEFT" valign="TOP">2,147,483,646</TD>
</TR>

</TABLE>

<BR>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z6n02-ex.htm">Creating Figures for a Symbol Font</A></TD>
</TABLE>
<P></DD>

<DT><B><A NAME="z0266094"></A><A name="z0690321">&#13;  ROMHEX   </A>
<BR> HEX</B></DT>
<DD>specifies that hexadecimal values display
automatically below the font characters when the GFONT procedure displays
the font. If you use the ROMHEX option for a font that you create, you can
later use the NOROMHEX option to suppress display of the hexadecimal values.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5">the <A href="#z0266223">SHOWROMAN option</A>,  the
<A href="#z0265990">ROMHEX option</A> for Displaying Fonts, and  the
<A href="#zoromhex">NOROMHEX
option</A></TD>
</TABLE>
<P></DD>

<DT><B><A NAME="z0266223"></A><A name="z0690325">&#13;  SHOWROMAN   </A>
<BR> SR</B></DT>
<DD>specifies that character codes display automatically
below the font characters when the GFONT procedure displays the font. If you
use the SHOWROMAN option for a font you create, you can later use the NOROMAN
option to suppress display of the character codes.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5">the <A href="#z0266094">ROMHEX option</A>,  the
<A href="#zowroman">SHOWROMAN option</A> for Displaying Fonts, and the 
<A href="#z0266073">NOROMAN option</A></TD>
</TABLE>
<P></DD>

<DT><B><A name="z0690329">&#13;  SPACEDATA=<B><I>space-data-set</I></B>
  </A>
<BR> SPACE=<B><I>space-data-set</I></B></B></DT>
<DD>specifies the SAS data set that contains
font spacing information. When you use the SPACEDATA= option during font creation,
the data contained in the space data set are applied to the font and stored
with it.  You cannot specify space adjustment for a double-byte character
set that is created by using the option CODELEN=2.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See
also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="zng-font.htm#z2-set">The Space Data Set</A></TD>
</TABLE>
<P></DD>

<DT><B><A NAME="z0266464"></A><A name="z0690333">&#13; UNIFORM   </A>
<BR>U  </B></DT>
<DD>specifies that characters are spaced uniformly
rather than proportionately.  Using the UNIFORM option is the same as specifying
CHARSPACETYPE=UNIFORM.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See also:</B></TD>
<TD align="left" bgcolor="#F5F5F5">the <A href="#z0266076">CHARSPACETYPE= option</A> and
the <A href="#z0266079">MWIDTH=
option</A></TD>
</TABLE>
<P></DD>
</DL>


<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z1chap.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z3ntax.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="zng-font.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#zatement">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>