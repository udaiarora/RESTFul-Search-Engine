<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Statements : WINDOW </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0202951.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0212624.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">WINDOW</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0224863">WINDOW</A></FONT></H1>

<P><HR><BR><B>Creates customized windows for your applications</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Valid:</B></TD>
<TD bgcolor="#CCCCCC" align="left">in a DATA step
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Category:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Window Display
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Type:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Declarative
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0224863.htm#zid-2640"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0224863.htm#zid-2641"><FONT size="2"><B>Arguments</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0224863.htm#z0290139"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0224863.htm#z0290140"><FONT size="2">Field Definitions</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0224863.htm#z0290141"><FONT size="2">Automatic Variables</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0224863.htm#z0290142"><FONT size="2">Displaying Windows</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0224863.htm#z0290143"><FONT size="2"><B>Comparisons</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0224863.htm#z0290144"><FONT size="2"><B>Examples</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0224863.htm#z0290145"><FONT size="2">Example 1: Creating a Single Window</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0224863.htm#z0290147"><FONT size="2">Example 2: Displaying Two Windows Simultaneously</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0224863.htm#z0290149"><FONT size="2">Example 3: Persisting and Nonpersisting Fields</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0224863.htm#z0290153"><FONT size="2">Example 4: Sending a Message</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0224863.htm#z0290156"><FONT size="2"><B>See Also</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="zid-2640">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>WINDOW</B> <I>window </I> &lt;<I>window-options</I>&gt;
<I>field-definition(s)</I>;
</TD></TR></TABLE>
<BR>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>WINDOW</B> <I>window </I> &lt;<I>window-options</I>&gt;
<I>group-definition(s)</I>; 
</TD></TR></TABLE>
<BR><H3><A name="zid-2641">Arguments</A></H3>

<P><A name="z0856243">&#13;</A>
<DL>
<DT><B><B><I>window</I></B></B></DT>
<DD>names the window.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Window names must
conform to SAS naming conventions.</TD>
</TABLE>
<P></DD>

<DT><B><B><I>window-options</I></B></B></DT>
<DD>specifies characteristics of the window
as a whole. Specify all <B><I>window-options</I></B> before
any field or GROUP= specifications. <B><I>Window-options</I></B>
can include 
<P>
<DL>
<DT><A name="z0856249">&#13;COLOR=<B><I>color</I></B></A></DT>
<DD>specifies the color of the window background
for operating environments that have this capability. In other operating environments,
this option affects the color of the window border. The following colors are
available:
<TABLE width="50%">
<TR>
<TD>BLACK</TD>
<TD>MAGENTA</TD></TR>
<TR>
<TD>BLUE</TD>
<TD>ORANGE</TD></TR>
<TR>
<TD>BROWN</TD>
<TD>PINK</TD></TR>
<TR>
<TD>CYAN</TD>
<TD>RED</TD></TR>
<TR>
<TD>GRAY</TD>
<TD>WHITE</TD></TR>
<TR>
<TD>GREEN</TD>
<TD>YELLOW</TD></TR>
</TABLE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you do not specify
a color with the COLOR= option, the window's background color is device-dependent
instead of black, and the color of a field is device-dependent instead of
white.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The representation of colors
may vary, depending on the monitor being used. COLOR= has no effect on monochrome
monitors.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856253">&#13;COLUMNS=<B><I>columns</I></B></A></DT>
<DD>specifies the number of columns in the window.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The window fills all
remaining columns in the display; the number of columns that are available
depends on the type of monitor that is being used.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856256">&#13;ICOLUMN=<B><I>column</I></B></A></DT>
<DD>specifies the initial column within the
display at which the window is displayed.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">SAS displays the window
at column 1.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856259">&#13;IROW=<B><I>row</I></B></A></DT>
<DD>specifies the initial row (or line) within
the display at which the window is displayed. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">SAS displays the window
at row 1.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856262">&#13;KEYS=<B><I>&lt;&lt;libref.>catalog.>keys-entry</I></B></A></DT>
<DD>specifies the name of a KEYS entry that
contains the function key definitions for the window.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">SAS uses the current
function key settings that are defined in the KEYS window.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you specify only an entry
name, SAS looks in the SASUSER.PROFILE catalog for a KEYS entry of the name
that is specified. You can also specify the three-level name of a KEYS entry,
in the form 



<PRE><B><I>libref.catalog.keys-entry</I></B></PRE>


 </TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">To create a set of function
key definitions for a window, use the KEYS window. Define the keys as you
want, and use the SAVE command to save the definitions in the SASUSER.PROFILE
catalog or in a SAS data library and catalog that you specify.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856267">&#13;MENU=<B><I>&lt;&lt;libref.>catalog.>pmenu-entry</I></B></A></DT>
<DD>specifies the name of a pull-down menu (pmenu)
you have built with the PMENU procedure.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you specify only an entry
name, SAS looks in the SASUSER.PROFILE catalog for a PMENU entry of the name
specified. You can also specify the three-level name of a PMENU entry in the
form 



<PRE><B><I>libref.catalog.pmenu-entry</I></B></PRE></TD>
</TABLE>
<P></DD>

<DT><A name="z0856270">&#13;ROWS=<B><I>rows</I></B></A></DT>
<DD>specifies the number of rows (or lines)
in the window. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The window fills all
remaining rows in the display.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The number of rows that
are available depends on the type of monitor that is being
used.</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>

<DT><B><B><I>field-definition</I></B></B></DT>
<DD>identifies and describes a variable or character
string to be displayed in a window or within a group of related fields.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">A window or group can contain
any number of fields, and you can define the same field in several groups
or windows.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can specify multiple <B><I>field-definitions</I></B>.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See Also:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The form of <B><I>field-definition</I></B> is given in  
<A href="#z0290140">Field Definitions</A>. </TD>
</TABLE>
<P></DD>

<DT><B><B><I>group-definition</I></B></B></DT>
<DD>names a group and defines all fields within
a group. A group definition consists of two parts: the GROUP= option and one
or more field definitions.
<P>
<DL>
<DT><A name="z0856281">&#13;GROUP=<B><I>group</I></B> </A></DT>
<DD>names a group of related fields.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><B><I>group</I></B> must be a SAS name.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">A window contains one
unnamed group of fields.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">When you refer to a group
in a DISPLAY statement, write the name as <B><I>window.group</I></B>.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">A group contains all fields
in a window that you want to display at the same time. Display various groups
of fields within the same window at different times by naming each group.
Choose the group to appear by specifying <B><I>window.group</I></B>
in the DISPLAY statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Specifying several groups
within a window prevents repetition of window options that do not change and
helps you to keep track of related displays. For example, if you are defining
a window to check data values, arrange the display of variables and messages
for most data values in the data set in a group that is named STANDARD. Arrange
the display of different messages in a group that is named CHECKIT that appears
when data values meet the conditions that you want to
check.</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>
</DL>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0290139">Details</A></FONT></B></TD></TR></TABLE>

<P>
<P><B>Operating Environment Information:</B>&nbsp;&nbsp;&nbsp;The
WINDOW statement has some functionality that is specific to your operating
environment. For details, see the SAS documentation for your operating environment.&nbsp;&nbsp;<img border="0" src="../common/images/cautend.gif" alt="[cautionend]" align="bottom">
<P>You can use the WINDOW statement in the SAS windowing
environment, in interactive line mode, or in noninteractive mode to create
customized windows for your applications.<FONT size="-1"><A href="#footnote1">(footnote 1)</A></FONT> Windows that you create can display text and accept input; they
have command and message lines. The window name appears at the top of the
window. Use commands and function keys with windows that you create. A window
definition remains in effect only for the DATA step that contains the WINDOW
statement.
<P>Define a window before you display it. Use the DISPLAY
statement to display windows that are created with the WINDOW statement. For
information about the DISPLAY statement, see  
<A href="z0214656.htm">DISPLAY</A>. 
<BR><H3><A name="z0290140">Field Definitions</A></H3>


<P>Use a
field definition to identify a variable or a character string to be displayed,
its position, and its attributes. Enclose character strings in quotation marks.
The position of an item is its beginning row (or line) and column. Attributes
include color, whether you can enter a value into the field, and characteristics
such as highlighting.
<P>You can define a field to contain a variable value or
a character string, but not both. The form of a field definition for a variable
value is
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
&lt;<I>row column</I>&gt; <I>variable</I> &lt;<I>format</I>&gt;
<I>options</I>
</TD></TR></TABLE>
<P>The form for a character string is
<P>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
&lt;<I>row
column</I>&gt; '<I>character-string</I>' <I>options</I>
</TD></TR></TABLE>
<P>The elements of a field definition are described here.

<DL>
<DT><B>row column</B></DT>
<DD>identifies the position of the variable
or character string.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you omit <I>row</I> in the first field of a window or group, SAS uses the first
row of the window; if you omit <I>row</I> in a later
field specification, SAS continues on the row that contains the previous field.
If you omit <I>column</I>, SAS uses column 1 (the left
border of the window).</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Although you can specify
either <I>row</I> or <I>column</I>
first, the examples in this book show the row first.</TD>
</TABLE>

<P>
<P>SAS keeps track of its position in the window with a
pointer. For example, when you tell SAS to write a variable's value in the
third column of the second row of a window, the pointer moves to row 2, column
3 to write the value. Use the pointer controls that are listed here to move
the pointer to the appropriate position for a field. 
<P>In a field definition, <I>row</I>
can be one of these row pointer controls:
<P>
<P>
<DL>
<DT>#<B>n</B></DT>
<DD>specifies row <I>n</I>
within the window.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>n</I>
must be a positive integer.</TD>
</TABLE>
<P></DD>

<DT>#<B>numeric-variable</B></DT>
<DD>specifies the row within the window that
is given by the value of <I>numeric-variable</I>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>#numeric-variable </I>must be a positive integer. If the value is not an integer,
the decimal portion is truncated and only the integer is used.</TD>
</TABLE>
<P></DD>

<DT>#(<B>expression</B>)</DT>
<DD>specifies the row within the window that
is given by the value of <I>expression</I>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>expression</I> can contain array references and must evaluate to a positive
integer.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Enclose <I>expression</I> in
parentheses.</TD>
</TABLE>
<P></DD>

<DT>/</DT>
<DD>moves the pointer to column 1 of the next
row.<P></DD>
</DL>

<P>In a field definition, <I>column</I>
can be one of these column pointer controls: 
<P>
<DL>
<DT><A name="z0856318">&#13;@<B>n</B></A></DT>
<DD>specifies column <I>n</I>
within the window.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>n</I> must be a positive
integer.</TD>
</TABLE>
<P></DD>

<DT>@<B>numeric-variable</B></DT>
<DD>specifies the column within the window that
is given by the value of <I>numeric-variable</I>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>numeric-variable</I> must be a positive integer. If the value is not an integer,
the decimal portion is truncated and only the integer is used.</TD>
</TABLE>
<P></DD>

<DT>@(<B>expression</B>)</DT>
<DD>specifies the column within the window that
is given by the value of <I>expression</I>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>expression</I> can contain array references and must evaluate to a positive
integer.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Enclose <I>expression</I> in
parentheses.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856328">&#13;+<B>n</B></A></DT>
<DD>moves the pointer <I>n</I>
columns.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Range:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>n</I>
must be a positive integer.</TD>
</TABLE>
<P></DD>

<DT>+<B>numeric-variable</B></DT>
<DD>moves the pointer the number of columns
that is given by the <I>numeric-variable</I>.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">+<I>numeric-variable</I> must be a positive or negative integer. If
the value is not an integer, the decimal portion is truncated and only the
integer is used.</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>

<DT><B>variable</B></DT>
<DD>names a variable to be displayed or to be
assigned the value that you enter at that position when the window is displayed.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><I>variable</I>
can be the name of a variable or of an array reference.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">To allow a variable value
in a field to be displayed but not changed by the user, use the PROTECT= option
(described later in this section). You can also protect an entire window or
group for the current execution of the DISPLAY statement by specifying the
NOINPUT option in the DISPLAY statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If a field definition contains
the name of a new variable, that variable is added to the data set that is
being created (unless you use a KEEP or DROP specification).</TD>
</TABLE>
<P></DD>

<DT><B>format</B></DT>
<DD>gives the format for the variable.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you omit <I>format</I>, SAS uses an informat and format that are specified
elsewhere (for example, in an ATTRIB, INFORMAT, or FORMAT statement or permanently
stored with the data set) or a SAS default informat and format.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If a field displays a variable
that cannot be changed (that is, you use the PROTECT=YES option), <I>format</I> can be any SAS format or a format that you define with
the FORMAT procedure.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If a field can both display
a variable and accept input, you must either specify the informat in an INFORMAT
or ATTRIB statement or use a SAS format such as $CHAR. or TIME. that has a
corresponding informat.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If a format is specified,
the corresponding informat is assigned automatically to fields that can accept
input.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">A format and an informat
in a WINDOW statement override an informat and a format that are specified
elsewhere.</TD>
</TABLE>
<P></DD>

<DT>'<B>character-string</B>'</DT>
<DD>contains the text of a character string
to be displayed.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The character string
must be enclosed in quotation marks.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You cannot enter
a value in a field that contains a character string.</TD>
</TABLE>
<P></DD>

<DT><B>options</B></DT>
<DD>include any of the following: 
<P>
<DL>
<DT>ATTR=<B>highlighting-attribute</B></DT>
<DD>controls these highlighting attributes of
the field: 
<P>
<DL>
<DT>BLINK</DT>
<DD>causes the field to blink.<P></DD>

<DT>HIGHLIGHT </DT>
<DD>displays the field at high intensity. <P></DD>

<DT>REV_VIDEO </DT>
<DD>displays the field in reverse video. <P></DD>

<DT>UNDERLINE </DT>
<DD>underlines the field. <P></DD>
</DL>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Alias:</B></TD>
<TD align="left" bgcolor="#F5F5F5">A=</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">To specify more than one
highlighting attribute, use the form</TD>
</TABLE>

<P>   ATTR=(<I>highlighting-attribute-1</I>,
. . . )
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The highlighting attributes
that are available depend on the type of monitor that you use.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856366">&#13;AUTOSKIP=YES | NO </A></DT>
<DD>controls whether the cursor moves to the
next unprotected field of the current window or group when you have entered
data in all positions of a field. 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>YES</TD>
<TD align="left">specifies that the cursor moves automatically
to the next unprotected field.</TD></TR>

<TR align=left valign="top">
<TD>NO</TD>
<TD align="left">specifies that the cursor does not
move automatically.</TD></TR>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Alias:</B></TD>
<TD align="left" bgcolor="#F5F5F5">AUTO=</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">NO</TD>
</TABLE>
<P></DD>

<DT><A name="z0856374">&#13;COLOR=<B>color</B> </A></DT>
<DD>specifies a color for the variable or character
string. The following colors are available:

<TABLE width="50%">
<TR>
<TD>BLACK</TD>
<TD>MAGENTA</TD></TR>
<TR>
<TD>BLUE</TD>
<TD>ORANGE</TD></TR>
<TR>
<TD>BROWN</TD>
<TD>PINK</TD></TR>
<TR>
<TD>CYAN</TD>
<TD>RED</TD></TR>
<TR>
<TD>GRAY</TD>
<TD>WHITE</TD></TR>
<TR>
<TD>GREEN</TD>
<TD>YELLOW</TD></TR>
</TABLE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Alias:</B></TD>
<TD align="left" bgcolor="#F5F5F5">C=</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">WHITE</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The representation of colors
may vary, depending on the monitor you use.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">COLOR= has no effect on
monochrome monitors.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856380">&#13;DISPLAY=YES |
NO</A></DT>
<DD>controls whether the contents of a field
are displayed. 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>YES</TD>
<TD align="left">specifies that SAS displays characters
in a field as you type them in.</TD></TR>

<TR align=left valign="top">
<TD>NO</TD>
<TD align="left">specifies that the entered characters
are not displayed.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">YES</TD>
</TABLE>
</TD></TR>
</TABLE>
<P></DD>

<DT><A name="z0856387">&#13;PERSIST=YES | NO</A></DT>
<DD>controls whether a field is displayed by
all executions of a DISPLAY statement in the same iteration of the DATA step
until the DISPLAY statement contains the BLANK option. 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>YES</TD>
<TD align="left">specifies that each execution of
the DISPLAY statement displays all previously displayed contents of the field
as well as those that are scheduled for display by the current DISPLAY statement.
If the new contents overlap persisting contents, the persisting contents are
no longer displayed.</TD></TR>

<TR align=left valign="top">
<TD>NO</TD>
<TD align="left">specifies that each execution of
a DISPLAY statement displays only the current contents of the field. </TD></TR>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">NO</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">PERSIST= is most useful
when the position of a field changes in each execution of a DISPLAY statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0290149">Persisting and Nonpersisting Fields</A></TD>
</TABLE>
<P></DD>

<DT><A name="z0856396">&#13;PROTECT=YES | NO</A></DT>
<DD>controls whether information can be entered
into a field. 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>YES</TD>
<TD align="left">specifies that you cannot enter information.</TD></TR>

<TR align=left valign="top">
<TD>NO</TD>
<TD align="left">specifies that you can enter information.</TD></TR>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Alias:</B></TD>
<TD align="left" bgcolor="#F5F5F5">P=</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">No</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Use PROTECT= only for fields
that contain variables; fields that contain text are automatically protected.</TD>
</TABLE>
<P></DD>

<DT><A name="z0856405">&#13;REQUIRED=YES | NO</A></DT>
<DD>controls whether a field can be left blank. 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>NO</TD>
<TD align="left">specifies that you can leave the
field blank. </TD></TR>

<TR align=left valign="top">
<TD>YES</TD>
<TD align="left">specifies that you must enter a value
in the field. </TD></TR>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Default:</B></TD>
<TD align="left" bgcolor="#F5F5F5">NO</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">If you try to leave a field
blank that was defined with REQUIRED=YES, SAS does not allow you to input
values in any subsequent fields in the window.</TD>
</TABLE>
<P></DD>
</DL>
<P></DD>
</DL>

<BR><H3><A name="z0290141">Automatic Variables</A></H3>


<P>The
WINDOW statement creates two automatic SAS variables: _CMD_ and _MSG_. 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD><A name="z0856414">&#13;_CMD_</A></TD>
<TD align="left">contains the last command from the
window's command line that was not recognized by the window.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">_CMD_ is a character variable
of length 80; its value is set to  ' ' (blank) before each execution of a
DISPLAY statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0290153">Sending a Message</A></TD>
</TABLE>
</TD></TR>

<TR align=left valign="top">
<TD><A name="z0856418">&#13;_MSG_</A></TD>
<TD align="left">contains a message that you specify
to be displayed in the message area of the window.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">_MSG_ is a character variable
with length 80; its value is set to ' ' (blank) after each execution of a
DISPLAY statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0290153">Sending a Message</A></TD>
</TABLE>
</TD></TR>
</TABLE>

<BR><H3><A name="z0290142">Displaying Windows</A></H3>


<P>The DISPLAY
statement enables you to display windows. Once you display a window, the window
remains visible until you display another window over it or until the end
of the DATA step. When you display a window that contains fields into which
you can enter values, either enter a value or press ENTER at <B>each</B>
unprotected field to cause SAS to proceed to the next display. While a window
is being displayed, you can use commands and function keys to view other windows,
change the size of the current window, and so on. SAS execution proceeds to
the next display only after you have pressed ENTER in all unprotected fields.
<P>A DATA step that contains a DISPLAY statement continues
execution until
<P>
<UL>

<LI>the last observation that is read by a SET, MERGE,
MODIFY, UPDATE, or INPUT statement has been processed<P>

<LI>a STOP or ABORT statement is executed<P>

<LI>an END command
executes.<P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0290143">Comparisons</A></FONT></B></TD></TR></TABLE>

<P><A name="z0856427">&#13;</A>
<P>
<UL>

<LI>The
WINDOW statement creates a window, and the
DISPLAY statement displays it.<P>

<LI>The %WINDOW and %DISPLAY statements in the macro
language create and display windows that are controlled by the macro facility.<P>
</UL>

<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0290144">Examples</A></FONT></B></TD></TR></TABLE>

<BR><H3> <A name="z0290145">Example 1: Creating a Single Window</A> </H3>


<P>This DATA step creates a window with a single group of fields:



<PRE>data _null_;
   window start
          #9  @26 'WELCOME TO THE SAS SYSTEM'
                  color=black
          #12  @19 'THIS PROGRAM CREATES'
          #12  @40 'TWO SAS DATA SETS'
          #14 @26 'AND USES THREE PROCEDURES'
          #18 @27 'Press ENTER to continue';
    display start;
    stop;
run;</PRE>
<P>
<P><IMG border="0" src="./images/01332661.gif" vspace="12" alt="[IMAGE]">
<P>
<P>
<P>The
START window fills the entire display. The first
line of text is black. The other three lines are the default for your operating
environment. The text begins in the column that you specified in your program.
The START window does not require you to input any values. However, to exit
the window do one of the following: 
<P>
<UL>

<LI>Press ENTER to cause DATA step execution to proceed
to the STOP statement.<P>

<LI>Issue the END command.<P>
</UL>

<P>If you omit the STOP statement from this program, the
DATA step executes endlessly until you execute END from the window, either
with a function key or from the command line. (Because this DATA step does
not read any observations, SAS cannot detect an end-of-file to end DATA step
execution.)
<BR><H3> <A name="z0290147">Example 2: Displaying Two Windows Simultaneously</A> </H3>


<P>The following statements assign news articles to reporters. The list of article
topics is stored as variable art in SAS data set category.article. This application
allows you to assign each topic to a writer and to view the accumulating assignments.
The program creates a new SAS data set named Assignment. 






<PRE>libname category '<I>SAS-data-library</I>';

data Assignment;
   set category.article end=final;
   drop a b j s o;
   window Assignment irow=1 rows=12 color=white
          #3 @10 'Article:' +1 art protect=yes
          'Name:' +1 name $14.;
   window Showtotal irow=20 rows=12 color=white
          group=subtotal
          #1 @10 'Adams has' +1 a
          #2 @10 'Brown has' +1 b
          #3 @10 'Johnson has' +1 j
          #4 @10 'Smith has' +1 s
          #5 @10 'Other has' +1 o
          group=lastmessage
          #8 @10
          'ALL ARTICLES ASSIGNED. 
          Press ENTER to stop processing.';
   display Assignment blank;
   if name='Adams' then a+1;
   else if name='Brown' then b+1;
   else if name='Johnson' then j+1;
   else if name='Smith' then s+1;
   else o+1;
   display Showtotal.subtotal blank noinput;
   if final then display Showtotal.lastmessage;
run;</PRE>
<P>When you execute the DATA step, the following windows
appear.  

<P>
<P><IMG border="0" src="./images/01332662.gif" vspace="12" alt="[IMAGE]">
<P>
<P>In the Assignment window
(located at the top of the
display), you see the name of the article and a field into which you enter
a reporter's name. After you type a name and press ENTER, SAS displays the
Showtotal window (located at the bottom of the display) which shows the number
of articles that are assigned to each reporter (including the assignment that
you just made). As you continue to make assignments, the values in the Showtotal
window are updated. During the last iteration of the DATA step, SAS displays
the message that all articles are assigned, and instructs you to press ENTER
to stop processing.
<BR><H3> <A name="z0290149">Example 3: Persisting and Nonpersisting Fields</A> </H3>


<P>This example demonstrates the PERSIST= option. You move from one window to
the other by positioning the cursor in the current window and pressing ENTER. 



<PRE>data _null_;
   array row{3} r1-r3;
   array col{3} c1-c3;
   input row{*} col{*};
   window One
          rows=20 columns=36
          #1 @14 'PERSIST=YES' color=black
          #(row{i}) @(col{i}) 'Hello'
          color=black persist=yes;

   window Two
          icolumn=43 rows=20 columns=36
          #1 @14 'PERSIST=NO' color=black
          #(row{i}) @(col{i}) 'Hello'
          color=black persist=no;
   do i=1 to 3;
      display One;
      display Two;
   end;
   datalines;
5 10 15 5 10 15
;</PRE>


The following windows show the results of this DATA step after its
third
iteration.
<P>
<P>
<P><IMG border="0" src="./images/01332663.gif" vspace="12" alt="[IMAGE]">
<P>
<P>Note
that window One shows 


<CODE><B>Hello</B></CODE> in all three positions
in which it was displayed. Window Two shows only the third and final position
in which 


<CODE><B>Hello</B></CODE> was displayed.
<BR><H3> <A name="z0290153">Example 4: Sending a Message</A> </H3>


<P>This example
uses the _CMD_ and _MSG_ automatic variables to send a message when you execute
an erroneous windowing command in a window that is defined with the WINDOW
statement:  



<PRE>if _cmd_ ne ' ' then
   _msg_='CAUTION: UNRECOGNIZED COMMAND' || _cmd_;</PRE>


When you enter a
command that contains an error, SAS sets the value of _CMD_ to the text of
the erroneous command. Because the value of _CMD_ is no longer blank, the
IF statement is true. The THEN statement assigns to _MSG_ the value that is
created by concatenating CAUTION: UNRECOGNIZED COMMAND and the value of _CMD_
(up to a total of 80 characters). The next time a DISPLAY statement displays
that window, the message line of the window displays  



<PRE>CAUTION: UNRECOGNIZED COMMAND <I>command</I></PRE>


<I>Command</I> is the erroneous
windowing command.
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><FONT size="5"><A name="z0290156">See Also</A></FONT>
</FONT></B></TD></TR></TABLE>
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD>Statements:



<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD><A href="z0214656.htm">DISPLAY</A></TD></TR></TABLE></TD></TR>
<TR valign="top"><TD></TD><TD>"The
PMENU Procedure" in  
<B>SAS Procedures Guide</B></TD></TR></TABLE>

<HR><A name="footnote1"><FONT size="-1">FOOTNOTE 1:&nbsp;&nbsp;</FONT></A>You cannot use the WINDOW statement in batch mode because no  terminal is
connected to a batch executing process.&nbsp;<A href="#zr14-you"><IMG border="0" src="../common/images/fntarrow.gif" alt="[arrow]"></A>
<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0202951.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0212624.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0224863">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>