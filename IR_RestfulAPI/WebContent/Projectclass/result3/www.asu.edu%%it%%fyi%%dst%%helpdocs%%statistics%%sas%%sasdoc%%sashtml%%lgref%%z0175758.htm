<HTML>
<!-- This page produced Mon Jul 19 13:58:41 EDT 1999
 -->
<!-- Used program version 1.118.1.2 from beta -->
<HEAD>
<!-- <META http-equiv="Content-Type" content="text/html; charset="> -->
<TITLE>Statements : PUT, Formatted </TITLE></HEAD>
<BODY bgcolor="#FFFFFF">
<!-- navigation -->
<TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0176820.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0176623.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
</TR></TABLE>
<!-- running head -->
<TABLE width="100%" cellpadding="4">
<TR valign="MIDDLE">
<TD bgcolor="#CCCC99"><I><FONT size="2">PUT, Formatted</FONT></I></TD>
</TR>
</TABLE><H1><FONT size="5"><A name="z0175758">PUT, Formatted</A></FONT></H1>

<P><HR><BR><B>Writes variable values with the specified format in the output
line</B><p>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Valid:</B></TD>
<TD bgcolor="#CCCCCC" align="left">in a DATA step
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Category:</B></TD>
<TD bgcolor="#CCCCCC" align="left">File-handling
</TD></TR>
<TR valign="top">
<TD align="right" bgcolor="#F5F5F5" nowrap><B>Type:</B></TD>
<TD bgcolor="#CCCCCC" align="left">Executable
</TD></TR>
</TABLE><HR>
<TABLE cellspacing="0" cellpadding="1">
<TR>
<TD colspan="2"><A href="z0175758.htm#zid-2569"><FONT size="2"><B>Syntax</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0175758.htm#zid-2570"><FONT size="2"><B>Arguments</b></FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0175758.htm#z0218920"><FONT size="2"><B>Details</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0175758.htm#z0175867"><FONT size="2">Using Formatted Output</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0175758.htm#z0175757"><FONT size="2">How to Group Variables and Formats</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0175758.htm#z0218921"><FONT size="2"><B>Examples</b></FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0175758.htm#z0176045"><FONT size="2">Example 1: Writing a Character between Formatted Values</FONT></A></TD></TR>
<TR>
<TD width="18"></TD>
<TD><A href="z0175758.htm#z0176048"><FONT size="2">Example 2: Overriding the Default Alignment of Formatted Values</FONT></A></TD></TR>
<TR>
<TD colspan="2"><A href="z0175758.htm#z0218922"><FONT size="2"><B>See Also</b></FONT></A></TD></TR></TABLE>
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><H2><A name="zid-2569">Syntax</A></H2></TD></TR></TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PUT</B> &lt;<I>pointer-control</I>&gt; <I>variable
format.</I> &lt;@ | @@&gt;;
</TD></TR></TABLE>
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top"><TD>
<B>PUT</B> &lt;<I>pointer-control</I>&gt;
(<I>variable-list</I>) (<I>format-list</I>) 
<BR>&lt;@ | @@&gt;;
</TD></TR></TABLE>
<BR><H3><A name="zid-2570">Arguments</A></H3>

<P><A name="z0855065">&#13;</A>
<DL>
<DT><B><B><I>pointer-control</I></B></B></DT>
<DD>moves the output pointer to a specified
line or column.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z0161869.htm#z0149798">Column Pointer Controls</A> and
<A href="z0161869.htm#z0150137">Line Pointer Controls</A></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176045">Writing a Character between Formatted Values</A></TD>
</TABLE>
<P></DD>

<DT><B><B><I>variable</I></B></B></DT>
<DD>names the variable whose value is written.<P></DD>

<DT><B>(<B><I>variable-list</I></B>)</B></DT>
<DD>specifies a list of variables whose values
are written.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Requirement:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The (<B><I>format-list</I></B>) must follow the (<B><I>variable-list</I></B>). </TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0175757">How to Group Variables and Formats</A></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176045">Writing a Character between Formatted Values</A></TD>
</TABLE>
<P></DD>

<DT><B><B><I>format.</I></B></B></DT>
<DD>specifies a format to use when the variable
values are written. To override the default alignment, you can add an alignment
specification to a format: 
<TABLE cellpadding="5" cellspacing="0">
<TR align=left valign="top">
<TD>-L</TD>
<TD align="left">left aligns the value.</TD></TR>

<TR align=left valign="top">
<TD>-C</TD>
<TD align="left">centers the value.</TD></TR>

<TR align=left valign="top">
<TD>-R</TD>
<TD align="left">right aligns the value.</TD></TR>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">Ensure that the format width
provides enough space to write the value and any commas, dollar signs, decimal
points, or other special characters that the format includes.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Example:</B></TD>
<TD align="left" bgcolor="#F5F5F5">This PUT statement uses
the format dollar7.2 to write the value of X:  



<PRE>put x dollar7.2;</PRE>


When X
is 100, the formatted value uses seven columns:  



<PRE>$100.00</PRE></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Featured
in:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176048">Overriding the Default Alignment of Formatted Values</A></TD>
</TABLE>
<P></DD>

<DT><B>(<B><I>format-list</I></B>)</B></DT>
<DD>specifies a list of formats to use when
the values of the preceding list of variables are written.  In a PUT statement,
a <B><I><B>format-list</B></I></B> can include 
<P>
<DL>
<DT><B><I><B><I>format.</I></B></I></B></DT>
<DD>specifies the format to use to write the
variable values.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Tip:</B></TD>
<TD align="left" bgcolor="#F5F5F5">You can specify either a
SAS format or a user-written format. See
<A href="z0309859.htm">Formats</A>.</TD>
</TABLE>
<P></DD>

<DT><B><I><B><I>pointer-control</I></B></I></B></DT>
<DD>specifies one of these pointer controls
to use to position a value: @, #, /, +, and OVERPRINT.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Example:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176045">Writing a Character between Formatted Values</A></TD>
</TABLE>
<P></DD>

<DT><B><I><B><I>character-string</I></B></I></B></DT>
<DD>specifies one or more characters to place
between formatted values.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Example:</B></TD>
<TD align="left" bgcolor="#F5F5F5">This statement places
a hyphen between the formatted values of CODE1, CODE2, and CODE3:



<PRE>put bldg $ (code1 code2 code3) (3. '-');</PRE></TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0176045">Writing a Character between Formatted Values</A></TD>
</TABLE>
<P></DD>

<DT><B><I><B><I>n</I></B></I></B>*</DT>
<DD>specifies to repeat <B><I><B>n</B></I></B> times the next format in a format list.
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Example:</B></TD>
<TD align="left" bgcolor="#F5F5F5">This statement uses
the 7.2 format to write GRADES1, GRADES2, and GRADES3 and the 5.2 format to
write GRADES4 and GRADES5:



<PRE>put (grades1-grades5) (3*7.2, 2*5.2);</PRE></TD>
</TABLE>

<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The (<B><I><B>format-list</B></I></B>) must follow
(<B><I><B>variable-list</B></I></B>).</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See
Also:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="#z0175757">How to Group Variables and Formats</A></TD>
</TABLE>
<P></DD>
</DL>
<P></DD>

<DT><B><A name="z0855105">&#13;@| @@</A></B></DT>
<DD>holds an output line for the execution of
the next PUT statement even across iterations of the DATA step. These line-hold
specifiers are called <I><B>trailing @</B></I> and <I><B>double trailing @</B></I>. 
<TABLE cellpadding="4" cellspacing="2">
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>Restriction:</B></TD>
<TD align="left" bgcolor="#F5F5F5">The trailing @ or
double trailing @  must be the last item in the PUT statement.</TD>
<TR valign="top">
<TD align="left" bgcolor="#F5F5F5" width="95" nowrap><B>See:</B></TD>
<TD align="left" bgcolor="#F5F5F5"><A href="z0161869.htm#z0162610">Using Line-hold Specifiers</A></TD>
</TABLE>
<P></DD>
</DL>


<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0218920">Details</A></FONT></B></TD></TR></TABLE>

<BR><H3><A name="z0175867">Using Formatted Output</A></H3>


<P>The Formatted output describes the output lines by listing the variable names
and the formats to use to write the values. You can use a SAS format or a
user-written format to control how SAS prints the variable values.  For a
complete description of the SAS formats, see <A href="z0202062.htm">Definition</A>
. 
<P>With formatted output, the PUT statement uses the format
that follows the variable name to write each value. SAS does not automatically
add blanks between values. If the value uses fewer columns than specified,
character values are left-aligned and numeric values are right-aligned in
the field that is specified by the format width. 
<P>Formatted output, combined with pointer controls, makes
it possible to specify the exact line and column location to write each variable.
For example, this PUT statement uses the dollar7.2 format and centers the
value of X starting at column 12:  



<PRE>put @12 x dollar7.2-c;</PRE>
<BR><H3><A name="z0175757">How to Group Variables and Formats</A></H3>


<P>When you want to write values in a pattern on the output lines, use format
lists to shorten your coding time. A format list consists of the corresponding
formats separated by either blanks or commas and enclosed in parentheses.
It must follow the names of the variables enclosed in parentheses.
<P>For example, this statement uses a format list to write
the five variables SCORE1 through SCORE5, one after another, using four columns
for each value with no blanks in between:  



<PRE>put (score1-score5) (4. 4. 4. 4. 4.);</PRE>


A shorter version of the previous statement is



<PRE>put (score1-score5) (4.);</PRE>
<P>You can include any of the pointer controls (@, #, /,
+, and OVERPRINT) in the list of formats, as well as <I><B>n</B></I>*, and a character string. You can use as many format
lists as necessary in a PUT statement, but do not nest the format lists. After
all the values in the variable list are written, the PUT statement ignores
any directions that remain in the format list. 
<P>For example, this format list  includes more specifications
than are necessary when the PUT statement writes the last variable:  



<PRE>data _null_;
   input x y z; 
   put (x y z) (2.,+1);
   datalines;
2 24 36
0 20 30
;</PRE>


The PUT statement writes the value of X using the 2. format. Then,
the +1 column pointer control moves the pointer forward one column. Next,
the value of Y is written with the 2. format. Again, the +1 column pointer
moves the pointer forward one column. Then, the value of Z is written with
the 2. format.  For the third iteration, the PUT statement ignores the +1
pointer control.
<P>These lines are written to the SAS log:<FONT size="-1"><A href="#footnote1">(footnote 1)</A></FONT>



<PRE>----+----1----+
2 24 36
0 20 30</PRE>
<P>You can also specify a reference to all elements in
an array as (<I><B>array-name</B></I> {*}), followed
by a list of formats. You cannot, however, specify the elements in a _TEMPORARY_
array in this way. This PUT statement specifies an array name and a format
list:  



<PRE>put (array1{*}) (4.);</PRE>


For more information on how
to reference an array, see <A href="z0161869.htm#z0175958">Arrays</A>. 
<P><TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><A name="z0218921">Examples</A></FONT></B></TD></TR></TABLE>

<BR><H3> <A name="z0176045">Example 1: Writing a Character between Formatted Values</A> </H3>


<P>This example formats some values and writes a - (hyphen)
between the values of variables BLDG and ROOM:  



<PRE>data _null_;
   input name &amp; $15. bldg $ room;
   put name @20 (bldg room) ($1. "-" 3.);
   datalines;
Bill Perkins  J 126
Sydney Riley  C 219
;</PRE>


These lines are written to the SAS log:  



<PRE>Bill Perkins       J-126
Sydney Riley       C-219</PRE>
<BR><H3> <A name="z0176048">Example 2: Overriding the Default Alignment of Formatted Values</A> </H3>


<P>This example includes an alignment specification in
the format:  



<PRE>data _null_;
   input name $ 1-12 score1 score2 score3;
   put name $12.-r +3 score1 3. score2 3. 
       score3 4.;
   datalines;
Joseph                  11   32   76
Mitchel                 13   29   82
Sue Ellen               14   27   74
;</PRE>
<P>These lines are written to the log: 



<PRE>----+----1----+----2----+----3----+----4
      Joseph    11 32  76
     Mitchel    13 29  82
   Sue Ellen    14 27  74</PRE>The value of the character variable NAME is
right-aligned in the formatted field. (Left alignment is the default for character
variables.)
<TABLE width="100%" cellpadding="0" cellspacing="0">
<TR valign="bottom"><TD><HR></TD></TR>
<TR valign="top"><TD><B><FONT size="5"><FONT size="5"><A name="z0218922">See Also</A></FONT>
</FONT></B></TD></TR></TABLE>
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD> Statement:
<P>
<TABLE cellpadding="6" cellspacing="2">
<TR valign="top"><TD></TD><TD><A href="z0161869.htm">PUT</A></TD></TR></TABLE></TD></TR></TABLE>

<HR><A name="footnote1"><FONT size="-1">FOOTNOTE 1:&nbsp;&nbsp;</FONT></A>The ruled line is for illustrative purposes only; the
PUT statement does not generate it.&nbsp;<A href="#z0218923"><IMG border="0" src="../common/images/fntarrow.gif" alt="[arrow]"></A>
<P><!-- navigation -->
<P><TABLE cellpadding="0" cellspacing="0">
<TR valign="top">
<TD align="center">
<A href="z0293668.htm">
<IMG border="0" SRC="../common/images/cont1.gif"><BR><FONT size="-2">Chapter Contents</FONT></A></TD>
<TD align="center">
<A href="z0176820.htm">
<IMG border="0" src="../common/images/prev1.gif"><BR><FONT size="-2">Previous</FONT></A></TD>
<TD align="center">
<A href="z0176623.htm">
<IMG border="0" SRC="../common/images/next1.gif"><BR><FONT size="-2">Next</FONT></A></TD>
<TD align="center">
<A href="#z0175758">
<IMG border="0" SRC="../common/images/top1.gif"><BR><FONT size="-2">Top of Page</FONT></A></TD>
</TR></TABLE>
<P><FONT size=1><A href="../common/images/copyrite.htm">Copyright 1999 by SAS Institute Inc., Cary, NC, USA. All rights reserved.</A></FONT>
</BODY>
</HTML>